--- a/net/minecraft/world/level/SpawnerCreature.java
+++ b/net/minecraft/world/level/SpawnerCreature.java
###############
# Cant find matching values
###############
@@ -111,10 +117,54 @@
         EnumCreatureType[] aenumcreaturetype = SpawnerCreature.SPAWNING_CATEGORIES;
         int i = aenumcreaturetype.length;
 
+        WorldData worlddata = worldserver.getLevelData(); // CraftBukkit - Other mob type spawn tick rate
+
         for (int j = 0; j < i; ++j) {
             EnumCreatureType enumcreaturetype = aenumcreaturetype[j];
+            // CraftBukkit start - Use per-world spawn limits
+            boolean spawnThisTick = true;
+            int limit = enumcreaturetype.getMaxInstancesPerChunk();
+            switch (enumcreaturetype) {
+                case MONSTER:
+                    spawnThisTick = spawnMonsterThisTick;
+                    limit = worldserver.getWorld().getMonsterSpawnLimit();
+                    break;
+                case CREATURE:
+                    spawnThisTick = spawnAnimalThisTick;
+                    limit = worldserver.getWorld().getAnimalSpawnLimit();
+                    break;
+                case WATER_CREATURE:
+                    spawnThisTick = spawnWaterThisTick;
+                    limit = worldserver.getWorld().getWaterAnimalSpawnLimit();
+                    break;
+                case UNDERGROUND_WATER_CREATURE:
+                    spawnThisTick = spawnWaterUndergroundCreatureThisTick;
+                    limit = worldserver.getWorld().getWaterUndergroundCreatureSpawnLimit();
+                    break;
+                case AMBIENT:
+                    spawnThisTick = spawnAmbientThisTick;
+                    limit = worldserver.getWorld().getAmbientSpawnLimit();
+                    break;
+                case WATER_AMBIENT:
+                    spawnThisTick = spawnWaterAmbientThisTick;
+                    limit = worldserver.getWorld().getWaterAmbientSpawnLimit();
+                    break;
+            }
 
-            if ((flag || !enumcreaturetype.isFriendly()) && (flag1 || enumcreaturetype.isFriendly()) && (flag2 || !enumcreaturetype.isPersistent()) && spawnercreature_d.canSpawnForCategory(enumcreaturetype, chunk.getPos())) {
+            if (!spawnThisTick || limit == 0) {
+                continue;
+            }
+
+            if ((flag || !enumcreaturetype.isFriendly()) && (flag1 || enumcreaturetype.isFriendly()) && (flag2 || !enumcreaturetype.isPersistent()) && spawnercreature_d.canSpawnForCategory(enumcreaturetype, chunk.getPos(), limit)) {
+                // CraftBukkit end
                 Objects.requireNonNull(spawnercreature_d);
                 SpawnerCreature.c spawnercreature_c = spawnercreature_d::canSpawn;
 
