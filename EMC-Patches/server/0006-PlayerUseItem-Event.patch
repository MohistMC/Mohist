From 29e5d53c56b3d71a8a154d915fbcd74bd2496649 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sat, 22 Dec 2012 00:35:15 -0500
Subject: [PATCH] PlayerUseItem Event

This lets us control when an item is consumed and change the item.
---
 .../net/minecraft/server/EntityLiving.java    |  2 +-
 .../server/PlayerInteractManager.java         | 89 ++++++++++++++++---
 2 files changed, 80 insertions(+), 11 deletions(-)

diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index ed5bb2d32c..a33049c680 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -1574,7 +1574,7 @@ public abstract class EntityLiving extends Entity {
         }
     }
 
-    public void a(EnumHand enumhand, ItemStack itemstack) {
+    public void setHand(EnumHand hand, ItemStack item) { a(hand, item); } public void a(EnumHand enumhand, ItemStack itemstack) { // Paper - OBFHELPER
         if (enumhand == EnumHand.MAIN_HAND) {
             this.setSlot(EnumItemSlot.MAINHAND, itemstack);
         } else {
diff --git a/src/main/java/net/minecraft/server/PlayerInteractManager.java b/src/main/java/net/minecraft/server/PlayerInteractManager.java
index 3d86798248..cef982f039 100644
--- a/src/main/java/net/minecraft/server/PlayerInteractManager.java
+++ b/src/main/java/net/minecraft/server/PlayerInteractManager.java
@@ -2,6 +2,7 @@ package net.minecraft.server;
 
 // CraftBukkit start
 import java.util.ArrayList;
+import org.bukkit.entity.Player;
 import org.bukkit.event.block.BlockBreakEvent;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.event.Event;
@@ -421,6 +422,14 @@ public class PlayerInteractManager {
     }
 
     public EnumInteractionResult a(EntityHuman entityhuman, World world, ItemStack itemstack, EnumHand enumhand) {
+        // Paper start - Allow control over if item should be consumed or not.
+        org.bukkit.inventory.EquipmentSlot bukkitHand = enumhand == EnumHand.MAIN_HAND ? org.bukkit.inventory.EquipmentSlot.HAND : org.bukkit.inventory.EquipmentSlot.OFF_HAND;
+        org.bukkit.craftbukkit.inventory.CraftItemStack craftitem = org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(itemstack);
+        com.empireminecraft.customevents.PlayerUseItemEvent event = new com.empireminecraft.customevents.PlayerUseItemEvent(player.getBukkitEntity(), craftitem, bukkitHand);
+        if (!event.callEvent()) {
+            return EnumInteractionResult.FAIL;
+        }
+        // Paper end
         if (this.gamemode == EnumGamemode.SPECTATOR) {
             return EnumInteractionResult.PASS;
         } else if (entityhuman.getCooldownTracker().a(itemstack.getItem())) {
@@ -428,27 +437,52 @@ public class PlayerInteractManager {
         } else {
             int i = itemstack.getCount();
             int j = itemstack.getData();
+            // Paper start
+            ItemStack orig = itemstack;
+            if (event.getTempItem() != null) {
+                itemstack = org.bukkit.craftbukkit.inventory.CraftItemStack.asNMSCopy(event.getTempItem());
+                entityhuman.setHand(enumhand, itemstack);
+            }
+            // Paper end
             InteractionResultWrapper interactionresultwrapper = itemstack.a(world, entityhuman, enumhand);
             ItemStack itemstack1 = (ItemStack) interactionresultwrapper.b();
+            // Paper start - change order and redo lots of things here.
+            if (event.getTempItem() != null) {
+                // restore original item
+                entityhuman.setHand(enumhand, itemstack1 = orig);
+            }
 
-            if (itemstack1 == itemstack && itemstack1.getCount() == i && itemstack1.m() <= 0 && itemstack1.getData() == j) {
-                return interactionresultwrapper.a();
-            } else if (interactionresultwrapper.a() == EnumInteractionResult.FAIL && itemstack1.m() > 0 && !entityhuman.isHandRaised()) {
+            // This was just a short circuit, always run post use on success
+            boolean isSame = itemstack1 == itemstack && itemstack1.getCount() == i && itemstack1.getItemUseMaxDuration() <= 0 && itemstack1.getData() == j;
+            // if fail, abort - this is vanilla
+            if (interactionresultwrapper.a() == EnumInteractionResult.FAIL && itemstack1.m() > 0 && !entityhuman.isHandRaised()) {
                 return interactionresultwrapper.a();
             } else {
-                entityhuman.a(enumhand, itemstack1);
-                if (this.isCreative()) {
+                if (!event.shouldConsumeItem() || this.isCreative()) {  // Paper - add getConsumeItem - moved up
                     itemstack1.setCount(i);
                     if (itemstack1.f()) {
                         itemstack1.setData(j);
                     }
                 }
+                org.bukkit.inventory.ItemStack craftNew = org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(itemstack1);
+                com.destroystokyo.paper.event.player.PlayerPostUseItemEvent postUseItemEvent = new com.destroystokyo.paper.event.player.PlayerPostUseItemEvent(player.getBukkitEntity(), craftitem.asQuantity(i), craftNew, bukkitHand);
+                postUseItemEvent.callEvent();
+
+                //noinspection ObjectEquality
+                if (craftNew != postUseItemEvent.getNewItem()) {
+                    // Use a different new item instead. Not good to do if its a "Hold to use item" FYI!
+                    itemstack1 = org.bukkit.craftbukkit.inventory.CraftItemStack.asNMSCopy(postUseItemEvent.getNewItem());
+                    isSame = false;
+                }
+                entityhuman.a(enumhand, itemstack1);
+                // Paper end
 
                 if (itemstack1.isEmpty()) {
                     entityhuman.a(enumhand, ItemStack.a);
+                    isSame = false; // Paper
                 }
 
-                if (!entityhuman.isHandRaised()) {
+                if (itemstack1.isEmpty() || (!isSame && !entityhuman.isHandRaised())) { // Paper - add !isSame
                     ((EntityPlayer) entityhuman).updateInventory(entityhuman.defaultContainer);
                 }
 
@@ -460,7 +494,8 @@ public class PlayerInteractManager {
     // CraftBukkit start - whole method
     public boolean interactResult = false;
     public boolean firedInteract = false;
-    public EnumInteractionResult a(EntityHuman entityhuman, World world, ItemStack itemstack, EnumHand enumhand, BlockPosition blockposition, EnumDirection enumdirection, float f, float f1, float f2) {
+    public EnumInteractionResult a(EntityHuman entityhuman, World world, ItemStack itemstack, EnumHand enumhand, BlockPosition blockposition, EnumDirection enumdirection, float f, float f1, float f2) {org.bukkit.util.Vector hitVector = new org.bukkit.util.Vector(f, f1, f2); // Paper - OBFHELPER
+
         IBlockData blockdata = world.getType(blockposition);
         EnumInteractionResult enuminteractionresult = EnumInteractionResult.FAIL;
         if (blockdata.getBlock() != Blocks.AIR) {
@@ -545,16 +580,50 @@ public class PlayerInteractManager {
             }
 
             if (!itemstack.isEmpty() && enuminteractionresult != EnumInteractionResult.SUCCESS && !interactResult) { // add !interactResult SPIGOT-764
+                // Paper start - Allow control over if item should be consumed or not.
+                org.bukkit.inventory.EquipmentSlot bukkitHand = enumhand == EnumHand.MAIN_HAND ? org.bukkit.inventory.EquipmentSlot.HAND : org.bukkit.inventory.EquipmentSlot.OFF_HAND;
+                org.bukkit.craftbukkit.inventory.CraftItemStack craftitem = org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(itemstack);
+                com.empireminecraft.customevents.PlayerPlaceItemAtEvent eventPlace = new com.empireminecraft.customevents.PlayerPlaceItemAtEvent(
+                    (Player) entityhuman.getBukkitEntity(), craftitem,
+                    MCUtil.toLocation(world, blockposition),
+                    org.bukkit.craftbukkit.block.CraftBlock.notchToBlockFace(enumdirection),
+                    hitVector, bukkitHand);
+
+                if (!eventPlace.callEvent()) {
+                    return EnumInteractionResult.FAIL;
+                }
+                // Paper end
                 int i = itemstack.getData();
                 int j = itemstack.getCount();
-
+                // Paper start
+                ItemStack orig = itemstack;
+                if (eventPlace.getTempItem() != null) {
+                    itemstack = org.bukkit.craftbukkit.inventory.CraftItemStack.asNMSCopy(eventPlace.getTempItem());
+                    entityhuman.setHand(enumhand, itemstack);
+                }
+                // Paper end
                 enuminteractionresult = itemstack.placeItem(entityhuman, world, blockposition, enumhand, enumdirection, f, f1, f2);
-
+                // Paper start
+                if (eventPlace.getTempItem() != null) {
+                    entityhuman.setHand(enumhand, itemstack = orig);
+                }
                 // The item count should not decrement in Creative mode.
-                if (this.isCreative()) {
+                if (!eventPlace.getConsumeItem() || this.isCreative()) { // Paper - add getConsumeItem
+                    // Paper end
                     itemstack.setData(i);
                     itemstack.setCount(j);
                 }
+
+                // Paper start
+                if (enuminteractionresult != EnumInteractionResult.FAIL) {
+                    com.destroystokyo.paper.event.player.PlayerPostPlaceItemAtEvent postUseItemEvent =
+                        new com.destroystokyo.paper.event.player.PlayerPostPlaceItemAtEvent(player.getBukkitEntity(), craftitem,
+                            MCUtil.toLocation(world, blockposition),
+                            org.bukkit.craftbukkit.block.CraftBlock.notchToBlockFace(enumdirection),
+                            hitVector, bukkitHand);
+                    postUseItemEvent.callEvent();
+                }
+                // Paper end
             }
         }
         return enuminteractionresult;
-- 
2.19.1

