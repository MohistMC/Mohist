From 7126b18f16db5fa5d5c9d9f8da9e19f5d6b4b6f6 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 25 Jun 2018 22:29:57 -0400
Subject: [PATCH] EntityRandomStrollEvent

---
 .../event/entity/EntityRandomStrollEvent.java | 85 +++++++++++++++++++
 1 file changed, 85 insertions(+)
 create mode 100644 src/main/java/com/destroystokyo/paper/event/entity/EntityRandomStrollEvent.java

diff --git a/src/main/java/com/destroystokyo/paper/event/entity/EntityRandomStrollEvent.java b/src/main/java/com/destroystokyo/paper/event/entity/EntityRandomStrollEvent.java
new file mode 100644
index 00000000..1a2fd63d
--- /dev/null
+++ b/src/main/java/com/destroystokyo/paper/event/entity/EntityRandomStrollEvent.java
@@ -0,0 +1,85 @@
+/*
+ * Copyright (c) 2018 Daniel Ennis (Aikar) MIT License
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining
+ *  a copy of this software and associated documentation files (the
+ *  "Software"), to deal in the Software without restriction, including
+ *  without limitation the rights to use, copy, modify, merge, publish,
+ *  distribute, sublicense, and/or sell copies of the Software, and to
+ *  permit persons to whom the Software is furnished to do so, subject to
+ *  the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be
+ *  included in all copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ *  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+ *  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+ *  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+ *  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+ *  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.destroystokyo.paper.event.entity;
+
+import org.bukkit.Location;
+import org.bukkit.entity.Creature;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.Event;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.entity.EntityEvent;
+
+import java.util.Objects;
+
+public class EntityRandomStrollEvent extends EntityEvent implements Cancellable {
+    private Location location;
+    private double speed;
+
+    public EntityRandomStrollEvent(Creature entity, Location location, double speed) {
+        super(entity);
+        this.location = location;
+        this.speed = speed;
+    }
+
+    public Location getLocation() {
+        return location;
+    }
+
+    public void setLocation(Location location) {
+        if (!Objects.equals(location.getWorld(), this.location.getWorld())) {
+            throw new IllegalArgumentException("Cannot change worlds");
+        }
+        this.location = location;
+    }
+
+    public double getSpeed() {
+        return speed;
+    }
+
+    public void setSpeed(double speed) {
+        this.speed = speed;
+    }
+
+    private static final HandlerList handlers = new HandlerList();
+
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+
+    private boolean cancelled = false;
+
+    @Override
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    @Override
+    public void setCancelled(boolean cancel) {
+        cancelled = cancel;
+    }
+}
-- 
2.18.0

