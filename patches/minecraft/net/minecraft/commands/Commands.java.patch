--- a/net/minecraft/commands/Commands.java
+++ b/net/minecraft/commands/Commands.java
@@ -1,6 +_,8 @@
 package net.minecraft.commands;
 
+import com.google.common.base.Joiner;
 import com.google.common.collect.Maps;
+import com.mohistmc.util.i18n.i18n;
 import com.mojang.brigadier.CommandDispatcher;
 import com.mojang.brigadier.ParseResults;
 import com.mojang.brigadier.StringReader;
@@ -12,6 +_,8 @@
 import com.mojang.brigadier.tree.CommandNode;
 import com.mojang.brigadier.tree.RootCommandNode;
 import com.mojang.logging.LogUtils;
+import java.util.Collection;
+import java.util.LinkedHashSet;
 import java.util.Map;
 import java.util.Set;
 import java.util.function.Predicate;
@@ -106,6 +_,8 @@
 import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.util.profiling.jfr.JvmProfiler;
 import org.slf4j.Logger;
+import org.bukkit.event.player.PlayerCommandSendEvent;
+import org.bukkit.event.server.ServerCommandEvent;
 
 public class Commands {
    private static final Logger f_82089_ = LogUtils.getLogger();
@@ -177,7 +_,7 @@
          JfrCommand.m_183645_(this.f_82090_);
       }
 
-      if (SharedConstants.f_136183_) {
+      if (net.minecraftforge.gametest.ForgeGameTestHooks.isGametestEnabled()) {
          TestCommand.m_127946_(this.f_82090_);
       }
 
@@ -201,6 +_,7 @@
       if (p_82093_.f_82144_) {
          PublishCommand.m_138184_(this.f_82090_);
       }
+      net.minecraftforge.event.ForgeEventFactory.onCommandRegister(this.f_82090_, p_82093_);
 
       this.f_82090_.findAmbiguities((p_82108_, p_82109_, p_82110_, p_82111_) -> {
          f_82089_.warn("Ambiguity between arguments {} and {} with inputs: {}", this.f_82090_.getPath(p_82109_), this.f_82090_.getPath(p_82110_), p_82111_);
@@ -210,9 +_,55 @@
       });
    }
 
+    public Commands() {
+       this.f_82090_.setConsumer((p_82104_, p_82105_, p_82106_) -> {
+          p_82104_.getSource().m_81342_(p_82104_, p_82105_, p_82106_);
+       });
+    }
+
+   // CraftBukkit start
+   public int dispatchServerCommand(CommandSourceStack sender, String command) {
+      Joiner joiner = Joiner.on(" ");
+      if (command.startsWith("/")) {
+         command = command.substring(1);
+      }
+
+      ServerCommandEvent event = new ServerCommandEvent(sender.getBukkitSender(), command);
+      org.bukkit.Bukkit.getPluginManager().callEvent(event);
+      if (event.isCancelled()) {
+         return 0;
+      }
+      command = event.getCommand();
+
+      String[] args = command.split(" ");
+
+      String cmd = args[0];
+      if (cmd.startsWith("minecraft:")) cmd = cmd.substring("minecraft:".length());
+      if (cmd.startsWith("bukkit:")) cmd = cmd.substring("bukkit:".length());
+
+      // Block disallowed commands
+      if (cmd.equalsIgnoreCase("stop") || cmd.equalsIgnoreCase("kick") || cmd.equalsIgnoreCase("op")
+              || cmd.equalsIgnoreCase("deop") || cmd.equalsIgnoreCase("ban") || cmd.equalsIgnoreCase("ban-ip")
+              || cmd.equalsIgnoreCase("pardon") || cmd.equalsIgnoreCase("pardon-ip") || cmd.equalsIgnoreCase("reload")) {
+         return 0;
+      }
+
+      // Handle vanilla commands;
+      if (sender.m_81372_().getCraftServer().getCommandBlockOverride(args[0])) {
+         args[0] = "minecraft:" + args[0];
+      }
+
+      String newCommand = joiner.join(args);
+      return this.performCommand(sender, newCommand, newCommand, false);
+   }
+
    public int m_82117_(CommandSourceStack p_82118_, String p_82119_) {
+      return this.performCommand(p_82118_, p_82119_, p_82119_, true);
+   }
+
+    public int performCommand(CommandSourceStack p_82118_, String p_82119_, String label, boolean stripSlash) {
       StringReader stringreader = new StringReader(p_82119_);
-      if (stringreader.canRead() && stringreader.peek() == '/') {
+      if (stripSlash && stringreader.canRead() && stringreader.peek() == '/') {
          stringreader.skip();
       }
 
@@ -220,7 +_,17 @@
 
       try {
          try {
-            return this.f_82090_.execute(stringreader, p_82118_);
+            ParseResults<CommandSourceStack> parse = this.f_82090_.parse(stringreader, p_82118_);
+            net.minecraftforge.event.CommandEvent event = new net.minecraftforge.event.CommandEvent(parse);
+            if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(event)) {
+               if (event.getException() instanceof Exception exception) {
+                  throw exception;
+               } else if (event.getException() != null) {
+                  com.google.common.base.Throwables.throwIfUnchecked(event.getException());
+               }
+               return 1;
+            }
+            return this.f_82090_.execute(event.getParseResults());
          } catch (CommandRuntimeException commandruntimeexception) {
             p_82118_.m_81352_(commandruntimeexception.m_79226_());
             return 0;
@@ -229,7 +_,7 @@
             if (commandsyntaxexception.getInput() != null && commandsyntaxexception.getCursor() >= 0) {
                int j = Math.min(commandsyntaxexception.getInput().length(), commandsyntaxexception.getCursor());
                MutableComponent mutablecomponent1 = (new TextComponent("")).m_130940_(ChatFormatting.GRAY).m_130938_((p_82134_) -> {
-                  return p_82134_.m_131142_(new ClickEvent(ClickEvent.Action.SUGGEST_COMMAND, p_82119_));
+                  return p_82134_.m_131142_(new ClickEvent(ClickEvent.Action.SUGGEST_COMMAND, label));
                });
                if (j > 10) {
                   mutablecomponent1.m_130946_("...");
@@ -247,7 +_,7 @@
          } catch (Exception exception) {
             MutableComponent mutablecomponent = new TextComponent(exception.getMessage() == null ? exception.getClass().getName() : exception.getMessage());
             if (f_82089_.isDebugEnabled()) {
-               f_82089_.error("Command exception: {}", p_82119_, exception);
+               f_82089_.error(i18n.get("commands.1", p_82119_, exception));
                StackTraceElement[] astacktraceelement = exception.getStackTrace();
 
                for(int i = 0; i < Math.min(astacktraceelement.length, 3); ++i) {
@@ -273,10 +_,36 @@
    }
 
    public void m_82095_(ServerPlayer p_82096_) {
-      Map<CommandNode<CommandSourceStack>, CommandNode<SharedSuggestionProvider>> map = Maps.newHashMap();
+      // CraftBukkit start
+      // Register Vanilla commands into builtRoot as before
+      Map<CommandNode<CommandSourceStack>, CommandNode<SharedSuggestionProvider>> map = Maps.newIdentityHashMap(); // Use identity to prevent aliasing issues
+      RootCommandNode vanillaRoot = new RootCommandNode();
+
+      RootCommandNode<CommandSourceStack> vanilla = p_82096_.f_8924_.vanillaCommandDispatcher.m_82094_().getRoot();
+      map.put(vanilla, vanillaRoot);
+      this.m_82112_(vanilla, vanillaRoot, p_82096_.m_20203_(), (Map) map);
+
+      // Now build the global commands in a second pass
       RootCommandNode<SharedSuggestionProvider> rootcommandnode = new RootCommandNode<>();
+
       map.put(this.f_82090_.getRoot(), rootcommandnode);
-      this.m_82112_(this.f_82090_.getRoot(), rootcommandnode, p_82096_.m_20203_(), map);
+//    FORGE: Use our own command node merging method to handle redirect nodes properly, see issue #7551
+      net.minecraftforge.server.command.CommandHelper.mergeCommandNode(this.f_82090_.getRoot(), rootcommandnode, map, p_82096_.m_20203_(), ctx -> 0, suggest -> SuggestionProviders.m_121664_((com.mojang.brigadier.suggestion.SuggestionProvider<SharedSuggestionProvider>) (com.mojang.brigadier.suggestion.SuggestionProvider<?>) suggest));
+      Collection<String> bukkit = new LinkedHashSet<>();
+      for (CommandNode node : rootcommandnode.getChildren()) {
+         bukkit.add(node.getName());
+      }
+
+      PlayerCommandSendEvent event = new PlayerCommandSendEvent(p_82096_.getBukkitEntity(), new LinkedHashSet<>(bukkit));
+      event.getPlayer().getServer().getPluginManager().callEvent(event);
+
+      // Remove labels that were removed during the event
+      for (String orig : bukkit) {
+         if (!event.getCommands().contains(orig)) {
+            //rootcommandnode.removeCommand(orig); Mohsit TODO
+         }
+      }
+      // CraftBukkit end
       p_82096_.f_8906_.m_141995_(new ClientboundCommandsPacket(rootcommandnode));
    }
 
