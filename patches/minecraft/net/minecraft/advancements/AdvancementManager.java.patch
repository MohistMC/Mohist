--- ../src-base/minecraft/net/minecraft/advancements/AdvancementManager.java
+++ ../src-work/minecraft/net/minecraft/advancements/AdvancementManager.java
@@ -50,8 +50,8 @@
             return Advancement.Builder.func_192059_a(jsonobject, p_deserialize_3_);
         }
     }).registerTypeAdapter(AdvancementRewards.class, new AdvancementRewards.Deserializer()).registerTypeHierarchyAdapter(ITextComponent.class, new ITextComponent.Serializer()).registerTypeHierarchyAdapter(Style.class, new Style.Serializer()).registerTypeAdapterFactory(new EnumTypeAdapterFactory()).create();
-    private static final AdvancementList field_192784_c = new AdvancementList();
-    private final File field_192785_d;
+    public static final AdvancementList field_192784_c = new AdvancementList();
+    public final File field_192785_d;
     private boolean field_193768_e;
 
     public AdvancementManager(@Nullable File p_i47421_1_)
@@ -66,6 +66,7 @@
         field_192784_c.func_192087_a();
         Map<ResourceLocation, Advancement.Builder> map = this.func_192781_c();
         this.func_192777_a(map);
+        this.field_193768_e |= net.minecraftforge.common.ForgeHooks.loadAdvancements(map);
         field_192784_c.func_192083_a(map);
 
         for (Advancement advancement : field_192784_c.func_192088_b())
@@ -108,7 +109,7 @@
 
                         if (advancement$builder == null)
                         {
-                            field_192782_a.error("Couldn't load custom advancement " + resourcelocation + " from " + file1 + " as it's empty or null");
+                            field_192782_a.debug("Couldn't load custom advancement " + resourcelocation + " from " + file1 + " as it's empty or null");
                         }
                         else
                         {
@@ -117,12 +118,12 @@
                     }
                     catch (IllegalArgumentException | JsonParseException jsonparseexception)
                     {
-                        field_192782_a.error("Parsing error loading custom advancement " + resourcelocation, (Throwable)jsonparseexception);
+                        field_192782_a.debug("Parsing error loading custom advancement " + resourcelocation, (Throwable)jsonparseexception);
                         this.field_193768_e = true;
                     }
                     catch (IOException ioexception)
                     {
-                        field_192782_a.error("Couldn't read custom advancement " + resourcelocation + " from " + file1, (Throwable)ioexception);
+                        field_192782_a.debug("Couldn't read custom advancement " + resourcelocation + " from " + file1, (Throwable)ioexception);
                         this.field_193768_e = true;
                     }
                 }
@@ -152,7 +153,7 @@
                 {
                     if (!"jar".equals(uri.getScheme()))
                     {
-                        field_192782_a.error("Unsupported scheme " + uri + " trying to list all built-in advancements (NYI?)");
+                        field_192782_a.debug("Unsupported scheme " + uri + " trying to list all built-in advancements (NYI?)");
                         this.field_193768_e = true;
                         return;
                     }
@@ -172,7 +173,11 @@
                         Path path2 = path.relativize(path1);
                         String s = FilenameUtils.removeExtension(path2.toString()).replaceAll("\\\\", "/");
                         ResourceLocation resourcelocation = new ResourceLocation("minecraft", s);
-
+                        // Spigot start
+                        if (org.spigotmc.SpigotConfig.disabledAdvancements != null && (org.spigotmc.SpigotConfig.disabledAdvancements.contains("*") || org.spigotmc.SpigotConfig.disabledAdvancements.contains(resourcelocation.toString()))) {
+                            continue;
+                        }
+                        // Spigot end
                         if (!p_192777_1_.containsKey(resourcelocation))
                         {
                             BufferedReader bufferedreader = null;
@@ -185,12 +190,12 @@
                             }
                             catch (JsonParseException jsonparseexception)
                             {
-                                field_192782_a.error("Parsing error loading built-in advancement " + resourcelocation, (Throwable)jsonparseexception);
+                                field_192782_a.debug("Parsing error loading built-in advancement " + resourcelocation, (Throwable)jsonparseexception);
                                 this.field_193768_e = true;
                             }
                             catch (IOException ioexception)
                             {
-                                field_192782_a.error("Couldn't read advancement " + resourcelocation + " from " + path1, (Throwable)ioexception);
+                                field_192782_a.debug("Couldn't read advancement " + resourcelocation + " from " + path1, (Throwable)ioexception);
                                 this.field_193768_e = true;
                             }
                             finally
@@ -204,12 +209,12 @@
                 return;
             }
 
-            field_192782_a.error("Couldn't find .mcassetsroot");
+            field_192782_a.debug("Couldn't find .mcassetsroot");
             this.field_193768_e = true;
         }
         catch (IOException | URISyntaxException urisyntaxexception)
         {
-            field_192782_a.error("Couldn't get a list of all built-in advancement files", (Throwable)urisyntaxexception);
+            field_192782_a.debug("Couldn't get a list of all built-in advancement files", (Throwable)urisyntaxexception);
\ No newline at end of file
             this.field_193768_e = true;
             return;
         }
