--- a/net/minecraft/network/PacketBuffer.java
+++ b/net/minecraft/network/PacketBuffer.java
@@ -22,6 +_,8 @@
 import java.util.Date;
 import java.util.UUID;
 import javax.annotation.Nullable;
+
+import io.papermc.paper.adventure.PaperAdventure;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.CompoundNBT;
@@ -29,6 +_,7 @@
 import net.minecraft.nbt.INBT;
 import net.minecraft.nbt.NBTDynamicOps;
 import net.minecraft.nbt.NBTSizeTracker;
+import net.minecraft.tileentity.SkullTileEntity;
 import net.minecraft.util.Direction;
 import net.minecraft.util.ResourceLocation;
 import net.minecraft.util.math.BlockPos;
@@ -38,9 +_,11 @@
 import net.minecraft.util.text.ITextComponent;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftItemStack;
 
-public class PacketBuffer extends ByteBuf {
+public class PacketBuffer extends ByteBuf implements net.minecraftforge.common.extensions.IForgePacketBuffer {
    private final ByteBuf field_150794_a;
+   public java.util.Locale adventure$locale; // Paper
 
    public PacketBuffer(ByteBuf p_i45154_1_) {
       this.field_150794_a = p_i45154_1_;
@@ -56,6 +_,12 @@
       return 5;
    }
 
+   // Paper start
+   public PacketBuffer writeComponent(final net.kyori.adventure.text.Component component) {
+      return this.func_211400_a(PaperAdventure.asJsonString(component, this.adventure$locale), 262144);
+   }
+   // Paper end
+
    public <T> T func_240628_a_(Codec<T> p_240628_1_) throws IOException {
       CompoundNBT compoundnbt = this.func_244273_m();
       DataResult<T> dataresult = p_240628_1_.parse(NBTDynamicOps.field_210820_a, compoundnbt);
@@ -177,7 +_,8 @@
    }
 
    public PacketBuffer func_179256_a(ITextComponent p_179256_1_) {
-      return this.func_211400_a(ITextComponent.Serializer.func_150696_a(p_179256_1_), 262144);
+      //return this.writeUtf(ITextComponent.Serializer.toJson(p_179256_1_), 262144); // Paper - comment
+      return this.func_211400_a(PaperAdventure.asJsonString(p_179256_1_, this.adventure$locale), 262144); // Paper
    }
 
    public <T extends Enum<T>> T func_179257_a(Class<T> p_179257_1_) {
@@ -292,7 +_,16 @@
    }
 
    public PacketBuffer func_150788_a(ItemStack p_150788_1_) {
-      if (p_150788_1_.func_190926_b()) {
+      return writeItemStack(p_150788_1_, true);
+   }
+
+   /**
+    * Most ItemStack serialization is Server to Client,and doesn't need to know the FULL tag details.
+    * One exception is items from the creative menu, which must be sent from Client to Server with their full NBT.
+    * If you want to send the FULL tag set limitedTag to false
+    */
+   public PacketBuffer writeItemStack(ItemStack p_150788_1_, boolean limitedTag) {
+      if (p_150788_1_.func_190926_b() || p_150788_1_.func_77973_b() == null) { // CraftBukkit - NPE fix itemstack.getItem()
          this.writeBoolean(false);
       } else {
          this.writeBoolean(true);
@@ -300,8 +_,21 @@
          this.func_150787_b(Item.func_150891_b(item));
          this.writeByte(p_150788_1_.func_190916_E());
          CompoundNBT compoundnbt = null;
-         if (item.func_77645_m() || item.func_77651_p()) {
-            compoundnbt = p_150788_1_.func_77978_p();
+         if (item.isDamageable(p_150788_1_) || item.func_77651_p()) {
+            // Spigot start - filter
+            p_150788_1_ = p_150788_1_.func_77946_l();
+            //CraftItemStack.setItemMeta(stack, CraftItemStack.getItemMeta(stack)); // Paper - This is no longer needed due to NBT being supported
+            // Spigot end
+            compoundnbt = limitedTag ? p_150788_1_.getShareTag() : p_150788_1_.func_77978_p();
+            // Paper start
+            if (compoundnbt != null && compoundnbt.func_150297_b("SkullOwner", 10)) {
+               CompoundNBT owner = compoundnbt.func_74775_l("SkullOwner");
+               if (owner.func_186855_b("Id")) {
+                  compoundnbt.func_186854_a("SkullOwnerOrig", owner.func_186857_a("Id"));
+                  SkullTileEntity.sanitizeUUID(owner);
+               }
+            }
+            // Paper end
          }
 
          this.func_150786_a(compoundnbt);
@@ -317,12 +_,16 @@
          int i = this.func_150792_a();
          int j = this.readByte();
          ItemStack itemstack = new ItemStack(Item.func_150899_d(i), j);
-         itemstack.func_77982_d(this.func_150793_b());
+         itemstack.readShareTag(this.func_150793_b());
+         // CraftBukkit start
+         if (itemstack.func_77978_p() != null) {
+            CraftItemStack.setItemMeta(itemstack, CraftItemStack.getItemMeta(itemstack));
+         }
+         // CraftBukkit end
          return itemstack;
       }
    }
 
-   @OnlyIn(Dist.CLIENT)
    public String func_218666_n() {
       return this.func_150789_c(32767);
    }
