--- ../src-base/minecraft/net/minecraft/block/BlockRedstoneTorch.java
+++ ../src-work/minecraft/net/minecraft/block/BlockRedstoneTorch.java
@@ -20,10 +20,11 @@
 import net.minecraft.world.World;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+import org.bukkit.event.block.BlockRedstoneEvent;
 
 public class BlockRedstoneTorch extends BlockTorch
 {
-    private static final Map<World, List<BlockRedstoneTorch.Toggle>> field_150112_b = Maps.<World, List<BlockRedstoneTorch.Toggle>>newHashMap();
+    private static final Map<World, List<BlockRedstoneTorch.Toggle>> field_150112_b = new java.util.WeakHashMap<World, List<Toggle>>(); // FORGE - fix vanilla MC-101233
     private final boolean field_150113_a;
 
     private boolean func_176598_a(World p_176598_1_, BlockPos p_176598_2_, boolean p_176598_3_)
@@ -109,20 +110,46 @@
     {
     }
 
+    private long last = 0L;
     public void func_180650_b(World p_180650_1_, BlockPos p_180650_2_, IBlockState p_180650_3_, Random p_180650_4_)
     {
+        if (System.currentTimeMillis() - last <= -1)
+        {
+            return;
+        }
+        last = System.currentTimeMillis();
         boolean flag = this.func_176597_g(p_180650_1_, p_180650_2_, p_180650_3_);
         List<BlockRedstoneTorch.Toggle> list = (List)field_150112_b.get(p_180650_1_);
 
-        while (list != null && !list.isEmpty() && p_180650_1_.func_82737_E() - (list.get(0)).field_150844_d > 60L)
-        {
-            list.remove(0);
+        // Paper start
+        if (list != null) {
+            int index = 0;
+            while (index < list.size() && p_180650_1_.func_82737_E() - list.get(index).getTime() > 60L) {
+                index++;
+            }
+            if (index > 0) {
+                list.subList(0, index).clear();
+            }
         }
+        // Paper end
 
+        org.bukkit.plugin.PluginManager manager = p_180650_1_.getServer().getPluginManager();
+        org.bukkit.block.Block block = p_180650_1_.getWorld().getBlockAt(p_180650_2_.func_177958_n(), p_180650_2_.func_177956_o(), p_180650_2_.func_177952_p());
+        int oldCurrent = this.field_150113_a ? 15 : 0;
+
+        BlockRedstoneEvent event = new BlockRedstoneEvent(block, oldCurrent, oldCurrent);
+
         if (this.field_150113_a)
         {
             if (flag)
             {
+                if (oldCurrent != 0) {
+                    event.setNewCurrent(0);
+                    manager.callEvent(event);
+                    if (event.getNewCurrent() != 0) {
+                        return;
+                    }
+                }
                 p_180650_1_.func_180501_a(p_180650_2_, Blocks.field_150437_az.func_176223_P().func_177226_a(field_176596_a, p_180650_3_.func_177229_b(field_176596_a)), 3);
 
                 if (this.func_176598_a(p_180650_1_, p_180650_2_, true))
@@ -143,6 +170,13 @@
         }
         else if (!flag && !this.func_176598_a(p_180650_1_, p_180650_2_, false))
         {
+            if (oldCurrent != 15) {
+                event.setNewCurrent(15);
+                manager.callEvent(event);
+                if (event.getNewCurrent() != 15) {
+                    return;
+                }
+            }
             p_180650_1_.func_180501_a(p_180650_2_, Blocks.field_150429_aA.func_176223_P().func_177226_a(field_176596_a, p_180650_3_.func_177229_b(field_176596_a)), 3);
         }
     }
@@ -210,6 +244,7 @@
         {
             BlockPos field_180111_a;
             long field_150844_d;
+            final long getTime() { return this.field_150844_d; } // Paper - OBFHELPER;
\ No newline at end of file
 
             public Toggle(BlockPos p_i45688_1_, long p_i45688_2_)
             {
