--- a/net/minecraft/command/arguments/EntitySelectorParser.java
+++ b/net/minecraft/command/arguments/EntitySelectorParser.java
@@ -188,7 +188,13 @@
    }
 
    protected void func_197403_b() throws CommandSyntaxException {
-      this.field_210327_T = true;
+      parseSelector(true);
+   }
+
+   // CraftBukkit start
+   protected void parseSelector(boolean overridePermissions) throws CommandSyntaxException {
+      this.field_210327_T = !overridePermissions;
+      // CraftBukkit end
       this.field_201354_D = this::func_201959_d;
       if (!this.field_197417_j.canRead()) {
          throw field_197410_c.createWithContext(this.field_197417_j);
@@ -440,6 +446,12 @@
    }
 
    public EntitySelector func_201345_m() throws CommandSyntaxException {
+      // CraftBukkit start
+      return parse(false);
+   }
+
+   public EntitySelector parse(boolean overridePermissions) throws CommandSyntaxException {
+      // CraftBukkit end
       this.field_201999_C = this.field_197417_j.getCursor();
       this.field_201354_D = this::func_201981_b;
       if (this.field_197417_j.canRead() && this.field_197417_j.peek() == '@') {
@@ -448,7 +460,10 @@
          }
 
          this.field_197417_j.skip();
-         this.func_197403_b();
+         EntitySelector forgeSelector = net.minecraftforge.common.command.EntitySelectorManager.parseSelector(this);
+         if (forgeSelector != null)
+            return forgeSelector;
+         this.parseSelector(overridePermissions); // CraftBukkit
       } else {
          this.func_197382_c();
       }
@@ -463,6 +478,7 @@
       p_210326_0_.suggest("@r", new TranslationTextComponent("argument.entity.selector.randomPlayer"));
       p_210326_0_.suggest("@s", new TranslationTextComponent("argument.entity.selector.self"));
       p_210326_0_.suggest("@e", new TranslationTextComponent("argument.entity.selector.allEntities"));
+      net.minecraftforge.common.command.EntitySelectorManager.fillSelectorSuggestions(p_210326_0_);
    }
 
    private CompletableFuture<Suggestions> func_201981_b(SuggestionsBuilder p_201981_1_, Consumer<SuggestionsBuilder> p_201981_2_) {
