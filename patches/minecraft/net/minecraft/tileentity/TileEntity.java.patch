--- a/net/minecraft/tileentity/TileEntity.java
+++ b/net/minecraft/tileentity/TileEntity.java
@@ -15,20 +15,33 @@
 import net.minecraftforge.api.distmarker.OnlyIn;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.craftbukkit.v1_15_R1.SpigotTimings;
+import org.bukkit.craftbukkit.v1_15_R1.persistence.CraftPersistentDataContainer;
+import org.bukkit.craftbukkit.v1_15_R1.persistence.CraftPersistentDataTypeRegistry;
+import org.bukkit.inventory.InventoryHolder;
+import org.spigotmc.CustomTimingsHandler;
 
-public abstract class TileEntity {
+public abstract class TileEntity extends net.minecraftforge.common.capabilities.CapabilityProvider<TileEntity> implements net.minecraftforge.common.extensions.IForgeTileEntity {
+   public CustomTimingsHandler tickTimer = SpigotTimings.getTileEntityTimings(this); // Spigot
+   // CraftBukkit start - data containers
+   private static final CraftPersistentDataTypeRegistry DATA_TYPE_REGISTRY = new CraftPersistentDataTypeRegistry();
+   public CraftPersistentDataContainer persistentDataContainer;
+   // CraftBukkit end
    private static final Logger field_145852_a = LogManager.getLogger();
    private final TileEntityType<?> field_200663_e;
    @Nullable
-   protected World field_145850_b;
+   public World field_145850_b; // protected->public CraftBukkit
    protected BlockPos field_174879_c = BlockPos.field_177992_a;
    protected boolean field_145846_f;
    @Nullable
    private BlockState field_195045_e;
    private boolean field_222816_g;
+   private CompoundNBT customTileData;
 
    public TileEntity(TileEntityType<?> p_i48289_1_) {
+      super(TileEntity.class);
       this.field_200663_e = p_i48289_1_;
+      this.gatherCapabilities();
    }
 
    @Nullable
@@ -47,6 +60,15 @@
 
    public void func_145839_a(CompoundNBT p_145839_1_) {
       this.field_174879_c = new BlockPos(p_145839_1_.func_74762_e("x"), p_145839_1_.func_74762_e("y"), p_145839_1_.func_74762_e("z"));
+      if (p_145839_1_.func_74764_b("ForgeData")) this.customTileData = p_145839_1_.func_74775_l("ForgeData");
+      if (getCapabilities() != null && p_145839_1_.func_74764_b("ForgeCaps")) deserializeCaps(p_145839_1_.func_74775_l("ForgeCaps"));
+      // CraftBukkit start - read container
+      this.persistentDataContainer = new CraftPersistentDataContainer(DATA_TYPE_REGISTRY);
+      CompoundNBT persistentDataTag = p_145839_1_.func_74775_l("PublicBukkitValues");
+      if (persistentDataTag != null) {
+         this.persistentDataContainer.putAll(persistentDataTag);
+      }
+      // CraftBukkit end
    }
 
    public CompoundNBT func_189515_b(CompoundNBT p_189515_1_) {
@@ -62,6 +84,13 @@
          p_189516_1_.func_74768_a("x", this.field_174879_c.func_177958_n());
          p_189516_1_.func_74768_a("y", this.field_174879_c.func_177956_o());
          p_189516_1_.func_74768_a("z", this.field_174879_c.func_177952_p());
+         if (this.customTileData != null) p_189516_1_.func_218657_a("ForgeData", this.customTileData);
+         if (getCapabilities() != null) p_189516_1_.func_218657_a("ForgeCaps", serializeCaps());
+         // CraftBukkit start - store container
+         if (this.persistentDataContainer != null && !this.persistentDataContainer.isEmpty()) {
+            p_189516_1_.func_218657_a("PublicBukkitValues", this.persistentDataContainer.toTagCompound());
+         }
+         // CraftBukkit end
          return p_189516_1_;
       }
    }
@@ -94,7 +123,7 @@
       if (this.field_145850_b != null) {
          this.field_195045_e = this.field_145850_b.func_180495_p(this.field_174879_c);
          this.field_145850_b.func_175646_b(this.field_174879_c, this);
-         if (!this.field_195045_e.func_196958_f()) {
+         if (!this.field_195045_e.isAir(this.field_145850_b, this.field_174879_c)) {
             this.field_145850_b.func_175666_e(this.field_174879_c, this.field_195045_e.func_177230_c());
          }
       }
@@ -140,6 +169,8 @@
 
    public void func_145843_s() {
       this.field_145846_f = true;
+      this.invalidateCaps();
+      requestModelDataUpdate();
    }
 
    public void func_145829_t() {
@@ -182,6 +213,13 @@
       return this.field_200663_e;
    }
 
+   @Override
+   public CompoundNBT getTileData() {
+      if (this.customTileData == null)
+         this.customTileData = new CompoundNBT();
+      return this.customTileData;
+   }
+
    public void func_222814_r() {
       if (!this.field_222816_g) {
          this.field_222816_g = true;
@@ -190,4 +228,24 @@
          }, this::func_174877_v);
       }
    }
+
+   // CraftBukkit start
+   public InventoryHolder getOwner() {
+      if (this.field_145850_b == null) {
+         return null;
+      }
+      // Spigot start
+      org.bukkit.block.Block block = field_145850_b.getWorldCB().getBlockAt(this.field_174879_c.func_177958_n(), this.field_174879_c.func_177956_o(), this.field_174879_c.func_177952_p());
+      if (block == null) {
+         org.bukkit.Bukkit.getLogger().log(java.util.logging.Level.WARNING, "No block for owner at %s %d %d %d", new Object[]{field_145850_b.func_201672_e(), this.field_174879_c.func_177958_n(), this.field_174879_c.func_177956_o(), this.field_174879_c.func_177952_p()});
+         return null;
+      }
+      // Spigot end
+      org.bukkit.block.BlockState state = block.getState();
+      if (state instanceof InventoryHolder) {
+         return (InventoryHolder) state;
+      }
+      return null;
+   }
+   // CraftBukkit start
 }
