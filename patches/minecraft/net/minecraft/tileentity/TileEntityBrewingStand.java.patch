--- ../src-base/minecraft/net/minecraft/tileentity/TileEntityBrewingStand.java
+++ ../src-work/minecraft/net/minecraft/tileentity/TileEntityBrewingStand.java
@@ -1,6 +1,7 @@
 package net.minecraft.tileentity;
 
 import java.util.Arrays;
+import java.util.List;
 import net.minecraft.block.BlockBrewingStand;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.entity.player.EntityPlayer;
@@ -15,6 +16,7 @@
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.potion.PotionHelper;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.EnumFacing;
 import net.minecraft.util.ITickable;
 import net.minecraft.util.NonNullList;
@@ -22,6 +24,14 @@
 import net.minecraft.util.datafix.FixTypes;
 import net.minecraft.util.datafix.walkers.ItemStackDataLists;
 import net.minecraft.util.math.BlockPos;
+import org.bukkit.craftbukkit.v1_12_R1.entity.CraftHumanEntity;
+import org.bukkit.craftbukkit.v1_12_R1.inventory.CraftItemStack;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.event.inventory.BrewEvent;
+import org.bukkit.event.inventory.BrewingStandFuelEvent;
+import org.bukkit.inventory.InventoryHolder;
+import com.mohistmc.common.RealTimeTicking;
+import com.mohistmc.configuration.MohistConfig;
 
 public class TileEntityBrewingStand extends TileEntityLockable implements ITickable, ISidedInventory
 {
@@ -35,6 +45,31 @@
     private String field_145942_n;
     private int field_184278_m;
 
+    // CraftBukkit start - add fields and methods
+    private int lastTick = MinecraftServer.currentTick;
+    public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
+    private int maxStack = 64;
+    
+    public List<ItemStack> getContents() {
+        return this.field_145945_j;
+    }
+        
+    public void onOpen(CraftHumanEntity who) {
+        transaction.add(who);
+    }
+    
+    public void onClose(CraftHumanEntity who) {
+        transaction.remove(who);
+    }
+        
+    public List<HumanEntity> getViewers() {
+        return transaction;
+    }
+        
+    public void setMaxStackSize(int size) {
+        maxStack = size;
+    }
+    // CraftBukkit end
     public String func_70005_c_()
     {
         return this.func_145818_k_() ? this.field_145942_n : "container.brewing";
@@ -74,8 +109,19 @@
 
         if (this.field_184278_m <= 0 && itemstack.func_77973_b() == Items.field_151065_br)
         {
-            this.field_184278_m = 20;
-            itemstack.func_190918_g(1);
+            // CraftBukkit start
+            BrewingStandFuelEvent event = new BrewingStandFuelEvent(field_145850_b.getWorld().getBlockAt(field_174879_c.func_177958_n(), field_174879_c.func_177956_o(), field_174879_c.func_177952_p()), CraftItemStack.asCraftMirror(itemstack), 20);
+            this.field_145850_b.getServer().getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) {
+                return;
+            }
+
+            this.field_184278_m = event.getFuelPower(); // PAIL fuelLevel
+            if (this.field_184278_m > 0 && event.isConsuming()) {
+                itemstack.func_190918_g(1);
+            }
+            // CraftBukkit end
             this.func_70296_d();
         }
 
@@ -83,10 +129,20 @@
         boolean flag1 = this.field_145946_k > 0;
         ItemStack itemstack1 = this.field_145945_j.get(3);
 
+        // CraftBukkit start - Use wall time instead of ticks for brewing
+        int elapsedTicks = MinecraftServer.currentTick - this.lastTick;
+        this.lastTick = MinecraftServer.currentTick;
+
         if (flag1)
         {
-            --this.field_145946_k;
-            boolean flag2 = this.field_145946_k == 0;
+            if(MohistConfig.instance.RealTimeTicking()) {
+                int ticks = (int) ((RealTimeTicking) this.func_145831_w()).getRealTimeTicks();
+                this.field_145946_k = Math.max(0, this.field_145946_k - ticks);
+            } else {
+                this.field_145946_k -= elapsedTicks;
+            }
+            boolean flag2 = this.field_145946_k <= 0; // == -> <=
+            // CraftBukkit end
 
             if (flag2 && flag)
             {
@@ -153,6 +209,7 @@
 
     private boolean func_145934_k()
     {
+        if (1 == 1) return net.minecraftforge.common.brewing.BrewingRecipeRegistry.canBrew(field_145945_j, field_145945_j.get(3), field_145947_i); // divert to VanillaBrewingRegistry
         ItemStack itemstack = this.field_145945_j.get(3);
 
         if (itemstack.func_190926_b())
@@ -181,19 +238,27 @@
 
     private void func_145940_l()
     {
+        if (net.minecraftforge.event.ForgeEventFactory.onPotionAttemptBrew(field_145945_j)) return;
         ItemStack itemstack = this.field_145945_j.get(3);
-
-        for (int i = 0; i < 3; ++i)
-        {
-            this.field_145945_j.set(i, PotionHelper.func_185212_d(itemstack, this.field_145945_j.get(i)));
+        // CraftBukkit start
+        InventoryHolder owner = this.getOwner();
+        if (owner != null) {
+            BrewEvent event = new BrewEvent(field_145850_b.getWorld().getBlockAt(field_174879_c.func_177958_n(), field_174879_c.func_177956_o(), field_174879_c.func_177952_p()), (org.bukkit.inventory.BrewerInventory) owner.getInventory(), this.field_184278_m);
+            org.bukkit.Bukkit.getPluginManager().callEvent(event);
+            if (event.isCancelled()) {
+                return;
+            }
         }
+        // CraftBukkit end
 
+        net.minecraftforge.common.brewing.BrewingRecipeRegistry.brewPotions(field_145945_j, field_145945_j.get(3), field_145947_i);
+
         itemstack.func_190918_g(1);
         BlockPos blockpos = this.func_174877_v();
 
-        if (itemstack.func_77973_b().func_77634_r())
+        if (itemstack.func_77973_b().hasContainerItem(itemstack))
         {
-            ItemStack itemstack1 = new ItemStack(itemstack.func_77973_b().func_77668_q());
+            ItemStack itemstack1 = itemstack.func_77973_b().getContainerItem(itemstack);
 
             if (itemstack.func_190926_b())
             {
@@ -207,6 +272,7 @@
 
         this.field_145945_j.set(3, itemstack);
         this.field_145850_b.func_175718_b(1035, blockpos, 0);
+        net.minecraftforge.event.ForgeEventFactory.onPotionBrewed(field_145945_j);
     }
 
     public static void func_189675_a(DataFixer p_189675_0_)
@@ -269,7 +335,7 @@
 
     public int func_70297_j_()
     {
-        return 64;
+        return this.maxStack; // CraftBukkit
     }
 
     public boolean func_70300_a(EntityPlayer p_70300_1_)
@@ -296,7 +362,7 @@
     {
         if (p_94041_1_ == 3)
         {
-            return PotionHelper.func_185205_a(p_94041_2_);
+            return net.minecraftforge.common.brewing.BrewingRecipeRegistry.isValidIngredient(p_94041_2_);
         }
         else
         {
@@ -308,7 +374,7 @@
             }
             else
             {
-                return (item == Items.field_151068_bn || item == Items.field_185155_bH || item == Items.field_185156_bI || item == Items.field_151069_bo) && this.func_70301_a(p_94041_1_).func_190926_b();
+                return net.minecraftforge.common.brewing.BrewingRecipeRegistry.isValidInput(p_94041_2_) && this.func_70301_a(p_94041_1_).func_190926_b();
             }
         }
     }
@@ -377,6 +443,27 @@
         }
     }
 
+    net.minecraftforge.items.IItemHandler handlerInput = new net.minecraftforge.items.wrapper.SidedInvWrapper(this, net.minecraft.util.EnumFacing.UP);
+    net.minecraftforge.items.IItemHandler handlerOutput = new net.minecraftforge.items.wrapper.SidedInvWrapper(this, net.minecraft.util.EnumFacing.DOWN);
+    net.minecraftforge.items.IItemHandler handlerSides = new net.minecraftforge.items.wrapper.SidedInvWrapper(this, net.minecraft.util.EnumFacing.NORTH);
+
+    @SuppressWarnings("unchecked")
+    @Override
+    @javax.annotation.Nullable
+    public <T> T getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @javax.annotation.Nullable net.minecraft.util.EnumFacing facing)
+    {
+        if (facing != null && capability == net.minecraftforge.items.CapabilityItemHandler.ITEM_HANDLER_CAPABILITY)
+        {
+            if (facing == EnumFacing.UP)
+                return (T) handlerInput;
+            else if (facing == EnumFacing.DOWN)
+                return (T) handlerOutput;
+            else
+                return (T) handlerSides;
+        }
+        return super.getCapability(capability, facing);
+    }
+
\ No newline at end of file
     public int func_174890_g()
     {
         return 2;
