--- a/net/minecraft/util/text/ITextComponent.java
+++ b/net/minecraft/util/text/ITextComponent.java
@@ -17,10 +_,13 @@
 import java.io.StringReader;
 import java.lang.reflect.Field;
 import java.lang.reflect.Type;
+import java.util.Iterator;
 import java.util.List;
 import java.util.Optional;
 import java.util.Map.Entry;
 import javax.annotation.Nullable;
+
+import io.papermc.paper.adventure.AdventureComponent;
 import net.minecraft.util.EnumTypeAdapterFactory;
 import net.minecraft.util.IReorderingProcessor;
 import net.minecraft.util.JSONUtils;
@@ -29,7 +_,21 @@
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
 
-public interface ITextComponent extends Message, ITextProperties {
+import com.google.common.collect.Streams;
+import java.util.stream.Stream;
+
+// CraftBukkit start
+public interface ITextComponent extends Message, ITextProperties, Iterable<ITextComponent>  {
+   default Stream<ITextComponent> stream() {
+      return Streams.concat(new Stream[]{Stream.of(this), this.func_150253_a().stream().flatMap(ITextComponent::stream)});
+   }
+
+   @Override
+   default Iterator<ITextComponent> iterator() {
+      return this.stream().iterator();
+   }
+   // CraftBukkit end
+
    Style func_150256_b();
 
    String func_150261_e();
@@ -113,6 +_,7 @@
       private static final Gson field_150700_a = Util.func_199748_a(() -> {
          GsonBuilder gsonbuilder = new GsonBuilder();
          gsonbuilder.disableHtmlEscaping();
+         gsonbuilder.registerTypeAdapter(AdventureComponent.class, new AdventureComponent.Serializer()); // Paper
          gsonbuilder.registerTypeHierarchyAdapter(ITextComponent.class, new ITextComponent.Serializer());
          gsonbuilder.registerTypeHierarchyAdapter(Style.class, new Style.Serializer());
          gsonbuilder.registerTypeAdapterFactory(new EnumTypeAdapterFactory());
