--- ../src-base/minecraft/net/minecraft/nbt/NBTTagCompound.java
+++ ../src-work/minecraft/net/minecraft/nbt/NBTTagCompound.java
@@ -1,12 +1,13 @@
 package net.minecraft.nbt;
 
 import com.google.common.collect.Lists;
-import com.google.common.collect.Maps;
 import java.io.DataInput;
 import java.io.DataOutput;
 import java.io.IOException;
 import java.util.Collection;
 import java.util.Collections;
+import java.util.HashMap;
+import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 import java.util.Objects;
@@ -25,12 +26,17 @@
 {
     private static final Logger field_191551_b = LogManager.getLogger();
     private static final Pattern field_193583_c = Pattern.compile("[A-Za-z0-9._+-]+");
-    private final Map<String, NBTBase> field_74784_a = Maps.<String, NBTBase>newHashMap();
+    private final Map<String, NBTBase> field_74784_a = new HashMap<>();
 
+    public void write0(DataOutput output)  throws IOException
+    {
+        func_74734_a(output);
+    }
+
     void func_74734_a(DataOutput p_74734_1_) throws IOException
     {
-        for (String s : this.field_74784_a.keySet())
-        {
+        for (Iterator<String> iterator = this.field_74784_a.keySet().iterator(); iterator.hasNext(); ) {
+            String s = iterator.next();
             NBTBase nbtbase = this.field_74784_a.get(s);
             func_150298_a(s, nbtbase, p_74734_1_);
         }
@@ -38,6 +44,11 @@
         p_74734_1_.writeByte(0);
     }
 
+    public void read0(DataInput input, int depth, NBTSizeTracker sizeTracker) throws IOException
+    {
+        func_152446_a(input, depth,sizeTracker);
+    }
+
     void func_152446_a(DataInput p_152446_1_, int p_152446_2_, NBTSizeTracker p_152446_3_) throws IOException
     {
         p_152446_3_.func_152450_a(384L);
@@ -82,6 +93,7 @@
 
     public void func_74782_a(String p_74782_1_, NBTBase p_74782_2_)
     {
+        if (p_74782_2_ == null) throw new IllegalArgumentException("Invalid null NBT value with key " + p_74782_1_);
         this.field_74784_a.put(p_74782_1_, p_74782_2_);
     }
 
@@ -477,6 +489,7 @@
 
     private static byte func_152447_a(DataInput p_152447_0_, NBTSizeTracker p_152447_1_) throws IOException
     {
+        p_152447_1_.func_152450_a(8);
         return p_152447_0_.readByte();
     }
 
@@ -487,6 +500,7 @@
 
     static NBTBase func_152449_a(byte p_152449_0_, String p_152449_1_, DataInput p_152449_2_, int p_152449_3_, NBTSizeTracker p_152449_4_) throws IOException
     {
+        p_152449_4_.func_152450_a(32); //Forge: 4 extra bytes for the object allocation.
\ No newline at end of file
         NBTBase nbtbase = NBTBase.func_150284_a(p_152449_0_);
 
         try
