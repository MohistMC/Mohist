--- a/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/net/minecraft/server/dedicated/DedicatedServer.java
@@ -8,13 +8,9 @@
 import com.mojang.authlib.minecraft.MinecraftSessionService;
 import com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService;
 import com.mojang.datafixers.DataFixer;
-import java.io.BufferedReader;
-import java.io.File;
-import java.io.IOException;
-import java.io.InputStreamReader;
+import java.io.*;
 import java.net.InetAddress;
 import java.net.Proxy;
-import java.nio.charset.StandardCharsets;
 import java.util.Collections;
 import java.util.List;
 import java.util.Locale;
@@ -37,6 +33,7 @@
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.ServerPropertiesProvider;
 import net.minecraft.server.gui.MinecraftServerGui;
+import net.minecraft.server.management.PlayerList;
 import net.minecraft.server.management.PlayerProfileCache;
 import net.minecraft.server.management.PreYggdrasilConverter;
 import net.minecraft.tileentity.SkullTileEntity;
@@ -56,23 +53,34 @@
 import net.minecraft.world.WorldType;
 import net.minecraft.world.chunk.listener.IChunkStatusListenerFactory;
 import net.minecraft.world.dimension.DimensionType;
+import net.minecraft.world.storage.SaveFormat;
+import org.apache.logging.log4j.Level;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.command.CommandSender;
+import org.bukkit.craftbukkit.v1_15_R1.LoggerOutputStream;
+import org.bukkit.craftbukkit.v1_15_R1.Main;
+import org.bukkit.craftbukkit.v1_15_R1.SpigotTimings;
+import org.bukkit.event.server.RemoteServerCommandEvent;
+import org.bukkit.event.server.ServerCommandEvent;
+import org.bukkit.plugin.Plugin;
 
 public class DedicatedServer extends MinecraftServer implements IServer {
    private static final Logger field_155771_h = LogManager.getLogger();
    private static final Pattern field_189647_l = Pattern.compile("^[a-fA-F0-9]{40}$");
    public final List<PendingCommand> field_71341_l = Collections.synchronizedList(Lists.newArrayList());
    private QueryThread field_71342_m;
-   private final RConConsoleSource field_184115_n;
+   public final RConConsoleSource field_184115_n; // private-public CraftBukkit
    private MainThread field_71339_n;
-   private final ServerPropertiesProvider field_71340_o;
+   public ServerPropertiesProvider field_71340_o;  // private final-public CraftBukkit
    private GameType field_71337_q;
    @Nullable
    private MinecraftServerGui field_213225_q;
 
-   public DedicatedServer(File p_i50720_1_, ServerPropertiesProvider p_i50720_2_, DataFixer p_i50720_3_, YggdrasilAuthenticationService p_i50720_4_, MinecraftSessionService p_i50720_5_, GameProfileRepository p_i50720_6_, PlayerProfileCache p_i50720_7_, IChunkStatusListenerFactory p_i50720_8_, String p_i50720_9_) {
-      super(p_i50720_1_, Proxy.NO_PROXY, p_i50720_3_, new Commands(true), p_i50720_4_, p_i50720_5_, p_i50720_6_, p_i50720_7_, p_i50720_8_, p_i50720_9_);
+   // CraftBukkit start
+   public DedicatedServer(joptsimple.OptionSet options, ServerPropertiesProvider p_i50720_2_, DataFixer dataFixerIn, YggdrasilAuthenticationService p_i50720_4_, MinecraftSessionService p_i50720_5_, GameProfileRepository p_i50720_6_, PlayerProfileCache p_i50720_7_, IChunkStatusListenerFactory p_i50720_8_, String p_i50720_9_) {
+      super(options, Proxy.NO_PROXY, dataFixerIn, new Commands().init(true), p_i50720_4_, p_i50720_5_, p_i50720_6_, p_i50720_7_, p_i50720_8_, p_i50720_9_);
+      // CraftBukkit end
       this.field_71340_o = p_i50720_2_;
       this.field_184115_n = new RConConsoleSource(this);
       Thread thread = new Thread("Server Infinisleeper") {
@@ -97,12 +105,46 @@
    public boolean func_71197_b() throws IOException {
       Thread thread = new Thread("Server console handler") {
          public void run() {
-            BufferedReader bufferedreader = new BufferedReader(new InputStreamReader(System.in, StandardCharsets.UTF_8));
+            //if (net.minecraftforge.server.console.TerminalHandler.handleCommands(DedicatedServer.this)) return;
+            //BufferedReader bufferedreader = new BufferedReader(new InputStreamReader(System.in, StandardCharsets.UTF_8));
+            // CraftBukkit start
+            if (!Main.useConsole) {
+               return;
+            }
+            jline.console.ConsoleReader bufferedreader = reader;
 
+            // MC-33041, SPIGOT-5538: if System.in is not valid due to javaw, then return
+            try {
+               System.in.available();
+            } catch (IOException ex) {
+               return;
+            }
+            // CraftBukkit end
             String s3;
+            if (net.minecraftforge.server.console.TerminalHandler.handleCommands(DedicatedServer.this)) return;
+
             try {
-               while(!DedicatedServer.this.func_71241_aa() && DedicatedServer.this.func_71278_l() && (s3 = bufferedreader.readLine()) != null) {
-                  DedicatedServer.this.func_195581_a(s3, DedicatedServer.this.func_195573_aM());
+               // CraftBukkit start - JLine disabling compatibility
+               while (!DedicatedServer.this.func_71241_aa() && DedicatedServer.this.func_71278_l()) {
+                  if (Main.useJline) {
+                     s3 = bufferedreader.readLine(">", null);
+                  } else {
+                     s3 = bufferedreader.readLine();
+                  }
+
+                  // SPIGOT-5220: Throttle if EOF (ctrl^d) or stdin is /dev/null
+                  if (s3 == null) {
+                     try {
+                        Thread.sleep(50L);
+                     } catch (InterruptedException ex) {
+                        Thread.currentThread().interrupt();
+                     }
+                     continue;
+                  }
+                  if (s3.trim().length() > 0) { // Trim to filter lines which are just spaces
+                     DedicatedServer.this.func_195581_a(s3, DedicatedServer.this.func_195573_aM());
+                  }
+                  // CraftBukkit end
                }
             } catch (IOException ioexception1) {
                DedicatedServer.field_155771_h.error("Exception handling console input", (Throwable)ioexception1);
@@ -110,6 +152,27 @@
 
          }
       };
+
+      // CraftBukkit start - TODO: handle command-line logging arguments
+      java.util.logging.Logger global = java.util.logging.Logger.getLogger("");
+      global.setUseParentHandlers(false);
+      for (java.util.logging.Handler handler : global.getHandlers()) {
+         global.removeHandler(handler);
+      }
+      global.addHandler(new org.bukkit.craftbukkit.v1_15_R1.util.ForwardLogHandler());
+
+      final org.apache.logging.log4j.core.Logger logger = ((org.apache.logging.log4j.core.Logger) LogManager.getRootLogger());
+      for (org.apache.logging.log4j.core.Appender appender : logger.getAppenders().values()) {
+         if (appender instanceof org.apache.logging.log4j.core.appender.ConsoleAppender) {
+            logger.removeAppender(appender);
+         }
+      }
+
+      new org.bukkit.craftbukkit.v1_15_R1.util.TerminalConsoleWriterThread(System.out, this.reader).start();
+
+      System.setOut(new PrintStream(new LoggerOutputStream(logger, Level.INFO), true));
+      System.setErr(new PrintStream(new LoggerOutputStream(logger, Level.WARN), true));
+      // CraftBukkit end
       thread.setDaemon(true);
       thread.setUncaughtExceptionHandler(new DefaultUncaughtExceptionHandler(field_155771_h));
       thread.start();
@@ -118,7 +181,9 @@
          field_155771_h.warn("To start the server with more ram, launch it as \"java -Xmx1024M -Xms1024M -jar minecraft_server.jar\"");
       }
 
+      net.minecraftforge.fml.server.ServerModLoader.begin(this);
       field_155771_h.info("Loading properties");
+      this.field_71340_o.func_219033_a(properties -> ServerProperties.func_218985_a(java.nio.file.Paths.get("server.properties")));
       ServerProperties serverproperties = this.field_71340_o.func_219034_a();
       if (this.func_71264_H()) {
          this.func_71189_e("127.0.0.1");
@@ -127,7 +192,11 @@
          this.func_190517_e(serverproperties.field_219008_b);
          this.func_71189_e(serverproperties.field_219009_c);
       }
-
+      // Spigot start
+      this.func_184105_a((PlayerList) (new DedicatedPlayerList(this)));
+      org.spigotmc.SpigotConfig.init((File) options.valueOf("spigot-settings"));
+      org.spigotmc.SpigotConfig.registerCommands();
+      // Spigot end
       this.func_71251_e(serverproperties.field_219010_d);
       this.func_71257_f(serverproperties.field_219011_e);
       this.func_71188_g(serverproperties.field_219012_f);
@@ -161,10 +230,23 @@
          return false;
       }
 
+      // CraftBukkit start
+     // this.setPlayerList((PlayerList) (new DedicatedPlayerList(this))); // Spigot -  moved up
+      server.loadPlugins();
+      server.enablePlugins(org.bukkit.plugin.PluginLoadOrder.STARTUP);
+      // CraftBukkit end
+
       if (!this.func_71266_T()) {
          field_155771_h.warn("**** SERVER IS RUNNING IN OFFLINE/INSECURE MODE!");
          field_155771_h.warn("The server will make no attempt to authenticate usernames. Beware.");
-         field_155771_h.warn("While this makes the game possible to play without internet access, it also opens up the ability for hackers to connect with any username they choose.");
+         // Spigot start
+         if (org.spigotmc.SpigotConfig.bungee) {
+            DedicatedServer.field_155771_h.warn("Whilst this makes it possible to use BungeeCord, unless access to your server is properly restricted, it also opens up the ability for hackers to connect with any username they choose.");
+            DedicatedServer.field_155771_h.warn("Please see http://www.spigotmc.org/wiki/firewall-guide/ for further information.");
+         } else {
+            DedicatedServer.field_155771_h.warn("While this makes the game possible to play without internet access, it also opens up the ability for hackers to connect with any username they choose.");
+         }
+         // Spigot end
          field_155771_h.warn("To change this, set \"online-mode\" to \"true\" in the server.properties file.");
       }
 
@@ -175,7 +257,9 @@
       if (!PreYggdrasilConverter.func_219587_e(this)) {
          return false;
       } else {
-         this.func_184105_a(new DedicatedPlayerList(this));
+         net.minecraftforge.fml.server.ServerModLoader.end();
+         //this.setPlayerList(new DedicatedPlayerList(this));
+         this.field_71310_m = new SaveFormat(this.server.getWorldContainer().toPath(), this.server.getWorldContainer().toPath().resolve("../backups"), this.field_184112_s); // CraftBukkit - moved from MinecraftServer constructor
          long i = Util.func_211178_c();
          String s = serverproperties.field_219022_p;
          String s1 = serverproperties.field_219024_r;
@@ -196,18 +280,27 @@
          SkullTileEntity.func_184293_a(this.func_152358_ax());
          SkullTileEntity.func_184294_a(this.func_147130_as());
          PlayerProfileCache.func_187320_a(this.func_71266_T());
+         if (!net.minecraftforge.fml.server.ServerLifecycleHooks.handleServerAboutToStart(this)) return false;
          field_155771_h.info("Preparing level \"{}\"", (Object)this.func_71270_I());
          JsonObject jsonobject = new JsonObject();
          if (worldtype == WorldType.field_77138_c) {
             jsonobject.addProperty("flat_world_options", s1);
          } else if (!s1.isEmpty()) {
-            jsonobject = JSONUtils.func_212745_a(s1);
+            // CraftBukkit start
+            try {
+               jsonobject = JSONUtils.func_212745_a(s1);
+            }
+            catch (Exception ex) {
+               DedicatedServer.field_155771_h.warn("Invalid generator-settings, ignoring", ex);
+            }
+            // CraftBukkit end
          }
 
          this.func_71247_a(this.func_71270_I(), this.func_71270_I(), j, worldtype, jsonobject);
          long l = Util.func_211178_c() - i;
          String s2 = String.format(Locale.ROOT, "%.3fs", (double)l / 1.0E9D);
          field_155771_h.info("Done ({})! For help, type \"help\"", (Object)s2);
+         this.field_211151_aa = Util.func_211177_b(); //Forge: Update server time to prevent watchdog/spaming during long load.
          if (serverproperties.field_219027_u != null) {
             this.func_200252_aR().func_223585_a(GameRules.field_223620_w).func_223570_a(serverproperties.field_219027_u, this);
          }
@@ -222,9 +315,10 @@
             field_155771_h.info("Starting remote control listener");
             this.field_71339_n = new MainThread(this);
             this.field_71339_n.func_72602_a();
+            this.remoteConsole = new org.bukkit.craftbukkit.v1_15_R1.command.CraftRemoteConsoleCommandSender(this.field_184115_n); // CraftBukkit
          }
 
-         if (this.func_175593_aQ() > 0L) {
+         if (false && this.func_175593_aQ() > 0L) { // Spigot - disable
             Thread thread1 = new Thread(new ServerHangWatchdog(this));
             thread1.setUncaughtExceptionHandler(new DefaultWithNameUncaughtExceptionHandler(field_155771_h));
             thread1.setName("Server Watchdog");
@@ -233,7 +327,8 @@
          }
 
          Items.field_190931_a.func_150895_a(ItemGroup.field_78027_g, NonNullList.func_191196_a());
-         return true;
+         // <3 you Grum for this, saves us ~30 patch files! --^
+         return net.minecraftforge.fml.server.ServerLifecycleHooks.handleServerStarting(this);
       }
    }
 
@@ -316,7 +411,7 @@
       if (this.field_71342_m != null) {
          this.field_71342_m.func_219591_b();
       }
-
+      System.exit(0); // CraftBukkit
    }
 
    public void func_71190_q(BooleanSupplier p_71190_1_) {
@@ -343,11 +438,20 @@
    }
 
    public void func_71333_ah() {
+      SpigotTimings.serverCommandTimer.startTiming(); // Spigot
       while(!this.field_71341_l.isEmpty()) {
          PendingCommand pendingcommand = this.field_71341_l.remove(0);
-         this.func_195571_aL().func_197059_a(pendingcommand.field_73701_b, pendingcommand.field_73702_a);
+         // CraftBukkit start - ServerCommand for preprocessing
+         ServerCommandEvent event = new ServerCommandEvent(this.console, pendingcommand.field_73702_a);
+         this.server.getPluginManager().callEvent(event);
+         if (event.isCancelled()) {
+            continue;
+         }
+         pendingcommand = new PendingCommand(event.getCommand(), pendingcommand.field_73701_b);
+         this.server.dispatchServerCommand(this.console, pendingcommand);
+         // CraftBukkit end
       }
-
+      SpigotTimings.serverCommandTimer.stopTiming(); // Spigot
    }
 
    public boolean func_71262_S() {
@@ -522,13 +626,39 @@
    }
 
    public String func_71258_A() {
-      return "";
+      // CraftBukkit start - Whole method
+      StringBuilder result = new StringBuilder();
+      Plugin[] plugins = this.server.getPluginManager().getPlugins();
+      result.append(this.server.getName());
+      result.append(" on Bukkit ");
+      result.append(this.server.getBukkitVersion());
+      if (plugins.length > 0 && this.server.getQueryPlugins()) {
+         result.append(": ");
+         for (int i = 0; i < plugins.length; ++i) {
+            if (i > 0) {
+               result.append("; ");
+            }
+            result.append(plugins[i].getDescription().getName());
+            result.append(" ");
+            result.append(plugins[i].getDescription().getVersion().replaceAll(";", ","));
+         }
+      }
+      return result.toString();
+      // CraftBukkit end
    }
 
    public String func_71252_i(String p_71252_1_) {
       this.field_184115_n.func_70007_b();
       this.func_213167_f(() -> {
-         this.func_195571_aL().func_197059_a(this.field_184115_n.func_195540_f(), p_71252_1_);
+         // CraftBukkit start - fire RemoteServerCommandEvent
+         RemoteServerCommandEvent event = new RemoteServerCommandEvent(this.remoteConsole, p_71252_1_);
+         this.server.getPluginManager().callEvent(event);
+         if (event.isCancelled()) {
+            return;
+         }
+         PendingCommand serverCommand = new PendingCommand(event.getCommand(), this.field_184115_n.func_195540_f());
+         this.server.dispatchServerCommand(this.remoteConsole, serverCommand);
+         // CraftBukkit end
       });
       return this.field_184115_n.func_70008_c();
    }
@@ -547,4 +677,21 @@
    public boolean func_213199_b(GameProfile p_213199_1_) {
       return false;
    }
+
+   @Override //Forge: Enable formated text for colors in console.
+   public void func_145747_a(net.minecraft.util.text.ITextComponent message) {
+      field_155771_h.info(message.func_150254_d());
+   }
+
+   // CraftBukkit start
+   @Override
+   public boolean func_71239_B() {
+      return this.func_213221_d_().debug;
+   }
+
+   @Override
+   public CommandSender getBukkitSender(CommandSource wrapper) {
+      return console;
+   }
+   // CraftBukkit end
 }
