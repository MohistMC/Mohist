--- a/net/minecraft/server/level/ServerPlayer.java
+++ b/net/minecraft/server/level/ServerPlayer.java
@@ -1,6 +_,7 @@
 package net.minecraft.server.level;
 
 import com.google.common.collect.Lists;
+import com.mohistmc.entity.MohistModsAbstractHorse;
 import com.mojang.authlib.GameProfile;
 import com.mojang.datafixers.util.Either;
 import com.mojang.logging.LogUtils;
@@ -10,6 +_,7 @@
 import java.util.OptionalInt;
 import java.util.Random;
 import java.util.UUID;
+import java.util.concurrent.atomic.AtomicReference;
 import javax.annotation.Nullable;
 import net.minecraft.BlockUtil;
 import net.minecraft.ChatFormatting;
@@ -79,9 +_,11 @@
 import net.minecraft.stats.Stats;
 import net.minecraft.util.Mth;
 import net.minecraft.util.Unit;
+import net.minecraft.util.datafix.fixes.BlockEntityKeepPacked;
 import net.minecraft.world.Container;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.MenuProvider;
+import net.minecraft.world.damagesource.CombatTracker;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.damagesource.EntityDamageSource;
 import net.minecraft.world.effect.MobEffectInstance;
@@ -99,6 +_,7 @@
 import net.minecraft.world.entity.player.Inventory;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.entity.projectile.AbstractArrow;
+import net.minecraft.world.food.FoodData;
 import net.minecraft.world.inventory.AbstractContainerMenu;
 import net.minecraft.world.inventory.ContainerListener;
 import net.minecraft.world.inventory.ContainerSynchronizer;
@@ -112,6 +_,7 @@
 import net.minecraft.world.item.ServerItemCooldowns;
 import net.minecraft.world.item.WrittenBookItem;
 import net.minecraft.world.item.crafting.Recipe;
+import net.minecraft.world.item.enchantment.EnchantmentHelper;
 import net.minecraft.world.item.trading.MerchantOffers;
 import net.minecraft.world.level.ChunkPos;
 import net.minecraft.world.level.GameRules;
@@ -119,6 +_,7 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.biome.BiomeManager;
 import net.minecraft.world.level.block.Blocks;
+import net.minecraft.world.level.block.ChestBlock;
 import net.minecraft.world.level.block.HorizontalDirectionalBlock;
 import net.minecraft.world.level.block.NetherPortalBlock;
 import net.minecraft.world.level.block.entity.BlockEntity;
@@ -132,9 +_,22 @@
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.scores.PlayerTeam;
 import net.minecraft.world.scores.Score;
+import net.minecraft.world.scores.Scoreboard;
 import net.minecraft.world.scores.Team;
 import net.minecraft.world.scores.criteria.ObjectiveCriteria;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory;
+import org.bukkit.craftbukkit.v1_18_R2.inventory.CraftInventoryHorse;
+import org.bukkit.craftbukkit.v1_18_R2.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.v1_18_R2.util.CraftDimensionUtil;
+import org.bukkit.event.player.*;
+import org.bukkit.inventory.HorseInventory;
+import org.bukkit.inventory.MainHand;
 import org.slf4j.Logger;
+import org.bukkit.Bukkit;
+import org.bukkit.WeatherType;
+import org.bukkit.craftbukkit.v1_18_R2.CraftWorld;
+import org.bukkit.craftbukkit.v1_18_R2.entity.CraftPlayer;
 
 public class ServerPlayer extends Player {
    private static final Logger f_8907_ = LogUtils.getLogger();
@@ -227,20 +_,83 @@
    public int f_8943_;
    public boolean f_8944_;
 
+   // CraftBukkit start
+   public String displayName;
+   public org.bukkit.Location compassTarget;
+   public int newExp = 0;
+   public int newLevel = 0;
+   public int newTotalExp = 0;
+   public boolean keepLevel = false;
+   public double maxHealthCache;
+   public boolean joining = true;
+   public boolean sentListPacket = false;
+   public Integer clientViewDistance;
+   public String locale = "en_us"; // CraftBukkit - add, lowercase
+   // CraftBukkit end
+
+   @Override
+   public CraftPlayer getBukkitEntity() {
+      return (CraftPlayer) super.getBukkitEntity();
+   }
+
    public ServerPlayer(MinecraftServer p_143384_, ServerLevel p_143385_, GameProfile p_143386_) {
       super(p_143385_, p_143385_.m_8900_(), p_143385_.m_8901_(), p_143386_);
       this.f_8939_ = p_143384_.m_7950_(this);
       this.f_8941_ = p_143384_.m_177933_(this);
       this.f_8924_ = p_143384_;
-      this.f_8910_ = p_143384_.m_6846_().m_11239_(this);
+      this.f_8910_ = p_143384_.m_6846_().getPlayerStats(this);
       this.f_8909_ = p_143384_.m_6846_().m_11296_(this);
       this.f_19793_ = 1.0F;
       this.m_9201_(p_143385_);
-   }
+
+      // CraftBukkit start
+      this.displayName = this.m_6302_();
+      this.bukkitPickUpLoot = true;
+      this.maxHealthCache = this.m_21233_();
+   }
+
+   // Yes, this doesn't match Vanilla, but it's the best we can do for now.
+   // If this is an issue, PRs are welcome
+   public final BlockPos getSpawnPoint(ServerLevel worldserver) {
+      BlockPos blockposition = worldserver.m_8900_();
+
+      if (worldserver.m_6042_().m_63935_() && worldserver.f_8549_.m_5464_() != GameType.ADVENTURE) {
+         int i = Math.max(0, this.f_8924_.m_129803_(worldserver));
+         int j = Mth.m_14107_(worldserver.m_6857_().m_61941_((double) blockposition.m_123341_(), (double) blockposition.m_123343_()));
+
+         if (j < i) {
+            i = j;
+         }
+
+         if (j <= 1) {
+            i = 1;
+         }
+
+         long k = (long) (i * 2 + 1);
+         long l = k * k;
+         int i1 = l > 2147483647L ? Integer.MAX_VALUE : (int) l;
+         int j1 = this.m_9237_(i1);
+         int k1 = (new Random()).nextInt(i1);
+
+         for (int l1 = 0; l1 < i1; ++l1) {
+            int i2 = (k1 + j1 * l1) % i1;
+            int j2 = i2 % (i * 2 + 1);
+            int k2 = i2 / (i * 2 + 1);
+            BlockPos blockposition1 = PlayerRespawnLogic.m_183928_(worldserver, blockposition.m_123341_() + j2 - i, blockposition.m_123343_() + k2 - i);
+
+            if (blockposition1 != null) {
+               return blockposition1;
+            }
+         }
+      }
+
+      return blockposition;
+   }
+   // CraftBukkit end
 
    private void m_9201_(ServerLevel p_9202_) {
       BlockPos blockpos = p_9202_.m_8900_();
-      if (p_9202_.m_6042_().m_63935_() && p_9202_.m_142572_().m_129910_().m_5464_() != GameType.ADVENTURE) {
+      if (p_9202_.m_6042_().m_63935_() && p_9202_.f_8549_.m_5464_() != GameType.ADVENTURE) { // CraftBukkit
          int i = Math.max(0, this.f_8924_.m_129803_(p_9202_));
          int j = Mth.m_14107_(p_9202_.m_6857_().m_61941_((double)blockpos.m_123341_(), (double)blockpos.m_123343_()));
          if (j < i) {
@@ -294,11 +_,20 @@
       if (p_9131_.m_128425_("recipeBook", 10)) {
          this.f_8929_.m_12794_(p_9131_.m_128469_("recipeBook"), this.f_8924_.m_129894_());
       }
+      this.getBukkitEntity().readExtraData(p_9131_); // CraftBukkit
 
       if (this.m_5803_()) {
          this.m_5796_();
       }
 
+      // CraftBukkit start
+      String spawnWorld = p_9131_.m_128461_("SpawnWorld");
+      CraftWorld oldWorld = (CraftWorld) Bukkit.getWorld(spawnWorld);
+      if (oldWorld != null) {
+         this.f_8935_ = oldWorld.getHandle().m_46472_();
+      }
+      // CraftBukkit end
+
       if (p_9131_.m_128425_("SpawnX", 99) && p_9131_.m_128425_("SpawnY", 99) && p_9131_.m_128425_("SpawnZ", 99)) {
          this.f_8936_ = new BlockPos(p_9131_.m_128451_("SpawnX"), p_9131_.m_128451_("SpawnY"), p_9131_.m_128451_("SpawnZ"));
          this.f_8937_ = p_9131_.m_128471_("SpawnForced");
@@ -324,7 +_,18 @@
 
       Entity entity1 = this.m_20201_();
       Entity entity = this.m_20202_();
-      if (entity != null && entity1 != this && entity1.m_146898_()) {
+      // CraftBukkit start - handle non-persistent vehicles
+      boolean persistVehicle = true;
+      if (entity1 != null) {
+         Entity vehicle;
+         for (vehicle = entity1; vehicle != null; vehicle = vehicle.m_20202_()) {
+            if (!vehicle.persist) {
+               persistVehicle = false;
+               break;
+            }
+         }
+      }
+      if (persistVehicle && entity != null && entity1 != this && entity1.m_146898_()) {
          CompoundTag compoundtag1 = new CompoundTag();
          CompoundTag compoundtag2 = new CompoundTag();
          entity1.m_20223_(compoundtag2);
@@ -345,8 +_,33 @@
             p_9197_.m_128365_("SpawnDimension", p_9134_);
          });
       }
-
-   }
+      this.getBukkitEntity().setExtraData(p_9197_); // CraftBukkit
+
+
+   }
+
+   // CraftBukkit start - World fallback code, either respawn location or global spawn
+   public void spawnIn(Level world) {
+      this.f_19853_ = world;
+      if (world == null) {
+         this.m_146912_();
+         Vec3 position = null;
+         if (this.f_8935_ != null) {
+            world = this.m_183503_().getCraftServer().getHandle().m_7873_().m_129880_(this.f_8935_);
+            if (world != null && this.m_8961_() != null) {
+               position = Player.m_36130_((ServerLevel ) world, this.m_8961_(), this.m_8962_(), false, false).orElse(null);
+            }
+         }
+         if (world == null || position == null) {
+            world = (( CraftWorld ) Bukkit.getServer().getWorlds().get(0)).getHandle();
+            position = Vec3.m_82512_(((ServerLevel) world).m_8900_());
+         }
+         this.f_19853_ = world;
+         this.m_6034_(position.m_7096_(), position.m_7098_(), position.m_7094_());
+      }
+      this.f_8941_.m_9260_((ServerLevel ) world);
+   }
+   // CraftBukkit end
 
    public void m_8985_(int p_8986_) {
       float f = (float)this.m_36323_();
@@ -398,6 +_,11 @@
    }
 
    public void m_8119_() {
+      // CraftBukkit start
+      if (this.joining) {
+         this.joining = false;
+      }
+      // CraftBukkit end
       this.f_8941_.m_7712_();
       --this.f_8921_;
       if (this.f_19802_ > 0) {
@@ -450,7 +_,8 @@
          }
 
          if (this.m_21223_() != this.f_8917_ || this.f_8918_ != this.f_36097_.m_38702_() || this.f_36097_.m_38722_() == 0.0F != this.f_8919_) {
-            this.f_8906_.m_141995_(new ClientboundSetHealthPacket(this.m_21223_(), this.f_36097_.m_38702_(), this.f_36097_.m_38722_()));
+            //this.connection.send(new ClientboundSetHealthPacket(this.getHealth(), this.foodData.getFoodLevel(), this.foodData.getSaturationLevel()));
+            this.f_8906_.m_141995_(new ClientboundSetHealthPacket(this.getBukkitEntity().getScaledHealth(), this.f_36097_.m_38702_(), this.f_36097_.m_38722_())); //Craftbukkit
             this.f_8917_ = this.m_21223_();
             this.f_8918_ = this.f_36097_.m_38702_();
             this.f_8919_ = this.f_36097_.m_38722_() == 0.0F;
@@ -461,6 +_,12 @@
             this.m_9104_(ObjectiveCriteria.f_83593_, Mth.m_14167_(this.f_8911_));
          }
 
+         // CraftBukkit start - Force max health updates
+         if (this.maxHealthCache != this.m_21233_()) {
+            this.getBukkitEntity().updateScaledHealth();
+         }
+         // CraftBukkit end
+
          if (this.f_36097_.m_38702_() != this.f_8912_) {
             this.f_8912_ = this.f_36097_.m_38702_();
             this.m_9104_(ObjectiveCriteria.f_83594_, Mth.m_14167_((float)this.f_8912_));
@@ -495,6 +_,16 @@
             CriteriaTriggers.f_10582_.m_53645_(this);
          }
 
+         // CraftBukkit start - initialize oldLevel and fire PlayerLevelChangeEvent
+         if (this.oldLevel == -1) {
+            this.oldLevel = this.f_36078_;
+         }
+
+         if (this.oldLevel != this.f_36078_) {
+            CraftEventFactory.callPlayerLevelChangeEvent(this.getBukkitEntity(), this.oldLevel, this.f_36078_);
+            this.oldLevel = this.f_36078_;
+         }
+         // CraftBukkit end
       } catch (Throwable throwable) {
          CrashReport crashreport = CrashReport.m_127521_(throwable, "Ticking player");
          CrashReportCategory crashreportcategory = crashreport.m_127514_("Player being ticked");
@@ -535,15 +_,59 @@
    }
 
    private void m_9104_(ObjectiveCriteria p_9105_, int p_9106_) {
-      this.m_36329_().m_83427_(p_9105_, this.m_6302_(), (p_9178_) -> {
+       // CraftBukkit - Use our scores instead
+       this.f_19853_.getCraftServer().getScoreboardManager().getScoreboardScores(p_9105_, this.m_6302_(), (p_9178_) -> {
          p_9178_.m_83402_(p_9106_);
-      });
+       });
    }
 
    public void m_6667_(DamageSource p_9035_) {
+      if (net.minecraftforge.common.ForgeHooks.onLivingDeath(this, p_9035_)) return;
       boolean flag = this.f_19853_.m_46469_().m_46207_(GameRules.f_46142_);
-      if (flag) {
-         Component component = this.m_21231_().m_19293_();
+
+      // CraftBukkit start - fire PlayerDeathEvent
+      if (this.m_146910_()) {
+         return;
+      }
+      java.util.List<org.bukkit.inventory.ItemStack> loot = new java.util.ArrayList<org.bukkit.inventory.ItemStack>(this.m_150109_().m_6643_());
+      boolean keepInventory = this.f_19853_.m_46469_().m_46207_(GameRules.f_46133_) || this.m_5833_();
+
+      if (!keepInventory) {
+         for (ItemStack item : this.m_150109_().getContents()) {
+            if (!item.m_41619_() && !EnchantmentHelper.m_44924_(item)) {
+               loot.add(CraftItemStack.asCraftMirror(item));
+            }
+         }
+      }
+      // SPIGOT-5071: manually add player loot tables (SPIGOT-5195 - ignores keepInventory rule)
+      this.m_7625_(p_9035_, this.f_20889_ > 0);
+      for (org.bukkit.inventory.ItemStack item : this.drops) {
+         loot.add(item);
+      }
+      this.drops.clear(); // SPIGOT-5188: make sure to clear
+
+
+      Component defaultMessage = this.m_21231_().m_19293_();
+
+      String deathmessage = defaultMessage.getString();
+      keepLevel = keepInventory; // SPIGOT-2222: pre-set keepLevel
+      org.bukkit.event.entity.PlayerDeathEvent event = CraftEventFactory.callPlayerDeathEvent(this, loot, deathmessage, keepInventory);
+
+      // SPIGOT-943 - only call if they have an inventory open
+      if (this.f_36096_ != this.f_36095_) {
+         this.m_6915_();
+      }
+
+      String deathMessage = event.getDeathMessage();
+
+      if (deathMessage != null && deathMessage.length() > 0 && flag) { // TODO: allow plugins to override?
+         Component component;
+         if (deathMessage.equals(deathmessage)) {
+            component = this.m_21231_().m_19293_();
+         } else {
+            component = org.bukkit.craftbukkit.v1_18_R2.util.CraftChatMessage.fromStringOrNull(deathMessage);
+         }
+
          this.f_8906_.m_9831_(new ClientboundPlayerCombatKillPacket(this.m_21231_(), component), (p_9142_) -> {
             if (!p_9142_.isSuccess()) {
                int i = 256;
@@ -575,11 +_,18 @@
          this.m_9215_();
       }
 
-      if (!this.m_5833_()) {
-         this.m_6668_(p_9035_);
+      // SPIGOT-5478 must be called manually now
+      this.m_21226_();
+      // we clean the player's inventory after the EntityDeathEvent is called so plugins can get the exact state of the inventory.
+      if (!event.getKeepInventory()) {
+         this.m_150109_().m_6211_();
       }
 
-      this.m_36329_().m_83427_(ObjectiveCriteria.f_83590_, this.m_6302_(), Score::m_83392_);
+      this.m_9213_(this); // Remove spectated target
+      // CraftBukkit end
+
+      // CraftBukkit - Get our scores instead
+      this.f_19853_.getCraftServer().getScoreboardManager().getScoreboardScores(ObjectiveCriteria.f_83590_, this.m_6302_(), Score::m_83392_);
       LivingEntity livingentity = this.m_21232_();
       if (livingentity != null) {
          this.m_36246_(Stats.f_12987_.m_12902_(livingentity.m_6095_()));
@@ -612,10 +_,12 @@
          this.m_36401_(p_9051_);
          String s = this.m_6302_();
          String s1 = p_9050_.m_6302_();
-         this.m_36329_().m_83427_(ObjectiveCriteria.f_83592_, s, Score::m_83392_);
+         // CraftBukkit - Get our scores instead
+         this.f_19853_.getCraftServer().getScoreboardManager().getScoreboardScores(ObjectiveCriteria.f_83592_, s, Score::m_83392_);
          if (p_9050_ instanceof Player) {
             this.m_36220_(Stats.f_12938_);
-            this.m_36329_().m_83427_(ObjectiveCriteria.f_83591_, s, Score::m_83392_);
+            // CraftBukkit - Get our scores instead
+            this.f_19853_.getCraftServer().getScoreboardManager().getScoreboardScores(ObjectiveCriteria.f_83591_, s, Score::m_83392_);
          } else {
             this.m_36220_(Stats.f_12936_);
          }
@@ -631,7 +_,8 @@
       if (playerteam != null) {
          int i = playerteam.m_7414_().m_126656_();
          if (i >= 0 && i < p_9127_.length) {
-            this.m_36329_().m_83427_(p_9127_[i], p_9125_, Score::m_83392_);
+            // CraftBukkit - Get our scores instead
+            this.f_19853_.getCraftServer().getScoreboardManager().getScoreboardScores(p_9127_[i], p_9125_, Score::m_83392_);
          }
       }
 
@@ -670,7 +_,7 @@
    }
 
    private boolean m_9216_() {
-      return this.f_8924_.m_129799_();
+      return this.f_19853_.pvpMode;
    }
 
    @Nullable
@@ -686,10 +_,29 @@
 
    @Nullable
    public Entity m_5489_(ServerLevel p_9180_) {
-      this.f_8927_ = true;
-      ServerLevel serverlevel = this.m_183503_();
-      ResourceKey<Level> resourcekey = serverlevel.m_46472_();
-      if (resourcekey == Level.f_46430_ && p_9180_.m_46472_() == Level.f_46428_) {
+      // CraftBukkit start
+      return changeDimension(p_9180_,  p_9180_.m_8871_(), PlayerTeleportEvent.TeleportCause.UNKNOWN);
+   }
+   @Nullable
+   public Entity changeDimension(ServerLevel p_9180_, net.minecraftforge.common.util.ITeleporter teleporter) {
+      return changeDimension(p_9180_, teleporter, PlayerTeleportEvent.TeleportCause.UNKNOWN);
+   }
+
+   @Nullable
+   public Entity changeDimension(ServerLevel p_9180_, PlayerTeleportEvent.TeleportCause cause) {
+      return changeDimension(p_9180_,  p_9180_.m_8871_(), cause);
+   }
+
+   @Nullable
+   public Entity changeDimension(ServerLevel p_9180_, net.minecraftforge.common.util.ITeleporter teleporter, PlayerTeleportEvent.TeleportCause cause) {
+      // CraftBukkit end
+      if (!net.minecraftforge.common.ForgeHooks.onTravelToDimension(this, p_9180_.m_46472_())) return null;
+      if (this.m_5803_()) return this; // CraftBukkit - SPIGOT-3154
+      // this.isChangingDimension = true; // CraftBukkit - Moved down and into PlayerList#changeDimension
+      AtomicReference<ServerLevel> serverlevel = new AtomicReference<>(this.m_183503_());
+      ResourceKey<Level> resourcekey = serverlevel.get().m_46472_();
+      if (resourcekey == Level.f_46430_ && p_9180_.m_46472_() == Level.f_46428_ && teleporter.isVanilla()) { //Forge: Fix non-vanilla teleporters triggering end credits
+         this.f_8927_ = true;
          this.m_19877_();
          this.m_183503_().m_143261_(this, Entity.RemovalReason.CHANGED_DIMENSION);
          if (!this.f_8944_) {
@@ -705,25 +_,43 @@
          this.f_8906_.m_141995_(new ClientboundChangeDifficultyPacket(leveldata.m_5472_(), leveldata.m_5474_()));
          PlayerList playerlist = this.f_8924_.m_6846_();
          playerlist.m_11289_(this);
-         serverlevel.m_143261_(this, Entity.RemovalReason.CHANGED_DIMENSION);
-         this.m_146912_();
-         PortalInfo portalinfo = this.m_7937_(p_9180_);
+         serverlevel.get().m_143261_(this, Entity.RemovalReason.CHANGED_DIMENSION);
+         this.revive();
+         PortalInfo portalinfo = teleporter.getPortalInfo(this, p_9180_, this::m_7937_);
          if (portalinfo != null) {
-            serverlevel.m_46473_().m_6180_("moving");
-            if (resourcekey == Level.f_46428_ && p_9180_.m_46472_() == Level.f_46429_) {
-               this.f_8933_ = this.m_20182_();
-            } else if (p_9180_.m_46472_() == Level.f_46430_) {
-               this.m_9006_(p_9180_, new BlockPos(portalinfo.f_77676_));
+            Entity e = teleporter.placeEntity(this, serverlevel.get(), p_9180_, this.m_146908_(), spawnPortal -> {//Forge: Start vanilla logic
+           serverlevel.get().m_46473_().m_6180_("moving");
+           if (resourcekey == Level.f_46428_ && p_9180_.m_46472_() == Level.f_46429_) {
+              this.f_8933_ = this.m_20182_();
+           } else if (spawnPortal && p_9180_.m_46472_() == Level.f_46430_ && portalinfo.portalEvent != null && portalinfo.portalEvent.getCanCreatePortal()) {
+              this.m_9006_(p_9180_, new BlockPos(portalinfo.f_77676_));
+           }
+
+            Location enter = this.getBukkitEntity().getLocation();
+            Location exit = (serverlevel.get() == null) ? null : new Location(portalinfo.level.getWorld(), portalinfo.f_77676_.f_82479_, portalinfo.f_77676_.f_82480_, portalinfo.f_77676_.f_82481_, portalinfo.f_77678_, portalinfo.f_77679_);
+            PlayerTeleportEvent tpEvent = new PlayerTeleportEvent(this.getBukkitEntity(), enter, exit, cause);
+            Bukkit.getServer().getPluginManager().callEvent(tpEvent);
+            if (tpEvent.isCancelled() || tpEvent.getTo() == null) {
+               return null;
             }
+            exit = tpEvent.getTo();
+            serverlevel.set(((CraftWorld) exit.getWorld()).getHandle());
+            // CraftBukkit end
 
-            serverlevel.m_46473_().m_7238_();
-            serverlevel.m_46473_().m_6180_("placing");
+            serverlevel.get().m_46473_().m_7238_();
+            serverlevel.get().m_46473_().m_6180_("placing");
             this.m_143425_(p_9180_);
             p_9180_.m_8817_(this);
-            this.m_19915_(portalinfo.f_77678_, portalinfo.f_77679_);
-            this.m_6027_(portalinfo.f_77676_.f_82479_, portalinfo.f_77676_.f_82480_, portalinfo.f_77676_.f_82481_);
-            serverlevel.m_46473_().m_7238_();
-            this.m_9209_(serverlevel);
+            //this.setRot(portalinfo.yRot, portalinfo.xRot);
+            //this.moveTo(portalinfo.pos.x, portalinfo.pos.y, portalinfo.pos.z);
+            this.f_8906_.teleport(exit);
+            this.f_8906_.m_9953_();
+            serverlevel.get().m_46473_().m_7238_();
+            this.m_9209_(serverlevel.get());
+            return this;//forge: this is part of the ITeleporter patch
+            });//Forge: End vanilla logic
+
+            if (e != this) throw new java.lang.IllegalArgumentException(String.format(java.util.Locale.ENGLISH, "Teleporter %s returned not the player entity but instead %s, expected PlayerEntity %s", teleporter, e, this));
             this.f_8906_.m_141995_(new ClientboundPlayerAbilitiesPacket(this.m_150110_()));
             playerlist.m_11229_(this, p_9180_);
             playerlist.m_11292_(this);
@@ -732,10 +_,16 @@
                this.f_8906_.m_141995_(new ClientboundUpdateMobEffectPacket(this.m_142049_(), mobeffectinstance));
             }
 
+            if (teleporter.playTeleportSound(this, serverlevel.get(), p_9180_))
             this.f_8906_.m_141995_(new ClientboundLevelEventPacket(1032, BlockPos.f_121853_, 0, false));
             this.f_8920_ = -1;
             this.f_8917_ = -1.0F;
             this.f_8918_ = -1;
+            net.minecraftforge.event.ForgeEventFactory.firePlayerChangedDimensionEvent(this, resourcekey, p_9180_.m_46472_());
+            // CraftBukkit start
+            PlayerChangedWorldEvent changeEvent = new PlayerChangedWorldEvent(this.getBukkitEntity(), serverlevel.get().getWorld());
+            this.f_19853_.getCraftServer().getPluginManager().callEvent(changeEvent);
+            // CraftBukkit end
          }
 
          return this;
@@ -755,14 +_,13 @@
       }
 
    }
-
    protected Optional<BlockUtil.FoundRectangle> m_183318_(ServerLevel p_184131_, BlockPos p_184132_, boolean p_184133_, WorldBorder p_184134_) {
       Optional<BlockUtil.FoundRectangle> optional = super.m_183318_(p_184131_, p_184132_, p_184133_, p_184134_);
       if (optional.isPresent()) {
          return optional;
       } else {
          Direction.Axis direction$axis = this.f_19853_.m_8055_(this.f_19819_).m_61145_(NetherPortalBlock.f_54904_).orElse(Direction.Axis.X);
-         Optional<BlockUtil.FoundRectangle> optional1 = p_184131_.m_8871_().m_77666_(p_184132_, direction$axis);
+         Optional<BlockUtil.FoundRectangle> optional1 = p_184131_.m_8871_().m_77666_(p_184132_, direction$axis); // CraftBukkit
          if (!optional1.isPresent()) {
             f_8907_.error("Unable to create a portal, likely target out of worldborder");
          }
@@ -771,15 +_,25 @@
       }
    }
 
-   private void m_9209_(ServerLevel p_9210_) {
+   public void m_9209_ ( ServerLevel p_9210_ ) {
       ResourceKey<Level> resourcekey = p_9210_.m_46472_();
       ResourceKey<Level> resourcekey1 = this.f_19853_.m_46472_();
-      CriteriaTriggers.f_10588_.m_19757_(this, resourcekey, resourcekey1);
-      if (resourcekey == Level.f_46429_ && resourcekey1 == Level.f_46428_ && this.f_8933_ != null) {
+
+      // CraftBukkit start
+      ResourceKey<Level> maindimensionkey = CraftDimensionUtil.getMainDimensionKey(p_9210_);
+      ResourceKey<Level> maindimensionkey1 = CraftDimensionUtil.getMainDimensionKey(this.f_19853_);
+
+      CriteriaTriggers.f_10588_.m_19757_(this, maindimensionkey, maindimensionkey1);
+      if (maindimensionkey != resourcekey || maindimensionkey1 != resourcekey1) {
+         CriteriaTriggers.f_10588_.m_19757_(this, resourcekey, resourcekey1);
+      }
+
+      if (maindimensionkey == Level.f_46429_ && maindimensionkey1 == Level.f_46428_ && this.f_8933_ != null) {
+         // CraftBukkit end
          CriteriaTriggers.f_10552_.m_186165_(this, this.f_8933_);
       }
 
-      if (resourcekey1 != Level.f_46429_) {
+      if (maindimensionkey1 != Level.f_46429_) {
          this.f_8933_ = null;
       }
 
@@ -797,19 +_,22 @@
       super.m_7938_(p_9047_, p_9048_);
       this.f_36096_.m_38946_();
    }
-
-   public Either<Player.BedSleepingProblem, Unit> m_7720_(BlockPos p_9115_) {
-      Direction direction = this.f_19853_.m_8055_(p_9115_).m_61143_(HorizontalDirectionalBlock.f_54117_);
+      // CraftBukkit start - moved bed result checks from below into separate method
+      private Either<Player.BedSleepingProblem, Unit> getBedResult(BlockPos p_9115_, Direction direction) {
+      java.util.Optional<BlockPos> optAt = java.util.Optional.of(p_9115_);
+      Player.BedSleepingProblem ret = net.minecraftforge.event.ForgeEventFactory.onPlayerSleepInBed(this, optAt);
+      if (ret != null) return Either.left(ret);
+      Direction direction1 = this.f_19853_.m_8055_(p_9115_).m_61143_(HorizontalDirectionalBlock.f_54117_);
       if (!this.m_5803_() && this.m_6084_()) {
-         if (!this.f_19853_.m_6042_().m_63956_()) {
+         if (!this.f_19853_.m_6042_().m_63956_() || !this.f_19853_.m_6042_().m_63961_()) {
             return Either.left(Player.BedSleepingProblem.NOT_POSSIBLE_HERE);
-         } else if (!this.m_9116_(p_9115_, direction)) {
+         } else if (!this.m_9116_(p_9115_, direction1)) {
             return Either.left(Player.BedSleepingProblem.TOO_FAR_AWAY);
-         } else if (this.m_9191_(p_9115_, direction)) {
+         } else if (this.m_9191_(p_9115_, direction1)) {
             return Either.left(Player.BedSleepingProblem.OBSTRUCTED);
          } else {
             this.m_9158_(this.f_19853_.m_46472_(), p_9115_, this.m_146908_(), false, true);
-            if (this.f_19853_.m_46461_()) {
+            if (!net.minecraftforge.event.ForgeEventFactory.fireSleepingTimeCheck(this, optAt)) {
                return Either.left(Player.BedSleepingProblem.NOT_POSSIBLE_NOW);
             } else {
                if (!this.m_7500_()) {
@@ -824,21 +_,48 @@
                   }
                }
 
-               Either<Player.BedSleepingProblem, Unit> either = super.m_7720_(p_9115_).ifRight((p_9029_) -> {
-                  this.m_36220_(Stats.f_12969_);
-                  CriteriaTriggers.f_10583_.m_53645_(this);
-               });
-               if (!this.m_183503_().m_143333_()) {
-                  this.m_5661_(new TranslatableComponent("sleep.not_possible"), true);
-               }
-
-               ((ServerLevel)this.f_19853_).m_8878_();
-               return either;
+               return Either.right(Unit.INSTANCE);
             }
          }
       } else {
          return Either.left(Player.BedSleepingProblem.OTHER_PROBLEM);
       }
+      }
+
+      @Override
+      public Either<Player.BedSleepingProblem, Unit> m_7720_(BlockPos p_9115_) {
+         return startSleepInBed(p_9115_, false);
+      }
+
+   @Override
+   public Either<Player.BedSleepingProblem, Unit> startSleepInBed(BlockPos blockposition, boolean force) {
+      Direction enumdirection = (Direction) this.f_19853_.m_8055_(blockposition).m_61143_(HorizontalDirectionalBlock.f_54117_);
+      Either<Player.BedSleepingProblem, Unit> bedResult = this.getBedResult(blockposition, enumdirection);
+
+      if (bedResult.left().orElse(null) == Player.BedSleepingProblem.OTHER_PROBLEM) {
+         return bedResult; // return immediately if the result is not bypassable by plugins
+      }
+
+      if (force) {
+         bedResult = Either.right(Unit.INSTANCE);
+      }
+
+      bedResult = org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory.callPlayerBedEnterEvent(this, blockposition, bedResult);
+      if (bedResult.left().isPresent()) {
+         return bedResult;
+      }
+
+      Either<Player.BedSleepingProblem, Unit> either = super.startSleepInBed(blockposition, force).ifRight((unit) -> {
+         this.m_36220_(Stats.f_12969_);
+         CriteriaTriggers.f_10583_.m_53645_(this);
+      });
+      if (!this.m_183503_().m_143333_()) {
+         this.m_5661_(new TranslatableComponent("sleep.not_possible"), true);
+      }
+
+      ((ServerLevel)this.f_19853_).m_8878_();
+      return either;
+
    }
 
    public void m_5802_(BlockPos p_9190_) {
@@ -847,6 +_,7 @@
    }
 
    private boolean m_9116_(BlockPos p_9117_, Direction p_9118_) {
+      if (p_9118_ == null) return false;
       return this.m_9222_(p_9117_) || this.m_9222_(p_9117_.m_142300_(p_9118_.m_122424_()));
    }
 
@@ -861,6 +_,24 @@
    }
 
    public void m_6145_(boolean p_9165_, boolean p_9166_) {
+      if (!this.m_5803_()) return; // CraftBukkit - Can't leave bed if not in one!
+      // CraftBukkit start - fire PlayerBedLeaveEvent
+      CraftPlayer player = this.getBukkitEntity();
+      BlockPos bedPosition = this.m_21257_().orElse(null);
+
+      org.bukkit.block.Block bed;
+      if (bedPosition != null) {
+         bed = this.f_19853_.getWorld().getBlockAt(bedPosition.m_123341_(), bedPosition.m_123342_(), bedPosition.m_123343_());
+      } else {
+         bed = this.f_19853_.getWorld().getBlockAt(player.getLocation());
+      }
+
+      PlayerBedLeaveEvent event = new PlayerBedLeaveEvent(player, bed, true);
+      this.f_19853_.getCraftServer().getPluginManager().callEvent(event);
+      if (event.isCancelled()) {
+         return;
+      }
+      // CraftBukkit end
       if (this.m_5803_()) {
          this.m_183503_().m_7726_().m_8394_(this, new ClientboundAnimatePacket(this, 2));
       }
@@ -935,16 +_,44 @@
       this.f_8940_ = this.f_8940_ % 100 + 1;
    }
 
+   public int nextContainerCounterInt() {
+      this.f_8940_ = this.f_8940_ % 100 + 1;
+      return f_8940_; // CraftBukkit
+   }
+
    public OptionalInt m_5893_(@Nullable MenuProvider p_9033_) {
       if (p_9033_ == null) {
          return OptionalInt.empty();
       } else {
-         if (this.f_36096_ != this.f_36095_) {
-            this.m_6915_();
+         // CraftBukkit start - SPIGOT-6552: Handle inventory closing in CraftEventFactory#callInventoryOpenEvent(...)
+            /*
+         if (this.containerMenu != this.inventoryMenu) {
+            this.closeContainer();
          }
-
+            */
+         // CraftBukkit end
          this.m_9217_();
          AbstractContainerMenu abstractcontainermenu = p_9033_.m_7208_(this.f_8940_, this.m_150109_(), this);
+
+         // CraftBukkit start - Inventory open hook
+         if (abstractcontainermenu != null) {
+            abstractcontainermenu.setTitle(p_9033_.m_5446_());
+
+            boolean cancelled = false;
+            abstractcontainermenu = CraftEventFactory.callInventoryOpenEvent(this, abstractcontainermenu, cancelled);
+            if (abstractcontainermenu == null && !cancelled) { // Let pre-cancelled events fall through
+               // SPIGOT-5263 - close chest if cancelled
+               if (p_9033_ instanceof Container) {
+                  ((Container) p_9033_).m_5785_(this);
+               } else if (p_9033_ instanceof ChestBlock.DoubleInventory) {
+                  // SPIGOT-5355 - double chests too :(
+                  ((ChestBlock.DoubleInventory) p_9033_).inventorylargechest.m_5785_(this);
+               }
+               return OptionalInt.empty();
+            }
+         }
+         // CraftBukkit end
+
          if (abstractcontainermenu == null) {
             if (this.m_5833_()) {
                this.m_5661_((new TranslatableComponent("container.spectatorCantOpen")).m_130940_(ChatFormatting.RED), true);
@@ -952,9 +_,10 @@
 
             return OptionalInt.empty();
          } else {
-            this.f_8906_.m_141995_(new ClientboundOpenScreenPacket(abstractcontainermenu.f_38840_, abstractcontainermenu.m_6772_(), p_9033_.m_5446_()));
-            this.m_143399_(abstractcontainermenu);
             this.f_36096_ = abstractcontainermenu;
+            this.f_8906_.m_141995_(new ClientboundOpenScreenPacket(abstractcontainermenu.f_38840_, abstractcontainermenu.m_6772_(), abstractcontainermenu.getTitle()));
+            this.m_143399_(abstractcontainermenu);
+            net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.player.PlayerContainerEvent.Open(this, this.f_36096_));
             return OptionalInt.of(this.f_8940_);
          }
       }
@@ -965,14 +_,25 @@
    }
 
    public void m_6658_(AbstractHorse p_9059_, Container p_9060_) {
-      if (this.f_36096_ != this.f_36095_) {
-         this.m_6915_();
-      }
-
+      // CraftBukkit start - Inventory open hook
       this.m_9217_();
+      AbstractContainerMenu container = new HorseInventoryMenu(this.f_8940_, this.m_150109_(), p_9060_, p_9059_);
+      container.setTitle(p_9059_.m_5446_());
+      container = CraftEventFactory.callInventoryOpenEvent(this, container);
+
+      if (container == null) {
+         p_9060_.m_5785_(this);
+         return;
+      }
+      // CraftBukkit end
+      if (this.f_36096_ != this.f_36095_) {
+         this.m_6915_();
+      }
+      // this.nextContainerCounter(); // CraftBukkit - moved up
       this.f_8906_.m_141995_(new ClientboundHorseScreenOpenPacket(this.f_8940_, p_9060_.m_6643_(), p_9059_.m_142049_()));
-      this.f_36096_ = new HorseInventoryMenu(this.f_8940_, this.m_150109_(), p_9060_, p_9059_);
+      this.f_36096_ = container; // CraftBukkit
       this.m_143399_(this.f_36096_);
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.player.PlayerContainerEvent.Open(this, this.f_36096_));
    }
 
    public void m_6986_(ItemStack p_9082_, InteractionHand p_9083_) {
@@ -991,6 +_,7 @@
    }
 
    public void m_6915_() {
+      CraftEventFactory.handleInventoryCloseEvent(this); // CraftBukkit
       this.f_8906_.m_141995_(new ClientboundContainerClosePacket(this.f_36096_.f_38840_));
       this.m_9230_();
    }
@@ -998,6 +_,7 @@
    public void m_9230_() {
       this.f_36096_.m_6877_(this);
       this.f_36095_.m_150414_(this.f_36096_);
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.player.PlayerContainerEvent.Close(this, this.f_36096_));
       this.f_36096_ = this.f_36095_;
    }
 
@@ -1019,14 +_,14 @@
 
    public void m_6278_(Stat<?> p_9026_, int p_9027_) {
       this.f_8910_.m_13023_(this, p_9026_, p_9027_);
-      this.m_36329_().m_83427_(p_9026_, this.m_6302_(), (p_8996_) -> {
+      this.f_19853_.getCraftServer().getScoreboardManager().getScoreboardScores(p_9026_, this.m_6302_(), (p_8996_) -> { // CraftBukkit - Get our scores instead
          p_8996_.m_83393_(p_9027_);
       });
    }
 
    public void m_7166_(Stat<?> p_9024_) {
       this.f_8910_.m_6085_(this, p_9024_, 0);
-      this.m_36329_().m_83427_(p_9024_, this.m_6302_(), Score::m_83401_);
+      this.f_19853_.getCraftServer().getScoreboardManager().getScoreboardScores(p_9024_, this.m_6302_(), Score::m_83401_); // CraftBukkit - Get our scores instead
    }
 
    public int m_7281_(Collection<Recipe<?>> p_9129_) {
@@ -1067,7 +_,16 @@
 
    public void m_9233_() {
       this.f_8917_ = -1.0E8F;
-   }
+      this.f_8920_ = -1; // CraftBukkit - Added to reset
+   }
+
+   // CraftBukkit start - Support multi-line messages
+   public void sendMessage(UUID uuid, Component[] ichatbasecomponent) {
+      for (Component component : ichatbasecomponent) {
+         this.m_6352_(component, (uuid == null) ? Util.f_137441_ : uuid);
+      }
+   }
+   // CraftBukkit end
 
    public void m_5661_(Component p_9154_, boolean p_9155_) {
       this.m_9146_(p_9154_, p_9155_ ? ChatType.GAME_INFO : ChatType.CHAT, Util.f_137441_);
@@ -1118,11 +_,18 @@
       this.f_8920_ = -1;
       this.f_8917_ = -1.0F;
       this.f_8918_ = -1;
-      this.f_8929_.m_12685_(p_9016_.f_8929_);
+      //his.recipeBook.copyOverData(p_9016_.recipeBook); // CraftBukkit
       this.f_8928_ = p_9016_.f_8928_;
       this.f_8933_ = p_9016_.f_8933_;
       this.m_36362_(p_9016_.m_36331_());
       this.m_36364_(p_9016_.m_36332_());
+
+      //Copy over a section of the Entity Data from the old player.
+      //Allows mods to specify data that persists after players respawn.
+      CompoundTag old = p_9016_.getPersistentData();
+      if (old.m_128441_(PERSISTED_NBT_TAG))
+          getPersistentData().m_128365_(PERSISTED_NBT_TAG, old.m_128423_(PERSISTED_NBT_TAG));
+      net.minecraftforge.event.ForgeEventFactory.onPlayerClone(this, p_9016_, !p_9017_);
    }
 
    protected void m_142540_(MobEffectInstance p_143393_, @Nullable Entity p_143394_) {
@@ -1181,6 +_,8 @@
    }
 
    public boolean m_143403_(GameType p_143404_) {
+      p_143404_ = net.minecraftforge.common.ForgeHooks.onChangeGameType(this, this.f_8941_.m_9290_(), p_143404_);
+      if (p_143404_ == null) return false;
       if (!this.f_8941_.m_143473_(p_143404_)) {
          return false;
       } else {
@@ -1231,12 +_,25 @@
    }
 
    public void m_9156_(ServerboundClientInformationPacket p_9157_) {
+      // CraftBukkit start
+      if (m_5737_() != p_9157_.f_133868_()) {
+         PlayerChangedMainHandEvent event = new PlayerChangedMainHandEvent(getBukkitEntity(), m_5737_() == HumanoidArm.LEFT ? MainHand.LEFT : MainHand.RIGHT);
+         this.f_8924_.server.getPluginManager().callEvent(event);
+      }
+      if (!this.locale.equals(p_9157_.f_133863_())) {
+         PlayerLocaleChangeEvent event = new PlayerLocaleChangeEvent(getBukkitEntity(), p_9157_.f_133863_());
+         this.f_8924_.server.getPluginManager().callEvent(event);
+      }
+      this.locale = p_9157_.f_133863_();
+      this.clientViewDistance = p_9157_.f_133864_();
+      // CraftBukkit end
       this.f_8922_ = p_9157_.f_133865_();
       this.f_8923_ = p_9157_.f_133866_();
       this.f_143378_ = p_9157_.f_179550_();
       this.f_184127_ = p_9157_.f_195812_();
       this.m_20088_().m_135381_(f_36089_, (byte)p_9157_.f_133867_());
       this.m_20088_().m_135381_(f_36090_, (byte)(p_9157_.f_133868_() == HumanoidArm.LEFT ? 0 : 1));
+      this.language = p_9157_.f_133863_();
    }
 
    public boolean m_143432_() {
@@ -1296,9 +_,10 @@
    public void m_9213_(@Nullable Entity p_9214_) {
       Entity entity = this.m_8954_();
       this.f_8926_ = (Entity)(p_9214_ == null ? this : p_9214_);
+      while (this.f_8926_ instanceof net.minecraftforge.entity.PartEntity<?> partEntity) this.f_8926_ = partEntity.getParent(); // FORGE: fix MC-46486
       if (entity != this.f_8926_) {
          this.f_8906_.m_141995_(new ClientboundSetCameraPacket(this.f_8926_));
-         this.m_6021_(this.f_8926_.m_20185_(), this.f_8926_.m_20186_(), this.f_8926_.m_20189_());
+         this.f_8906_.teleport(this.f_8926_.m_20185_(), this.f_8926_.m_20186_(), this.f_8926_.m_20189_(), this.m_146908_(), this.m_146909_(), PlayerTeleportEvent.TeleportCause.SPECTATE); // CraftBukkit
       }
 
    }
@@ -1325,7 +_,15 @@
 
    @Nullable
    public Component m_8957_() {
-      return null;
+      if (!this.hasTabListName) {
+         this.tabListDisplayName = net.minecraftforge.event.ForgeEventFactory.getPlayerTabListDisplayName(this);
+         this.hasTabListName = true;
+      }
+      return this.tabListDisplayName;
+   }
+
+   public void setTabListDisplayName(Component tabListDisplayName) {
+      this.tabListDisplayName = tabListDisplayName;
    }
 
    public void m_6674_(InteractionHand p_9031_) {
@@ -1346,25 +_,32 @@
    }
 
    public void m_8999_(ServerLevel p_9000_, double p_9001_, double p_9002_, double p_9003_, float p_9004_, float p_9005_) {
+      this.teleportTo(p_9000_, p_9001_, p_9002_, p_9003_, p_9004_, p_9005_, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause.UNKNOWN);
+   }
+
+   public void teleportTo(ServerLevel p_9000_, double p_9001_, double p_9002_, double p_9003_, float p_9004_, float p_9005_, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause cause) {
+      // CraftBukkit end
       this.m_9213_(this);
       this.m_8127_();
       if (p_9000_ == this.f_19853_) {
-         this.f_8906_.m_9774_(p_9001_, p_9002_, p_9003_, p_9004_, p_9005_);
-      } else {
+         this.f_8906_.teleport(p_9001_, p_9002_, p_9003_, p_9004_, p_9005_, cause);
+      } else if (net.minecraftforge.common.ForgeHooks.onTravelToDimension(this, p_9000_.m_46472_())) {
          ServerLevel serverlevel = this.m_183503_();
          LevelData leveldata = p_9000_.m_6106_();
          this.f_8906_.m_141995_(new ClientboundRespawnPacket(p_9000_.m_204156_(), p_9000_.m_46472_(), BiomeManager.m_47877_(p_9000_.m_7328_()), this.f_8941_.m_9290_(), this.f_8941_.m_9293_(), p_9000_.m_46659_(), p_9000_.m_8584_(), true));
          this.f_8906_.m_141995_(new ClientboundChangeDifficultyPacket(leveldata.m_5472_(), leveldata.m_5474_()));
          this.f_8924_.m_6846_().m_11289_(this);
          serverlevel.m_143261_(this, Entity.RemovalReason.CHANGED_DIMENSION);
-         this.m_146912_();
+         this.revive();
          this.m_7678_(p_9001_, p_9002_, p_9003_, p_9004_, p_9005_);
          this.m_143425_(p_9000_);
          p_9000_.m_8622_(this);
          this.m_9209_(serverlevel);
-         this.f_8906_.m_9774_(p_9001_, p_9002_, p_9003_, p_9004_, p_9005_);
+         this.f_8906_.teleport(p_9001_, p_9002_, p_9003_, p_9004_, p_9005_, cause);
+         this.f_8941_.m_9260_(p_9000_);
          this.f_8924_.m_6846_().m_11229_(this, p_9000_);
          this.f_8924_.m_6846_().m_11292_(this);
+         net.minecraftforge.event.ForgeEventFactory.firePlayerChangedDimensionEvent(this, serverlevel.m_46472_(), p_9000_.m_46472_());
       }
 
    }
@@ -1387,6 +_,7 @@
    }
 
    public void m_9158_(ResourceKey<Level> p_9159_, @Nullable BlockPos p_9160_, float p_9161_, boolean p_9162_, boolean p_9163_) {
+      if (net.minecraftforge.event.ForgeEventFactory.onPlayerSpawnSet(this, p_9160_ == null ? Level.f_46428_ : p_9159_, p_9160_, p_9162_)) return;
       if (p_9160_ != null) {
          boolean flag = p_9160_.equals(this.f_8936_) && p_9159_.equals(this.f_8935_);
          if (p_9163_ && !flag) {
@@ -1438,6 +_,8 @@
       if (itementity == null) {
          return null;
       } else {
+         if (captureDrops() != null) captureDrops().add(itementity);
+         else
          this.f_19853_.m_7967_(itementity);
          ItemStack itemstack = itementity.m_32055_();
          if (p_9087_) {
@@ -1452,6 +_,29 @@
       }
    }
 
+   private String language = "en_us";
+   /**
+    * Returns the language last reported by the player as their local language.
+    * Defaults to en_us if the value is unknown.
+    */
+   public String getLanguage() {
+      return this.language;
+   }
+
+   // We need this as tablistDisplayname may be null even if the the event was fired.
+   private boolean hasTabListName = false;
+   private Component tabListDisplayName = null;
+   /**
+    * Force the name displayed in the tab list to refresh, by firing {@link net.minecraftforge.event.entity.player.PlayerEvent.TabListNameFormat}.
+    */
+   public void refreshTabListName() {
+      Component oldName = this.tabListDisplayName;
+      this.tabListDisplayName = net.minecraftforge.event.ForgeEventFactory.getPlayerTabListDisplayName(this);
+      if (!java.util.Objects.equals(oldName, this.tabListDisplayName)) {
+         this.m_20194_().m_6846_().m_11268_(new net.minecraft.network.protocol.game.ClientboundPlayerInfoPacket(net.minecraft.network.protocol.game.ClientboundPlayerInfoPacket.Action.UPDATE_DISPLAY_NAME, this));
+      }
+   }
+
    public TextFilter m_8967_() {
       return this.f_8939_;
    }
@@ -1511,14 +_,147 @@
 
    public boolean m_182294_(boolean p_182295_) {
       Inventory inventory = this.m_150109_();
+      ItemStack selected = inventory.m_36056_();
+      if (selected.m_41619_() || !selected.onDroppedByPlayer(this)) return false;
       ItemStack itemstack = inventory.m_182403_(p_182295_);
       this.f_36096_.m_182417_(inventory, inventory.f_35977_).ifPresent((p_182293_) -> {
          this.f_36096_.m_150404_(p_182293_, inventory.m_36056_());
       });
-      return this.m_7197_(itemstack, false, true) != null;
+      return net.minecraftforge.common.ForgeHooks.onPlayerTossEvent(this, itemstack, true) != null;
    }
 
    public boolean m_184128_() {
       return this.f_184127_;
    }
+
+   // CraftBukkit start - Add per-player time and weather.
+   public long timeOffset = 0;
+   public boolean relativeTime = true;
+
+   public long getPlayerTime() {
+      if (this.relativeTime) {
+         // Adds timeOffset to the current server time.
+         return this.f_19853_.m_46468_() + this.timeOffset;
+      } else {
+         // Adds timeOffset to the beginning of this day.
+         return this.f_19853_.m_46468_() - (this.f_19853_.m_46468_() % 24000) + this.timeOffset;
+      }
+   }
+
+   public WeatherType weather = null;
+
+   public WeatherType getPlayerWeather() {
+      return this.weather;
+   }
+
+   public void setPlayerWeather(WeatherType type, boolean plugin) {
+      if (!plugin && this.weather != null) {
+         return;
+      }
+
+      if (plugin) {
+         this.weather = type;
+      }
+
+      if (type == WeatherType.DOWNFALL) {
+         this.f_8906_.m_141995_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132155_, 0));
+      } else {
+         this.f_8906_.m_141995_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132154_, 0));
+      }
+   }
+
+   public void resetPlayerWeather() {
+      this.weather = null;
+      this.setPlayerWeather(this.f_19853_.m_6106_().m_6533_() ? WeatherType.DOWNFALL : WeatherType.CLEAR, false);
+   }
+
+   private float pluginRainPosition;
+   private float pluginRainPositionPrevious;
+
+   public void updateWeather(float oldRain, float newRain, float oldThunder, float newThunder) {
+      if (this.weather == null) {
+         // Vanilla
+         if (oldRain != newRain) {
+            this.f_8906_.m_141995_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132160_, newRain));
+         }
+      } else {
+         // Plugin
+         if (pluginRainPositionPrevious != pluginRainPosition) {
+            this.f_8906_.m_141995_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132160_, pluginRainPosition));
+         }
+      }
+
+      if (oldThunder != newThunder) {
+         if (weather == WeatherType.DOWNFALL || weather == null) {
+            this.f_8906_.m_141995_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132161_, newThunder));
+         } else {
+            this.f_8906_.m_141995_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132161_, 0));
+         }
+      }
+   }
+
+   public void tickWeather() {
+      if (this.weather == null) return;
+
+      pluginRainPositionPrevious = pluginRainPosition;
+      if (weather == WeatherType.DOWNFALL) {
+         pluginRainPosition += 0.01;
+      } else {
+         pluginRainPosition -= 0.01;
+      }
+
+      pluginRainPosition = Mth.m_14036_(pluginRainPosition, 0.0F, 1.0F);
+   }
+
+   // SPIGOT-1903, MC-98153
+   public void forceSetPositionRotation(double x, double y, double z, float yaw, float pitch) {
+      this.m_7678_(x, y, z, yaw, pitch);
+      this.f_8906_.m_9953_();
+   }
+
+   @Override
+   public boolean m_6107_() {
+      return super.m_6107_() || !getBukkitEntity().isOnline();
+   }
+
+   @Override
+   public Scoreboard m_36329_() {
+      return getBukkitEntity().getScoreboard().getHandle();
+   }
+
+   public void reset() {
+      float exp = 0;
+      boolean keepInventory = this.f_19853_.m_46469_().m_46207_(GameRules.f_46133_);
+
+      if (this.keepLevel) { // CraftBukkit - SPIGOT-6687: Only use keepLevel (was pre-set with RULE_KEEPINVENTORY value in PlayerDeathEvent)
+         exp = this.f_36080_;
+         this.newTotalExp = this.f_36079_;
+         this.newLevel = this.f_36078_;
+      }
+
+      this.m_21153_(this.m_21233_());
+      this.m_5810_(); // CraftBukkit - SPIGOT-6682: Clear active item on reset
+      this.f_19831_ = 0;
+      this.f_19789_ = 0;
+      this.f_36097_ = new FoodData(this);
+      this.f_36078_ = this.newLevel;
+      this.f_36079_ = this.newTotalExp;
+      this.f_36080_ = 0;
+      this.f_20919_ = 0;
+      this.setArrowCount(0, true); // CraftBukkit - ArrowBodyCountChangeEvent
+      this.removeAllEffects(org.bukkit.event.entity.EntityPotionEffectEvent.Cause.DEATH);
+      this.f_20948_ = true;
+      this.f_36096_ = this.f_36095_;
+      this.f_20888_ = null;
+      this.f_20949_ = null;
+      this.f_20944_ = new CombatTracker(this);
+      this.f_8920_ = -1;
+      if (this.keepLevel) { // CraftBukkit - SPIGOT-6687: Only use keepLevel (was pre-set with RULE_KEEPINVENTORY value in PlayerDeathEvent)
+         this.f_36080_ = exp;
+      } else {
+         this.m_6756_(this.newExp);
+      }
+      this.keepLevel = false;
+   }
+   // CraftBukkit end
 }
