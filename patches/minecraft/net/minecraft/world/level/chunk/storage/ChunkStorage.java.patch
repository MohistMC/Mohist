--- a/net/minecraft/world/level/chunk/storage/ChunkStorage.java
+++ b/net/minecraft/world/level/chunk/storage/ChunkStorage.java
@@ -6,16 +_,22 @@
 import java.nio.file.Path;
 import java.util.Optional;
 import java.util.concurrent.CompletableFuture;
+import java.util.concurrent.ExecutionException;
+import java.util.concurrent.atomic.AtomicReference;
 import java.util.function.Supplier;
 import javax.annotation.Nullable;
 import net.minecraft.SharedConstants;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.nbt.NbtUtils;
 import net.minecraft.resources.ResourceKey;
+import net.minecraft.server.level.ServerChunkCache;
+import net.minecraft.server.level.ServerLevel;
 import net.minecraft.util.datafix.DataFixTypes;
 import net.minecraft.world.level.ChunkPos;
 import net.minecraft.world.level.Level;
+import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.chunk.ChunkGenerator;
+import net.minecraft.world.level.chunk.ChunkStatus;
 import net.minecraft.world.level.levelgen.structure.LegacyStructureDataHandler;
 import net.minecraft.world.level.storage.DimensionDataStorage;
 
@@ -35,8 +_,61 @@
       return this.f_63495_.m_223471_(p_223452_, p_223453_);
    }
 
+   // CraftBukkit start
+   private boolean check(ServerChunkCache cps, int x, int z) {
+      ChunkPos pos = new ChunkPos(x, z);
+      if (cps != null) {
+         com.google.common.base.Preconditions.checkState(org.bukkit.Bukkit.isPrimaryThread(), "primary thread");
+         if (cps.m_5563_(x, z)) {
+            return true;
+         }
+      }
+
+      CompoundTag nbt;
+      try {
+         nbt = m_223454_(pos).get().orElse(null);
+      } catch (InterruptedException | ExecutionException ex) {
+         throw new RuntimeException(ex);
+      }
+      if (nbt != null) {
+         CompoundTag level = nbt.m_128469_("Level");
+         if (level.m_128471_("TerrainPopulated")) {
+            return true;
+         }
+
+         ChunkStatus status = ChunkStatus.m_62397_(level.m_128461_("Status"));
+         if (status != null && status.m_62427_(ChunkStatus.f_62322_)) {
+            return true;
+         }
+      }
+
+      return false;
+   }
+
+   private AtomicReference<LevelAccessor> mohist$access = new AtomicReference<>();
+   private AtomicReference<ChunkPos> mohist$chunkPos = new AtomicReference<>();
+
+   public CompoundTag upgradeChunkTag(ResourceKey<Level> p_188289_, Supplier<DimensionDataStorage> p_188290_, CompoundTag p_188291_, Optional<ResourceKey<Codec<? extends ChunkGenerator>>> p_188292_, ChunkPos pos, @Nullable LevelAccessor generatoraccess) {
+      mohist$access.set(generatoraccess);
+      mohist$chunkPos.set(pos);
+      return m_188288_(p_188289_, p_188290_, p_188291_, p_188292_);
+   }
+
    public CompoundTag m_188288_(ResourceKey<Level> p_188289_, Supplier<DimensionDataStorage> p_188290_, CompoundTag p_188291_, Optional<ResourceKey<Codec<? extends ChunkGenerator>>> p_188292_) {
       int i = m_63505_(p_188291_);
+
+      // CraftBukkit start
+      if (i < 1466) {
+         CompoundTag level = p_188291_.m_128469_("Level");
+         if (level.m_128471_("TerrainPopulated") && !level.m_128471_("LightPopulated")) {
+            ServerChunkCache cps = (mohist$access.get() == null) ? null : ((ServerLevel) mohist$access.get()).m_7726_();
+            var pos = mohist$chunkPos.get();
+            if (check(cps, pos.f_45578_ - 1, pos.f_45579_) && check(cps, pos.f_45578_ - 1, pos.f_45579_ - 1) && check(cps, pos.f_45578_, pos.f_45579_ - 1)) {
+               level.m_128379_("LightPopulated", true);
+            }
+         }
+      }
+      // CraftBukkit end
       if (i < 1493) {
          p_188291_ = DataFixTypes.CHUNK.m_264226_(this.f_63496_, p_188291_, i, 1493);
          if (p_188291_.m_128469_("Level").m_128471_("hasLegacyStructureData")) {
