--- a/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
+++ b/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
@@ -3,10 +_,8 @@
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.mojang.serialization.Dynamic;
-import java.util.Collection;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
+
+import java.util.*;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.nbt.CompoundTag;
@@ -28,6 +_,11 @@
 import net.minecraft.world.level.saveddata.SavedData;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.v1_18_R1.CraftServer;
+import org.bukkit.craftbukkit.v1_18_R1.CraftWorld;
+import org.bukkit.craftbukkit.v1_18_R1.map.CraftMapView;
+import org.bukkit.craftbukkit.v1_18_R1.util.CraftChatMessage;
 
 public class MapItemSavedData extends SavedData {
    private static final Logger f_77895_ = LogManager.getLogger();
@@ -50,6 +_,13 @@
    private final Map<String, MapFrame> f_77898_ = Maps.newHashMap();
    private int f_181308_;
 
+   // CraftBukkit start
+   public final CraftMapView mapView;
+   private CraftServer server;
+   private UUID uniqueId = null;
+   public String id;
+   // CraftBukkit end
+
    private MapItemSavedData(int p_164768_, int p_164769_, byte p_164770_, boolean p_164771_, boolean p_164772_, boolean p_164773_, ResourceKey<Level> p_164774_) {
       this.f_77890_ = p_164770_;
       this.f_77885_ = p_164768_;
@@ -59,6 +_,11 @@
       this.f_77889_ = p_164772_;
       this.f_77892_ = p_164773_;
       this.m_77762_();
+
+      // CraftBukkit start
+      mapView = new CraftMapView(this);
+      server = (CraftServer) org.bukkit.Bukkit.getServer();
+      // CraftBukkit end
    }
 
    public static MapItemSavedData m_164780_(double p_164781_, double p_164782_, byte p_164783_, boolean p_164784_, boolean p_164785_, ResourceKey<Level> p_164786_) {
@@ -75,8 +_,27 @@
    }
 
    public static MapItemSavedData m_164807_(CompoundTag p_164808_) {
-      ResourceKey<Level> resourcekey = DimensionType.m_63911_(new Dynamic<>(NbtOps.f_128958_, p_164808_.m_128423_("dimension"))).resultOrPartial(f_77895_::error).orElseThrow(() -> {
-         return new IllegalArgumentException("Invalid map dimension: " + p_164808_.m_128423_("dimension"));
+      // CraftBukkit start
+      ResourceKey<Level> resourcekey = DimensionType.m_63911_(new Dynamic<>(NbtOps.f_128958_, p_164808_.m_128423_("dimension"))).resultOrPartial(f_77895_::error).orElseGet(() -> {
+      //return new IllegalArgumentException("Invalid map dimension: " + p_164808_.get("dimension"));
+      long least = p_164808_.m_128454_("UUIDLeast");
+      long most = p_164808_.m_128454_("UUIDMost");
+
+      if (least != 0L && most != 0L) {
+         UUID uniqueId = new UUID(most, least);
+
+         CraftWorld world = (CraftWorld) Bukkit.getWorld(uniqueId);
+         // Check if the stored world details are correct.
+         if (world == null) {
+               /* All Maps which do not have their valid world loaded are set to a dimension which hopefully won't be reached.
+                 This is to prevent them being corrupted with the wrong map data. */
+            // PAIL: Use Vanilla exception handling for now
+         } else {
+            return world.getHandle().m_46472_();
+         }
+      }
+      throw new IllegalArgumentException("Invalid map dimension: " + p_164808_.m_128423_("dimension"));
+      // CraftBukkit end
       });
       int i = p_164808_.m_128451_("xCenter");
       int j = p_164808_.m_128451_("zCenter");
@@ -113,6 +_,25 @@
       ResourceLocation.f_135803_.encodeStart(NbtOps.f_128958_, this.f_77887_.m_135782_()).resultOrPartial(f_77895_::error).ifPresent((p_77954_) -> {
          p_77956_.m_128365_("dimension", p_77954_);
       });
+      // CraftBukkit start
+      if (true) {
+         if (this.uniqueId == null) {
+            for (org.bukkit.World world : server.getWorlds()) {
+               CraftWorld cWorld = (CraftWorld) world;
+               if (cWorld.getHandle().m_46472_() == this.f_77887_) {
+                  this.uniqueId = cWorld.getUID();
+                  break;
+               }
+            }
+             /* Perform a second check to see if a matching world was found, this is a necessary
+                  change incase Maps are forcefully unlinked from a World and lack a UID.*/
+            if (this.uniqueId != null) {
+               p_77956_.m_128356_("UUIDLeast", this.uniqueId.getLeastSignificantBits());
+               p_77956_.m_128356_("UUIDMost", this.uniqueId.getMostSignificantBits());
+            }
+         }
+      }
+      // CraftBukkit end
       p_77956_.m_128405_("xCenter", this.f_77885_);
       p_77956_.m_128405_("zCenter", this.f_77886_);
       p_77956_.m_128344_("scale", this.f_77890_);
@@ -308,7 +_,7 @@
       return mapitemsaveddata$holdingplayer == null ? null : mapitemsaveddata$holdingplayer.m_164815_(p_164797_);
    }
 
-   private void m_164789_(int p_164790_, int p_164791_) {
+   public void m_164789_(int p_164790_, int p_164791_) {
       this.m_77762_();
 
       for(MapItemSavedData.HoldingPlayer mapitemsaveddata$holdingplayer : this.f_77893_) {
@@ -448,7 +_,7 @@
          this.f_77959_ = p_77970_;
       }
 
-      private MapItemSavedData.MapPatch m_164814_() {
+      private MapItemSavedData.MapPatch createPatch(byte[] buffer) { // CraftBukkit
          int i = this.f_77963_;
          int j = this.f_77964_;
          int k = this.f_77965_ + 1 - this.f_77963_;
@@ -457,7 +_,7 @@
 
          for(int i1 = 0; i1 < k; ++i1) {
             for(int j1 = 0; j1 < l; ++j1) {
-               abyte[i1 + j1 * k] = MapItemSavedData.this.f_77891_[i + i1 + (j + j1) * 128];
+               abyte[i1 + j1 * k] = buffer[i + i1 + (j + j1) * 128]; // CraftBukkit
             }
          }
 
@@ -467,17 +_,28 @@
       @Nullable
       Packet<?> m_164815_(int p_164816_) {
          MapItemSavedData.MapPatch mapitemsaveddata$mappatch;
+         org.bukkit.craftbukkit.v1_18_R1.map.RenderData render = MapItemSavedData.this.mapView.render((org.bukkit.craftbukkit.v1_18_R1.entity.CraftPlayer) this.f_77959_.getBukkitEntity()); // CraftBukkit
+
          if (this.f_77962_) {
             this.f_77962_ = false;
-            mapitemsaveddata$mappatch = this.m_164814_();
+            mapitemsaveddata$mappatch = this.createPatch(render.buffer); // CraftBukkit
          } else {
             mapitemsaveddata$mappatch = null;
          }
 
          Collection<MapDecoration> collection;
-         if (this.f_164813_ && this.f_77967_++ % 5 == 0) {
+         if ((true || this.f_164813_) && this.f_77967_++ % 5 == 0) { // CraftBukkit - custom maps don't update this yet
             this.f_164813_ = false;
-            collection = MapItemSavedData.this.f_77894_.values();
+            // CraftBukkit start
+            java.util.Collection<MapDecoration> icons = new java.util.ArrayList<MapDecoration>();
+
+            for (org.bukkit.map.MapCursor cursor : render.cursors) {
+               if (cursor.isVisible()) {
+                  icons.add(new MapDecoration(MapDecoration.Type.m_77854_(cursor.getRawType()), cursor.getX(), cursor.getY(), cursor.getDirection(), CraftChatMessage.fromStringOrNull(cursor.getCaption())));
+               }
+            }
+            collection = icons;
+            // CraftBukkit end
          } else {
             collection = null;
          }
