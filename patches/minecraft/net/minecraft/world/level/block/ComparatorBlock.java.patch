--- a/net/minecraft/world/level/block/ComparatorBlock.java
+++ b/net/minecraft/world/level/block/ComparatorBlock.java
@@ -25,6 +_,7 @@
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.BlockHitResult;
 import net.minecraft.world.ticks.TickPriority;
+import org.bukkit.craftbukkit.v1_18_R2.event.CraftEventFactory;
 
 public class ComparatorBlock extends DiodeBlock implements EntityBlock {
    public static final EnumProperty<ComparatorMode> f_51854_ = BlockStateProperties.f_61393_;
@@ -139,8 +_,18 @@
          boolean flag1 = this.m_7320_(p_51908_, p_51909_, p_51910_);
          boolean flag = p_51910_.m_61143_(f_52496_);
          if (flag && !flag1) {
+            // CraftBukkit start
+            if (CraftEventFactory.callRedstoneChange(p_51908_, p_51909_, 15, 0).getNewCurrent() != 0) {
+               return;
+            }
+            // CraftBukkit end
             p_51908_.m_7731_(p_51909_, p_51910_.m_61124_(f_52496_, Boolean.valueOf(false)), 2);
          } else if (!flag && flag1) {
+            // CraftBukkit start
+            if (CraftEventFactory.callRedstoneChange(p_51908_, p_51909_, 0, 15).getNewCurrent() != 15) {
+               return;
+            }
+            // CraftBukkit end
             p_51908_.m_7731_(p_51909_, p_51910_.m_61124_(f_52496_, Boolean.valueOf(true)), 2);
          }
 
@@ -165,5 +_,17 @@
 
    protected void m_7926_(StateDefinition.Builder<Block, BlockState> p_51887_) {
       p_51887_.m_61104_(f_54117_, f_51854_, f_52496_);
+   }
+
+   @Override
+   public boolean getWeakChanges(BlockState state, net.minecraft.world.level.LevelReader world, BlockPos pos) {
+      return state.m_60713_(Blocks.f_50328_);
+   }
+
+   @Override
+   public void onNeighborChange(BlockState state, net.minecraft.world.level.LevelReader world, BlockPos pos, BlockPos neighbor) {
+      if (pos.m_123342_() == neighbor.m_123342_() && world instanceof Level && !((Level)world).m_5776_()) {
+         state.m_60690_((Level)world, pos, world.m_8055_(neighbor).m_60734_(), neighbor, false);
+      }
    }
 }
