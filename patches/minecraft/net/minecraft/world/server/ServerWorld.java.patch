--- a/net/minecraft/world/server/ServerWorld.java
+++ b/net/minecraft/world/server/ServerWorld.java
@@ -1,25 +_,19 @@
 package net.minecraft.world.server;
 
-import com.google.common.annotations.VisibleForTesting;
-import com.google.common.collect.Iterables;
-import com.google.common.collect.Lists;
-import com.google.common.collect.Maps;
-import com.google.common.collect.Queues;
-import com.google.common.collect.Sets;
-import it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap;
-import it.unimi.dsi.fastutil.ints.Int2ObjectMap;
-import it.unimi.dsi.fastutil.ints.Int2ObjectMap.Entry;
-import it.unimi.dsi.fastutil.longs.LongSet;
-import it.unimi.dsi.fastutil.longs.LongSets;
-import it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
-import it.unimi.dsi.fastutil.objects.ObjectIterator;
-import it.unimi.dsi.fastutil.objects.ObjectLinkedOpenHashSet;
+import com.mohistmc.forge.MohistDerivedWorldInfo;
+
+import com.mohistmc.util.i18n.i18n;
+import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;
+import it.unimi.dsi.fastutil.objects.Object2IntMap;
+import java.io.File;
 import java.io.IOException;
 import java.io.Writer;
 import java.nio.file.Files;
 import java.nio.file.Path;
+import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Comparator;
+import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 import java.util.Objects;
@@ -33,8 +_,65 @@
 import java.util.function.Predicate;
 import java.util.stream.Collectors;
 import java.util.stream.Stream;
+
 import javax.annotation.Nonnull;
 import javax.annotation.Nullable;
+
+import com.mohistmc.util.Level2LevelStem;
+import net.minecraft.world.Explosion.Mode;
+import net.minecraft.world.biome.Biome.RainType;
+import net.minecraft.world.gen.Heightmap.Type;
+import net.minecraft.world.spawner.WorldEntitySpawner.EntityDensityManager;
+import net.minecraft.world.storage.DerivedWorldInfo;
+import net.minecraft.world.storage.MapData.MapInfo;
+import net.minecraft.world.storage.SaveFormat.LevelSave;
+import net.minecraftforge.common.MinecraftForge;
+import net.minecraftforge.common.extensions.IForgeWorldServer;
+import net.minecraftforge.common.util.WorldCapabilityData;
+import net.minecraftforge.common.world.ForgeChunkManager;
+import net.minecraftforge.entity.PartEntity;
+import net.minecraftforge.event.ForgeEventFactory;
+import net.minecraftforge.event.entity.EntityJoinWorldEvent;
+import net.minecraftforge.event.entity.EntityLeaveWorldEvent;
+import net.minecraftforge.event.entity.PlaySoundAtEntityEvent;
+import net.minecraftforge.event.world.WorldEvent.Save;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.v1_16_R3.CraftWorld;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory;
+import org.bukkit.craftbukkit.v1_16_R3.generator.CustomChunkGenerator;
+import org.bukkit.craftbukkit.v1_16_R3.util.BlockStateListPopulator;
+import org.bukkit.craftbukkit.v1_16_R3.util.WorldUUID;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.entity.LightningStrike;
+import org.bukkit.event.entity.CreatureSpawnEvent;
+import org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason;
+import org.bukkit.event.server.MapInitializeEvent;
+import org.bukkit.event.weather.LightningStrikeEvent;
+import org.bukkit.event.weather.LightningStrikeEvent.Cause;
+import org.bukkit.event.world.PortalCreateEvent;
+import org.bukkit.event.world.PortalCreateEvent.CreateReason;
+import org.bukkit.event.world.TimeSkipEvent;
+
+import com.google.common.annotations.VisibleForTesting;
+import com.google.common.collect.Iterables;
+import com.google.common.collect.Lists;
+import com.google.common.collect.Maps;
+import com.google.common.collect.Queues;
+import com.google.common.collect.Sets;
+import com.mohistmc.api.mc.ChunkMcAPI;
+import com.mohistmc.config.MohistConfigUtil;
+import com.mohistmc.inventory.CraftCustomInventory;
+
+import it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap;
+import it.unimi.dsi.fastutil.ints.Int2ObjectMap;
+import it.unimi.dsi.fastutil.ints.Int2ObjectMap.Entry;
+import it.unimi.dsi.fastutil.longs.LongSet;
+import it.unimi.dsi.fastutil.longs.LongSets;
+import it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
+import it.unimi.dsi.fastutil.objects.ObjectIterator;
+import it.unimi.dsi.fastutil.objects.ObjectLinkedOpenHashSet;
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockEventData;
 import net.minecraft.block.BlockState;
@@ -47,10 +_,10 @@
 import net.minecraft.entity.LivingEntity;
 import net.minecraft.entity.MobEntity;
 import net.minecraft.entity.boss.dragon.EnderDragonEntity;
-import net.minecraft.entity.boss.dragon.EnderDragonPartEntity;
 import net.minecraft.entity.effect.LightningBoltEntity;
 import net.minecraft.entity.merchant.IReputationTracking;
 import net.minecraft.entity.merchant.IReputationType;
+import net.minecraft.entity.monster.DrownedEntity;
 import net.minecraft.entity.passive.AnimalEntity;
 import net.minecraft.entity.passive.WaterMobEntity;
 import net.minecraft.entity.passive.horse.SkeletonHorseEntity;
@@ -59,6 +_,7 @@
 import net.minecraft.fluid.Fluid;
 import net.minecraft.fluid.FluidState;
 import net.minecraft.fluid.Fluids;
+import net.minecraft.inventory.IInventory;
 import net.minecraft.item.crafting.RecipeManager;
 import net.minecraft.network.DebugPacketSender;
 import net.minecraft.network.IPacket;
@@ -138,18 +_,21 @@
 import net.minecraft.world.storage.MapData;
 import net.minecraft.world.storage.MapIdTracker;
 import net.minecraft.world.storage.SaveFormat;
+import net.minecraft.world.storage.ServerWorldInfo;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.Logger;
+import org.bukkit.event.world.TimeSkipEvent.SkipReason;
+import org.spigotmc.ActivationRange;
+import org.spigotmc.AsyncCatcher;
+import org.spigotmc.SpigotWorldConfig;
 
-public class ServerWorld extends World implements ISeedReader {
+public class ServerWorld extends World implements ISeedReader, IForgeWorldServer {
    public static final BlockPos field_241108_a_ = new BlockPos(100, 50, 0);
    private static final Logger field_147491_a = LogManager.getLogger();
    public final Int2ObjectMap<Entity> field_217498_x = new Int2ObjectLinkedOpenHashMap<>();
    private final Map<UUID, Entity> field_175741_N = Maps.newHashMap();
-   public final Queue<Entity> field_217499_z = Queues.newArrayDeque();
-   private final List<ServerPlayerEntity> field_217491_A = Lists.newArrayList();
+   public final Queue<Entity> field_217499_z = Queues.newArrayDeque(); // Mohist - Fix "Wrong location" (private -> public)
+   public final List<ServerPlayerEntity> field_217491_A = Lists.newArrayList();
    private final ServerChunkProvider field_241102_C_;
    boolean field_217492_a;
    private final MinecraftServer field_73061_a;
@@ -160,10 +_,10 @@
    private final Teleporter field_85177_Q;
    private final ServerTickList<Block> field_94579_S = new ServerTickList<>(this, (p_205341_0_) -> {
       return p_205341_0_ == null || p_205341_0_.func_176223_P().func_196958_f();
-   }, Registry.field_212618_g::func_177774_c, this::func_205338_b);
+   }, Registry.field_212618_g::func_177774_c, this::tickBlock_bukkit);
    private final ServerTickList<Fluid> field_205342_P = new ServerTickList<>(this, (p_205774_0_) -> {
       return p_205774_0_ == null || p_205774_0_ == Fluids.field_204541_a;
-   }, Registry.field_212619_h::func_177774_c, this::func_205339_a);
+   }, Registry.field_212619_h::func_177774_c, this::tickLiquid_bukkit);
    private final Set<PathNavigator> field_217495_I = Sets.newHashSet();
    protected final RaidManager field_217494_c;
    private final ObjectLinkedOpenHashSet<BlockEventData> field_147490_S = new ObjectLinkedOpenHashSet<>();
@@ -173,9 +_,61 @@
    private final DragonFightManager field_241105_O_;
    private final StructureManager field_241106_P_;
    private final boolean field_241107_Q_;
-
-   public ServerWorld(MinecraftServer p_i241885_1_, Executor p_i241885_2_, SaveFormat.LevelSave p_i241885_3_, IServerWorldInfo p_i241885_4_, RegistryKey<World> p_i241885_5_, DimensionType p_i241885_6_, IChunkStatusListener p_i241885_7_, ChunkGenerator p_i241885_8_, boolean p_i241885_9_, long p_i241885_10_, List<ISpecialSpawner> p_i241885_12_, boolean p_i241885_13_) {
+   private WorldCapabilityData capabilityData;
+   private final Int2ObjectMap<PartEntity<?>> partEntities = new Int2ObjectOpenHashMap<>();
+
+   // CraftBukkit start
+   public ServerWorldInfo worldDataServer;
+   public final LevelSave convertable;
+   public final UUID uuid;
+   public String name;
+
+   public boolean dummyFreshEntitySpawn = false; // Mohist - Fix Pehkui Startup (#1324)
+
+   // Mohist start - Add option to ignore empty time
+   private static List<String> IGNORE_EMPTY_TIME_LIST = new ArrayList<>();
+
+   {
+      String ignoreEmptyTime = MohistConfigUtil.sMohist("ignore_empty_time", "all_worlds");
+      if (ignoreEmptyTime.contains(";")) {
+         for (String part : ignoreEmptyTime.split(";")) {
+            IGNORE_EMPTY_TIME_LIST.add(part);
+         }
+      } else IGNORE_EMPTY_TIME_LIST.add(ignoreEmptyTime);
+   }
+
+   private final boolean ignoreEmptyTimeThis;
+   {
+      this.ignoreEmptyTimeThis = IGNORE_EMPTY_TIME_LIST.contains("all_worlds") || (name != null && IGNORE_EMPTY_TIME_LIST.contains(name));
+   }
+   // Mohist end
+
+   public Chunk getChunkIfLoaded(int x, int z) {
+      return this.field_241102_C_.func_217205_a(x, z, false);
+   }
+
+   public ServerWorld(MinecraftServer p_i241885_1_, Executor p_i241885_2_, LevelSave p_i241885_3_, IServerWorldInfo p_i241885_4_, RegistryKey<World> p_i241885_5_, DimensionType p_i241885_6_, IChunkStatusListener p_i241885_7_, ChunkGenerator p_i241885_8_, boolean p_i241885_9_, long p_i241885_10_, List<ISpecialSpawner> p_i241885_12_, boolean p_i241885_13_) {
       super(p_i241885_4_, p_i241885_5_, p_i241885_6_, p_i241885_1_::func_213185_aS, false, p_i241885_9_, p_i241885_10_);
+      this.pvpMode = p_i241885_1_.func_71219_W();
+      convertable = p_i241885_3_;
+      File worldFile = DimensionType.func_236031_a_(p_i241885_5_, p_i241885_3_.field_237279_c_.toFile());
+      uuid = Level2LevelStem.bukkit != null ? WorldUUID.getUUID(Level2LevelStem.bukkit) : WorldUUID.getUUID(worldFile);
+      name = Level2LevelStem.bukkit != null ? Level2LevelStem.bukkit_name : worldFile.getName();
+
+      if (p_i241885_4_ instanceof ServerWorldInfo) {
+         this.worldDataServer = (ServerWorldInfo) p_i241885_4_;
+      } else if (p_i241885_4_ instanceof DerivedWorldInfo) {
+         this.worldDataServer = MohistDerivedWorldInfo.create((DerivedWorldInfo)p_i241885_4_);
+      }
+
+      if (generator$mohist != null) {
+         p_i241885_8_ = new CustomChunkGenerator(this, p_i241885_8_, generator$mohist);
+      } else {
+         generator$mohist = getCBServer().getGenerator(p_i241885_4_.func_76065_j());
+      }
+      worldDataServer.world = this;
+      this.spigotConfig = new SpigotWorldConfig(name); // Spigot
+      // CraftBukkit end
       this.field_241107_Q_ = p_i241885_13_;
       this.field_73061_a = p_i241885_1_;
       this.field_241104_N_ = p_i241885_12_;
@@ -194,14 +_,44 @@
          p_i241885_4_.func_230392_a_(p_i241885_1_.func_71265_f());
       }
 
-      this.field_241106_P_ = new StructureManager(this, p_i241885_1_.func_240793_aU_().func_230418_z_());
+      this.field_241106_P_ = new StructureManager(this, this.worldDataServer.func_230418_z_());
       if (this.func_230315_m_().func_236046_h_()) {
-         this.field_241105_O_ = new DragonFightManager(this, p_i241885_1_.func_240793_aU_().func_230418_z_().func_236221_b_(), p_i241885_1_.func_240793_aU_().func_230402_B_());
+         this.field_241105_O_ = new DragonFightManager(this, this.worldDataServer.func_230418_z_().func_236221_b_(), this.worldDataServer.func_230402_B_());
       } else {
          this.field_241105_O_ = null;
       }
-
-   }
+      this.craftWorld = new CraftWorld(this, generator$mohist, environment);
+      this.getCBServer().addWorld(this.getWorld()); // CraftBukkit
+      this.initCapabilities();
+   }
+
+   // Mohist start - Add isPosLoaded method to IBlockReader
+   @Override
+   public boolean isPosLoaded(BlockPos pos) {
+      return ChunkMcAPI.isBorderChunkLoaded(this, pos.func_177958_n() >> 4, pos.func_177952_p() >> 4); // Mohist - Rewrite isPosLoaded & Partially rewrite to use ChunkMcAPI
+   }
+   // Mohist end
+
+   // CraftBukkit start
+   @Override
+   public TileEntity getTileEntity(BlockPos pos, boolean validate) {
+      TileEntity result = super.getTileEntity(pos, validate);
+      if (!validate || Thread.currentThread() != this.field_217407_c) {
+         // SPIGOT-5378: avoid deadlock, this can be called in loading logic (i.e lighting) but getType() will block on chunk load
+         return result;
+      }
+      final Block type = this.func_180495_p(pos).func_177230_c();
+      if (result != null && type != Blocks.field_150350_a && !result.func_200662_C().func_223045_a(type)) {
+         result = this.fixTileEntity(pos, type, result);
+      }
+      return result;
+   }
+
+   private TileEntity fixTileEntity(BlockPos pos, Block type, TileEntity found) {
+      // Disable tile entity fix
+      return found;
+   }
+   // CraftBukkit end
 
    public void func_241113_a_(int p_241113_1_, int p_241113_2_, boolean p_241113_3_, boolean p_241113_4_) {
       this.field_241103_E_.func_230391_a_(p_241113_1_);
@@ -211,6 +_,10 @@
       this.field_241103_E_.func_76069_a(p_241113_4_);
    }
 
+   public Biome getBiomeBySeed(int x, int y, int z) {
+      return func_225604_a_(x, y, z);
+   } // Paper - OBFHELPER
+
    public Biome func_225604_a_(int p_225604_1_, int p_225604_2_, int p_225604_3_) {
       return this.func_72863_F().func_201711_g().func_202090_b().func_225526_b_(p_225604_1_, p_225604_2_, p_225604_3_);
    }
@@ -296,27 +_,39 @@
          this.field_73061_a.func_184103_al().func_232642_a_(new SChangeGameStatePacket(SChangeGameStatePacket.field_241772_i_, this.field_73017_q), this.func_234923_W_());
       }
 
+      /* The function in use here has been replaced in order to only send the weather info to players in the correct dimension,
+       * rather than to all players on the server. This is what causes the client-side rain, as the
+       * client believes that it has started raining locally, rather than in another dimension.
+       */
       if (flag != this.func_72896_J()) {
          if (flag) {
-            this.field_73061_a.func_184103_al().func_148540_a(new SChangeGameStatePacket(SChangeGameStatePacket.field_241766_c_, 0.0F));
+            this.field_73061_a.func_184103_al().func_232642_a_(new SChangeGameStatePacket(SChangeGameStatePacket.field_241766_c_, 0.0F), this.func_234923_W_());
          } else {
-            this.field_73061_a.func_184103_al().func_148540_a(new SChangeGameStatePacket(SChangeGameStatePacket.field_241765_b_, 0.0F));
+            this.field_73061_a.func_184103_al().func_232642_a_(new SChangeGameStatePacket(SChangeGameStatePacket.field_241765_b_, 0.0F), this.func_234923_W_());
          }
 
-         this.field_73061_a.func_184103_al().func_148540_a(new SChangeGameStatePacket(SChangeGameStatePacket.field_241771_h_, this.field_73004_o));
-         this.field_73061_a.func_184103_al().func_148540_a(new SChangeGameStatePacket(SChangeGameStatePacket.field_241772_i_, this.field_73017_q));
+         this.field_73061_a.func_184103_al().func_232642_a_(new SChangeGameStatePacket(SChangeGameStatePacket.field_241771_h_, this.field_73004_o), this.func_234923_W_());
+         this.field_73061_a.func_184103_al().func_232642_a_(new SChangeGameStatePacket(SChangeGameStatePacket.field_241772_i_, this.field_73017_q), this.func_234923_W_());
       }
 
       if (this.field_73068_P && this.field_217491_A.stream().noneMatch((p_241132_0_) -> {
-         return !p_241132_0_.func_175149_v() && !p_241132_0_.func_71026_bH();
+         return !p_241132_0_.func_175149_v() && !p_241132_0_.func_71026_bH() && !p_241132_0_.fauxSleeping; // CraftBukkit
       })) {
-         this.field_73068_P = false;
+         // CraftBukkit start
+         long l = this.func_72820_D() + 24000L;
+         TimeSkipEvent event = new TimeSkipEvent(this.getWorld(), SkipReason.NIGHT_SKIP, ForgeEventFactory.onSleepFinished(this, l - l % 24000L, this.func_72820_D()) - this.func_72820_D());
          if (this.func_82736_K().func_223586_b(GameRules.field_223607_j)) {
-            long l = this.field_72986_A.func_76073_f() + 24000L;
-            this.func_241114_a_(l - l % 24000L);
+            getCBServer().getPluginManager().callEvent(event);
+            if (!event.isCancelled()) {
+               this.func_241114_a_(this.func_72820_D() + event.getSkipAmount());
+            }
          }
 
-         this.func_229856_ab_();
+         if (!event.isCancelled()) {
+            this.field_73068_P = false;
+            this.func_229856_ab_();
+         }
+         // CraftBukkit end
          if (this.func_82736_K().func_223586_b(GameRules.field_223617_t)) {
             this.func_73051_P();
          }
@@ -338,12 +_,12 @@
       this.func_147488_Z();
       this.field_211159_Q = false;
       iprofiler.func_219895_b("entities");
-      boolean flag3 = !this.field_217491_A.isEmpty() || !this.func_217469_z().isEmpty();
+      boolean flag3 = !this.field_217491_A.isEmpty() || ForgeChunkManager.hasForcedChunks(this); //Forge: Replace vanilla's has forced chunk check with forge's that checks both the vanilla and forge added ones
       if (flag3) {
          this.func_82742_i();
       }
 
-      if (flag3 || this.field_80004_Q++ < 300) {
+      if (flag3 || this.field_80004_Q++ < 300 || this.ignoreEmptyTimeThis) { // Mohist - Add option to ignore empty time
          if (this.field_241105_O_ != null) {
             this.field_241105_O_.func_186105_b();
          }
@@ -351,6 +_,7 @@
          this.field_217492_a = true;
          ObjectIterator<Entry<Entity>> objectiterator = this.field_217498_x.int2ObjectEntrySet().iterator();
 
+         ActivationRange.activateEntities(this); // Spigot
          label164:
          while(true) {
             Entity entity1;
@@ -364,6 +_,7 @@
                   }
 
                   this.func_217391_K();
+                  this.spigotConfig.currentPrimedTnt = 0; // Mohist - Fix explosions with Performant (reapplied)
                   break label164;
                }
 
@@ -395,7 +_,7 @@
             }
 
             iprofiler.func_76320_a("tick");
-            if (!entity1.field_70128_L && !(entity1 instanceof EnderDragonPartEntity)) {
+            if (!entity1.field_70128_L && !(entity1 instanceof PartEntity)) {
                this.func_217390_a(this::func_217479_a, entity1);
             }
 
@@ -404,7 +_,7 @@
             if (entity1.field_70128_L) {
                this.func_217454_n(entity1);
                objectiterator.remove();
-               this.func_217484_g(entity1);
+               this.removeEntityComplete(entity1, entity1 instanceof ServerPlayerEntity); //Forge: Keep cap data until revive. Every other entity removes directly.
             }
 
             iprofiler.func_76319_b();
@@ -459,31 +_,34 @@
                SkeletonHorseEntity skeletonhorseentity = EntityType.field_200742_ah.func_200721_a(this);
                skeletonhorseentity.func_190691_p(true);
                skeletonhorseentity.func_70873_a(0);
-               skeletonhorseentity.func_70107_b((double)blockpos.func_177958_n(), (double)blockpos.func_177956_o(), (double)blockpos.func_177952_p());
-               this.func_217376_c(skeletonhorseentity);
+               skeletonhorseentity.func_70107_b((double) blockpos.func_177958_n(), (double) blockpos.func_177956_o(), (double) blockpos.func_177952_p());
+               this.addEntity(skeletonhorseentity, SpawnReason.LIGHTNING); // CraftBukkit
             }
 
             LightningBoltEntity lightningboltentity = EntityType.field_200728_aG.func_200721_a(this);
             lightningboltentity.func_233576_c_(Vector3d.func_237492_c_(blockpos));
             lightningboltentity.func_233623_a_(flag1);
-            this.func_217376_c(lightningboltentity);
+            this.strikeLightning(lightningboltentity, Cause.WEATHER); // CraftBukkit
          }
       }
 
       iprofiler.func_219895_b("iceandsnow");
       if (this.field_73012_v.nextInt(16) == 0) {
-         BlockPos blockpos2 = this.func_205770_a(Heightmap.Type.MOTION_BLOCKING, this.func_217383_a(i, 0, j, 15));
+         BlockPos blockpos2 = this.func_205770_a(Type.MOTION_BLOCKING, this.func_217383_a(i, 0, j, 15));
          BlockPos blockpos3 = blockpos2.func_177977_b();
          Biome biome = this.func_226691_t_(blockpos2);
-         if (biome.func_201848_a(this, blockpos3)) {
-            this.func_175656_a(blockpos3, Blocks.field_150432_aD.func_176223_P());
-         }
+         if (this.isAreaLoaded(blockpos2, 1)) // Forge: check area to avoid loading neighbors in unloaded chunks
+            if (biome.func_201848_a(this, blockpos3)) {
+               this.callEvent.set(true);
+               this.func_175656_a(blockpos3, Blocks.field_150432_aD.func_176223_P());
+               CraftEventFactory.handleBlockFormEvent(this, blockpos3, this.mohist$defaultBlockState, null); // CraftBukkit // Mohist
+            }
 
          if (flag && biome.func_201850_b(this, blockpos2)) {
-            this.func_175656_a(blockpos2, Blocks.field_150433_aE.func_176223_P());
+            CraftEventFactory.handleBlockFormEvent(this, blockpos2, Blocks.field_150433_aE.func_176223_P(), null); // CraftBukkit
          }
 
-         if (flag && this.func_226691_t_(blockpos3).func_201851_b() == Biome.RainType.RAIN) {
+         if (flag && this.func_226691_t_(blockpos3).func_201851_b() == RainType.RAIN) {
             this.func_180495_p(blockpos3).func_177230_c().func_176224_k(this, blockpos3);
          }
       }
@@ -517,7 +_,7 @@
    }
 
    protected BlockPos func_175736_a(BlockPos p_175736_1_) {
-      BlockPos blockpos = this.func_205770_a(Heightmap.Type.MOTION_BLOCKING, p_175736_1_);
+      BlockPos blockpos = this.func_205770_a(Type.MOTION_BLOCKING, p_175736_1_);
       AxisAlignedBB axisalignedbb = (new AxisAlignedBB(blockpos, new BlockPos(blockpos.func_177958_n(), this.func_217301_I(), blockpos.func_177952_p()))).func_186662_g(3.0D);
       List<LivingEntity> list = this.func_175647_a(LivingEntity.class, axisalignedbb, (p_241115_1_) -> {
          return p_241115_1_ != null && p_241115_1_.func_70089_S() && this.func_226660_f_(p_241115_1_.func_233580_cy_());
@@ -543,8 +_,8 @@
          int i = 0;
          int j = 0;
 
-         for(ServerPlayerEntity serverplayerentity : this.field_217491_A) {
-            if (serverplayerentity.func_175149_v()) {
+         for (ServerPlayerEntity serverplayerentity : this.field_217491_A) {
+            if (serverplayerentity.func_175149_v() || (serverplayerentity.fauxSleeping && !serverplayerentity.func_70608_bn())) { // CraftBukkit
                ++i;
             } else if (serverplayerentity.func_70608_bn()) {
                ++j;
@@ -561,36 +_,83 @@
    }
 
    private void func_73051_P() {
-      this.field_241103_E_.func_76080_g(0);
-      this.field_241103_E_.func_76084_b(false);
-      this.field_241103_E_.func_76090_f(0);
-      this.field_241103_E_.func_76069_a(false);
+      // CraftBukkit start
+      this.worldDataServer.func_76084_b(false);
+      // If we stop due to everyone sleeping we should reset the weather duration to some other random value.
+      // Not that everyone ever manages to get the whole server to sleep at the same time....
+      if (!this.worldDataServer.func_76059_o()) {
+         this.worldDataServer.func_76080_g(0);
+      }
+      // CraftBukkit end
+      this.worldDataServer.func_76069_a(false);
+      // CraftBukkit start
+      // If we stop due to everyone sleeping we should reset the weather duration to some other random value.
+      // Not that everyone ever manages to get the whole server to sleep at the same time....
+      if (!this.worldDataServer.func_76061_m()) {
+         this.worldDataServer.func_76090_f(0);
+      }
+      // CraftBukkit end
    }
 
    public void func_82742_i() {
       this.field_80004_Q = 0;
    }
 
+   // Mohist start - readd it to compat with mods
    private void func_205339_a(NextTickListEntry<Fluid> p_205339_1_) {
       FluidState fluidstate = this.func_204610_c(p_205339_1_.field_180282_a);
       if (fluidstate.func_206886_c() == p_205339_1_.func_151351_a()) {
          fluidstate.func_206880_a(this, p_205339_1_.field_180282_a);
       }
-
-   }
-
+      // Mohist end
+   }
+
+
+   // Mohist start - Don't load chunks for scheduled ticks - change it to compat for Forge mods
+   private void tickLiquid_bukkit(NextTickListEntry<Fluid> p_205339_1_) {
+      // Mohist start - Partially rewrite to use ChunkMcAPI
+      BlockPos pos = p_205339_1_.field_180282_a;
+      ChunkMcAPI.getTickingChunkNow(this, pos.func_177958_n() >> 4, pos.func_177952_p() >> 4).ifPresent((chunk) -> {
+         FluidState state = chunk.func_204610_c(pos);
+         if (state.func_206886_c() == p_205339_1_.func_151351_a()) {
+            state.func_206880_a(this, pos);
+         }
+      });
+      // Mohist end
+   }
+
+   // Mohist start - readd it to compat with mods
    private void func_205338_b(NextTickListEntry<Block> p_205338_1_) {
       BlockState blockstate = this.func_180495_p(p_205338_1_.field_180282_a);
       if (blockstate.func_203425_a(p_205338_1_.func_151351_a())) {
          blockstate.func_227033_a_(this, p_205338_1_.field_180282_a, this.field_73012_v);
       }
 
-   }
+      // Mohist end
+   }
+
+   private void tickBlock_bukkit(NextTickListEntry<Block> p_205338_1_) {
+      // Mohist start - Partially rewrite to use ChunkMcAPI
+      BlockPos pos = p_205338_1_.field_180282_a;
+      ChunkMcAPI.getTickingChunkNow(this, pos.func_177958_n() >> 4, pos.func_177952_p() >> 4).ifPresent((chunk) -> {
+         BlockState state = chunk.func_180495_p(pos);
+         if (state.func_203425_a(p_205338_1_.func_151351_a())) {
+            state.func_227033_a_(this, pos, this.field_73012_v);
+         }
+      });
+      // Mohist end
+   }
+   // Mohist end
 
    public void func_217479_a(Entity p_217479_1_) {
       if (!(p_217479_1_ instanceof PlayerEntity) && !this.func_72863_F().func_217204_a(p_217479_1_)) {
          this.func_217464_b(p_217479_1_);
       } else {
+         if (!ActivationRange.checkIfActive(p_217479_1_)) {
+            p_217479_1_.field_70173_aa++;
+            p_217479_1_.inactiveTick();
+            return;
+         }
          p_217479_1_.func_226286_f_(p_217479_1_.func_226277_ct_(), p_217479_1_.func_226278_cu_(), p_217479_1_.func_226281_cx_());
          p_217479_1_.field_70126_B = p_217479_1_.field_70177_z;
          p_217479_1_.field_70127_C = p_217479_1_.field_70125_A;
@@ -598,20 +_,21 @@
             ++p_217479_1_.field_70173_aa;
             IProfiler iprofiler = this.func_217381_Z();
             iprofiler.func_194340_a(() -> {
-               return Registry.field_212629_r.func_177774_c(p_217479_1_.func_200600_R()).toString();
+               return p_217479_1_.func_200600_R().getRegistryName() == null ? p_217479_1_.func_200600_R().toString() : p_217479_1_.func_200600_R().getRegistryName().toString();
             });
             iprofiler.func_230035_c_("tickNonPassenger");
-            p_217479_1_.func_70071_h_();
+            if (p_217479_1_.canUpdate())
+               p_217479_1_.func_70071_h_();
+            p_217479_1_.postTick(); // CraftBukkit
             iprofiler.func_76319_b();
          }
 
          this.func_217464_b(p_217479_1_);
          if (p_217479_1_.field_70175_ag) {
-            for(Entity entity : p_217479_1_.func_184188_bt()) {
+            for (Entity entity : p_217479_1_.func_184188_bt()) {
                this.func_217459_a(p_217479_1_, entity);
             }
          }
-
       }
    }
 
@@ -629,12 +_,13 @@
                });
                iprofiler.func_230035_c_("tickPassenger");
                p_217459_2_.func_70098_U();
+               p_217459_2_.postTick(); // CraftBukkit
                iprofiler.func_76319_b();
             }
 
             this.func_217464_b(p_217459_2_);
             if (p_217459_2_.field_70175_ag) {
-               for(Entity entity : p_217459_2_.func_184188_bt()) {
+               for (Entity entity : p_217459_2_.func_184188_bt()) {
                   this.func_217459_a(p_217459_2_, entity);
                }
             }
@@ -658,7 +_,7 @@
 
             if (!p_217464_1_.func_233577_ch_() && !this.func_217354_b(i, k)) {
                if (p_217464_1_.field_70175_ag) {
-                  field_147491_a.warn("Entity {} left loaded chunk area", (Object)p_217464_1_);
+                  field_147491_a.warn(i18n.get("serverworld.1", (Object) p_217464_1_));
                }
 
                p_217464_1_.field_70175_ag = false;
@@ -687,13 +_,15 @@
             p_217445_1_.func_200209_c(new TranslationTextComponent("menu.savingChunks"));
          }
 
+         MinecraftForge.EVENT_BUS.post(new Save(this));
          serverchunkprovider.func_217210_a(p_217445_2_);
+
       }
    }
 
    private void func_73042_a() {
       if (this.field_241105_O_ != null) {
-         this.field_73061_a.func_240793_aU_().func_230413_a_(this.field_241105_O_.func_186088_a());
+         this.worldDataServer.func_230413_a_(this.field_241105_O_.func_186088_a());
       }
 
       this.func_72863_F().func_217227_h().func_212775_b();
@@ -742,12 +_,24 @@
       return list.isEmpty() ? null : list.get(this.field_73012_v.nextInt(list.size()));
    }
 
+   public SpawnReason pehkuiSpawnReason = SpawnReason.DEFAULT; // Mohist - Fix Pehkui Startup (#1324)
+
    public boolean func_217376_c(Entity p_217376_1_) {
-      return this.func_72838_d(p_217376_1_);
+      // CraftBukkit start
+      return this.addEntity0(p_217376_1_, this.pehkuiSpawnReason); // Mohist - Fix Pehkui Startup (#1324)
+   }
+
+   public boolean addEntity(Entity entityIn, SpawnReason reason) {
+      return this.addEntity0(entityIn, reason);
    }
 
    public boolean func_217470_d(Entity p_217470_1_) {
-      return this.func_72838_d(p_217470_1_);
+      return this.addEntitySerialized(p_217470_1_, SpawnReason.DEFAULT);
+   }
+
+   public boolean addEntitySerialized(Entity entity, SpawnReason reason) {
+      return this.addEntity0(entity, reason);
+      // CraftBukkit end
    }
 
    public void func_217460_e(Entity p_217460_1_) {
@@ -777,9 +_,9 @@
    }
 
    private void func_217448_f(ServerPlayerEntity p_217448_1_) {
+      if (MinecraftForge.EVENT_BUS.post(new EntityJoinWorldEvent(p_217448_1_, this))) return;
       Entity entity = this.field_175741_N.get(p_217448_1_.func_110124_au());
       if (entity != null) {
-         field_147491_a.warn("Force-added player with duplicate UUID {}", (Object)p_217448_1_.func_110124_au().toString());
          entity.func_213319_R();
          this.func_217434_e((ServerPlayerEntity)entity);
       }
@@ -795,18 +_,24 @@
    }
 
    private boolean func_72838_d(Entity p_72838_1_) {
-      if (p_72838_1_.field_70128_L) {
-         field_147491_a.warn("Tried to add entity {} but it was marked as removed already", (Object)EntityType.func_200718_a(p_72838_1_.func_200600_R()));
+      return addEntity0(p_72838_1_, SpawnReason.DEFAULT);
+   }
+
+   private boolean addEntity0(Entity entityIn, SpawnReason spawnReason) {
+      if (entityIn.field_70128_L) {
          return false;
-      } else if (this.func_217478_l(p_72838_1_)) {
+      } else if (this.func_217478_l(entityIn)) {
          return false;
       } else {
-         IChunk ichunk = this.func_217353_a(MathHelper.func_76128_c(p_72838_1_.func_226277_ct_() / 16.0D), MathHelper.func_76128_c(p_72838_1_.func_226281_cx_() / 16.0D), ChunkStatus.field_222617_m, p_72838_1_.field_98038_p);
+         if (MinecraftForge.EVENT_BUS.post(new EntityJoinWorldEvent(entityIn, this)))
+            return false;
+         if (!CraftEventFactory.doEntityAddEventCalling(this, entityIn, spawnReason)) return false;
+         IChunk ichunk = this.func_217353_a(MathHelper.func_76128_c(entityIn.func_226277_ct_() / 16.0D), MathHelper.func_76128_c(entityIn.func_226281_cx_() / 16.0D), ChunkStatus.field_222617_m, entityIn.field_98038_p);
          if (!(ichunk instanceof Chunk)) {
             return false;
          } else {
-            ichunk.func_76612_a(p_72838_1_);
-            this.func_217465_m(p_72838_1_);
+            ichunk.func_76612_a(entityIn);
+            this.func_217465_m(entityIn);
             return true;
          }
       }
@@ -816,6 +_,7 @@
       if (this.func_217478_l(p_217440_1_)) {
          return false;
       } else {
+         if (MinecraftForge.EVENT_BUS.post(new EntityJoinWorldEvent(p_217440_1_, this))) return false;
          this.func_217465_m(p_217440_1_);
          return true;
       }
@@ -827,7 +_,6 @@
       if (entity == null) {
          return false;
       } else {
-         field_147491_a.warn("Trying to add entity with duplicated UUID {}. Existing {}#{}, new: {}#{}", uuid, EntityType.func_200718_a(entity.func_200600_R()), entity.func_145782_y(), EntityType.func_200718_a(p_217478_1_.func_200600_R()), p_217478_1_.func_145782_y());
          return true;
       }
    }
@@ -851,24 +_,41 @@
    }
 
    public boolean func_242106_g(Entity p_242106_1_) {
-      if (p_242106_1_.func_226276_cg_().anyMatch(this::func_217478_l)) {
+      // CraftBukkit start
+      return this.addAllEntitiesSafely(p_242106_1_, SpawnReason.DEFAULT);
+   }
+
+   public boolean addAllEntitiesSafely(Entity entity, SpawnReason reason) {
+      // CraftBukkit end
+      if (entity.func_226276_cg_().anyMatch(this::func_217478_l)) {
          return false;
       } else {
-         this.func_242417_l(p_242106_1_);
+         this.addAllEntities(entity, reason); // CraftBukkit
          return true;
       }
    }
 
    public void func_217466_a(Chunk p_217466_1_) {
+      // Spigot Start
+      for (TileEntity tileentity : p_217466_1_.func_177434_r().values()) {
+         if (tileentity instanceof IInventory) {
+            for (HumanEntity h : Lists.newArrayList(CraftCustomInventory.getViewers((IInventory) tileentity))) {
+               h.closeInventory();
+            }
+         }
+      }
+      // Spigot End
       this.field_147483_b.addAll(p_217466_1_.func_177434_r().values());
       ClassInheritanceMultiMap<Entity>[] aclassinheritancemultimap = p_217466_1_.func_177429_s();
       int i = aclassinheritancemultimap.length;
 
-      for(int j = 0; j < i; ++j) {
-         for(Entity entity : aclassinheritancemultimap[j]) {
+      for (int j = 0; j < i; ++j) {
+         Iterator<Entity> iterator = aclassinheritancemultimap[j].iterator();
+         while (iterator.hasNext()) {
+            Entity entity = iterator.next();
             if (!(entity instanceof ServerPlayerEntity)) {
                if (this.field_217492_a) {
-                  throw (IllegalStateException)Util.func_229757_c_(new IllegalStateException("Removing entity while ticking!"));
+                  throw (IllegalStateException) Util.func_229757_c_(new IllegalStateException("Removing entity while ticking!"));
                }
 
                this.field_217498_x.remove(entity.func_145782_y());
@@ -876,80 +_,170 @@
             }
          }
       }
-
    }
 
+   @Deprecated //Forge: Use removeEntityComplete(entity,boolean)
    public void func_217484_g(Entity p_217484_1_) {
-      if (p_217484_1_ instanceof EnderDragonEntity) {
-         for(EnderDragonPartEntity enderdragonpartentity : ((EnderDragonEntity)p_217484_1_).func_213404_dT()) {
-            enderdragonpartentity.func_70106_y();
+      removeEntityComplete(p_217484_1_, false);
+   }
+
+   public void removeEntityComplete(Entity p_217484_1_, boolean keepData) {
+      // Spigot start
+      if (p_217484_1_ instanceof PlayerEntity) {
+         this.func_73046_m().field_71305_c.values().stream().map(ServerWorld::func_217481_x).forEach((worldData) ->
+         {
+            for (Object o : worldData.field_212778_c.values()) {
+               if (o instanceof MapData) {
+                  MapData map = (MapData) o;
+                  map.field_76196_g.remove((PlayerEntity) p_217484_1_);
+                  for (Iterator<MapInfo> iter = map.field_76196_g.iterator(); iter.hasNext(); ) {
+                     if (iter.next().field_76211_a == p_217484_1_) {
+                        map.field_76203_h.remove(p_217484_1_.func_200200_C_().getString());
+                        iter.remove();
+                     }
+                  }
+               }
+            }
+         });
+      }
+      // Spigot end
+      if (p_217484_1_.isMultipartEntity()) {
+         for(PartEntity<?> enderdragonpartentity : p_217484_1_.getParts()) {
+            enderdragonpartentity.remove(keepData);
+            this.partEntities.remove(enderdragonpartentity.func_145782_y());
          }
       }
 
       this.field_175741_N.remove(p_217484_1_.func_110124_au());
       this.func_72863_F().func_217226_b(p_217484_1_);
       if (p_217484_1_ instanceof ServerPlayerEntity) {
-         ServerPlayerEntity serverplayerentity = (ServerPlayerEntity)p_217484_1_;
+         ServerPlayerEntity serverplayerentity = (ServerPlayerEntity) p_217484_1_;
          this.field_217491_A.remove(serverplayerentity);
       }
 
       this.func_96441_U().func_181140_a(p_217484_1_);
-      if (p_217484_1_ instanceof MobEntity) {
-         this.field_217495_I.remove(((MobEntity)p_217484_1_).func_70661_as());
-      }
+      // CraftBukkit start - SPIGOT-5278
+      if (p_217484_1_ instanceof DrownedEntity) {
+         this.field_217495_I.remove(((DrownedEntity) p_217484_1_).field_204716_a);
+         this.field_217495_I.remove(((DrownedEntity) p_217484_1_).field_204717_b);
+      } else
+         // CraftBukkit end
+         if (p_217484_1_ instanceof MobEntity) {
+            this.field_217495_I.remove(((MobEntity) p_217484_1_).func_70661_as());
+         }
 
+      p_217484_1_.onRemovedFromWorld();
+      p_217484_1_.remove(keepData);
+      p_217484_1_.valid = false; // CraftBukkit
+      MinecraftForge.EVENT_BUS.post(new EntityLeaveWorldEvent(p_217484_1_, this));
    }
 
    private void func_217465_m(Entity p_217465_1_) {
+      // Mohist start - Fix "Wrong location"
+      if (p_217465_1_.needsChunkUpdate) {
+         this.func_212866_a_((int) Math.floor(p_217465_1_.func_226277_ct_()) >> 4, (int) Math.floor(p_217465_1_.func_226281_cx_()) >> 4).func_76612_a(p_217465_1_);
+         p_217465_1_.needsChunkUpdate = false;
+      }
+      // Mohist end
       if (this.field_217492_a) {
          this.field_217499_z.add(p_217465_1_);
       } else {
          this.field_217498_x.put(p_217465_1_.func_145782_y(), p_217465_1_);
-         if (p_217465_1_ instanceof EnderDragonEntity) {
-            for(EnderDragonPartEntity enderdragonpartentity : ((EnderDragonEntity)p_217465_1_).func_213404_dT()) {
+         if (p_217465_1_.isMultipartEntity()) {
+            for(PartEntity<?> enderdragonpartentity : p_217465_1_.getParts()) {
                this.field_217498_x.put(enderdragonpartentity.func_145782_y(), enderdragonpartentity);
+               this.partEntities.put(enderdragonpartentity.func_145782_y(), enderdragonpartentity);
             }
          }
 
          this.field_175741_N.put(p_217465_1_.func_110124_au(), p_217465_1_);
          this.func_72863_F().func_217230_c(p_217465_1_);
-         if (p_217465_1_ instanceof MobEntity) {
-            this.field_217495_I.add(((MobEntity)p_217465_1_).func_70661_as());
-         }
+         // CraftBukkit start - SPIGOT-5278
+         if (p_217465_1_ instanceof DrownedEntity) {
+            this.field_217495_I.add(((DrownedEntity) p_217465_1_).field_204716_a);
+            this.field_217495_I.add(((DrownedEntity) p_217465_1_).field_204717_b);
+         } else
+            // CraftBukkit end
+            if (p_217465_1_ instanceof MobEntity) {
+               this.field_217495_I.add(((MobEntity) p_217465_1_).func_70661_as());
+            }
+         p_217465_1_.valid = true; // CraftBukkit
       }
 
+      p_217465_1_.onAddedToWorld();
    }
 
    public void func_217467_h(Entity p_217467_1_) {
+      removeEntity(p_217467_1_, false);
+   }
+
+   public void removeEntity(Entity p_217467_1_, boolean keepData) {
       if (this.field_217492_a) {
-         throw (IllegalStateException)Util.func_229757_c_(new IllegalStateException("Removing entity while ticking!"));
+         throw (IllegalStateException) Util.func_229757_c_(new IllegalStateException("Removing entity while ticking!"));
       } else {
          this.func_217454_n(p_217467_1_);
          this.field_217498_x.remove(p_217467_1_.func_145782_y());
-         this.func_217484_g(p_217467_1_);
+         this.removeEntityComplete(p_217467_1_, keepData);
       }
    }
 
    private void func_217454_n(Entity p_217454_1_) {
       IChunk ichunk = this.func_217353_a(p_217454_1_.field_70176_ah, p_217454_1_.field_70164_aj, ChunkStatus.field_222617_m, false);
       if (ichunk instanceof Chunk) {
-         ((Chunk)ichunk).func_76622_b(p_217454_1_);
+         ((Chunk) ichunk).func_76622_b(p_217454_1_);
       }
 
    }
 
    public void func_217434_e(ServerPlayerEntity p_217434_1_) {
-      p_217434_1_.func_70106_y();
-      this.func_217467_h(p_217434_1_);
+      removePlayer(p_217434_1_, false);
+   }
+
+   public void removePlayer(ServerPlayerEntity p_217434_1_, boolean keepData) {
+      p_217434_1_.remove(keepData);
+      this.removeEntity(p_217434_1_, keepData);
       this.func_72854_c();
    }
+
+   // CraftBukkit start
+   public boolean strikeLightning(Entity entitylightning) {
+      return this.strikeLightning(entitylightning, Cause.UNKNOWN);
+   }
+
+   public boolean strikeLightning(Entity entitylightning, Cause cause) {
+      // Mohist start - Compat for Forge,ignore modded weather effect
+      if (!AsyncCatcher.catchAsync() && entitylightning.getBukkitEntity() instanceof LightningStrike) {
+         LightningStrikeEvent lightning = CraftEventFactory.callLightningStrikeEvent((LightningStrike) entitylightning.getBukkitEntity(), cause);
+         this.getCBServer().getPluginManager().callEvent(lightning);
+         if (lightning.isCancelled())
+         {
+            return false;
+         }
+         // Mohist end
+      }
+      return this.func_217376_c(entitylightning);
+   }
+   // CraftBukkit end
 
    public void func_175715_c(int p_175715_1_, BlockPos p_175715_2_, int p_175715_3_) {
       for(ServerPlayerEntity serverplayerentity : this.field_73061_a.func_184103_al().func_181057_v()) {
+         // CraftBukkit start
+         PlayerEntity entityhuman = null;
+         Entity entity = this.func_73045_a(p_175715_1_);
+         if (entity instanceof PlayerEntity) entityhuman = (PlayerEntity) entity;
+         // CraftBukkit end
+
          if (serverplayerentity != null && serverplayerentity.field_70170_p == this && serverplayerentity.func_145782_y() != p_175715_1_) {
             double d0 = (double)p_175715_2_.func_177958_n() - serverplayerentity.func_226277_ct_();
             double d1 = (double)p_175715_2_.func_177956_o() - serverplayerentity.func_226278_cu_();
             double d2 = (double)p_175715_2_.func_177952_p() - serverplayerentity.func_226281_cx_();
+
+            // CraftBukkit start
+            if (entityhuman != null && entityhuman instanceof ServerPlayerEntity && !serverplayerentity.getBukkitEntity().canSee(((ServerPlayerEntity) entityhuman).getBukkitEntity())) {
+               continue;
+            }
+            // CraftBukkit end
+
             if (d0 * d0 + d1 * d1 + d2 * d2 < 1024.0D) {
                serverplayerentity.field_71135_a.func_147359_a(new SAnimateBlockBreakPacket(p_175715_1_, p_175715_2_, p_175715_3_));
             }
@@ -959,10 +_,20 @@
    }
 
    public void func_184148_a(@Nullable PlayerEntity p_184148_1_, double p_184148_2_, double p_184148_4_, double p_184148_6_, SoundEvent p_184148_8_, SoundCategory p_184148_9_, float p_184148_10_, float p_184148_11_) {
+      PlaySoundAtEntityEvent event = ForgeEventFactory.onPlaySoundAtEntity(p_184148_1_, p_184148_8_, p_184148_9_, p_184148_10_, p_184148_11_);
+      if (event.isCanceled() || event.getSound() == null) return;
+      p_184148_8_ = event.getSound();
+      p_184148_9_ = event.getCategory();
+      p_184148_10_ = event.getVolume();
       this.field_73061_a.func_184103_al().func_148543_a(p_184148_1_, p_184148_2_, p_184148_4_, p_184148_6_, p_184148_10_ > 1.0F ? (double)(16.0F * p_184148_10_) : 16.0D, this.func_234923_W_(), new SPlaySoundEffectPacket(p_184148_8_, p_184148_9_, p_184148_2_, p_184148_4_, p_184148_6_, p_184148_10_, p_184148_11_));
    }
 
    public void func_217384_a(@Nullable PlayerEntity p_217384_1_, Entity p_217384_2_, SoundEvent p_217384_3_, SoundCategory p_217384_4_, float p_217384_5_, float p_217384_6_) {
+      PlaySoundAtEntityEvent event = ForgeEventFactory.onPlaySoundAtEntity(p_217384_1_, p_217384_3_, p_217384_4_, p_217384_5_, p_217384_6_);
+      if (event.isCanceled() || event.getSound() == null) return;
+      p_217384_3_ = event.getSound();
+      p_217384_4_ = event.getCategory();
+      p_217384_5_ = event.getVolume();
       this.field_73061_a.func_184103_al().func_148543_a(p_217384_1_, p_217384_2_.func_226277_ct_(), p_217384_2_.func_226278_cu_(), p_217384_2_.func_226281_cx_(), p_217384_5_ > 1.0F ? (double)(16.0F * p_217384_5_) : 16.0D, this.func_234923_W_(), new SSpawnMovingSoundEffectPacket(p_217384_3_, p_217384_4_, p_217384_2_, p_217384_5_, p_217384_6_));
    }
 
@@ -996,11 +_,19 @@
       return this.field_241102_C_;
    }
 
-   public Explosion func_230546_a_(@Nullable Entity p_230546_1_, @Nullable DamageSource p_230546_2_, @Nullable ExplosionContext p_230546_3_, double p_230546_4_, double p_230546_6_, double p_230546_8_, float p_230546_10_, boolean p_230546_11_, Explosion.Mode p_230546_12_) {
-      Explosion explosion = new Explosion(this, p_230546_1_, p_230546_2_, p_230546_3_, p_230546_4_, p_230546_6_, p_230546_8_, p_230546_10_, p_230546_11_, p_230546_12_);
-      explosion.func_77278_a();
-      explosion.func_77279_a(false);
-      if (p_230546_12_ == Explosion.Mode.NONE) {
+   public Explosion func_230546_a_(@Nullable Entity p_230546_1_, @Nullable DamageSource p_230546_2_, @Nullable ExplosionContext p_230546_3_, double p_230546_4_, double p_230546_6_, double p_230546_8_, float p_230546_10_, boolean p_230546_11_, Mode p_230546_12_) {
+      // CraftBukkit start
+      Explosion explosion = super.func_230546_a_(p_230546_1_, p_230546_2_, p_230546_3_, p_230546_4_, p_230546_6_, p_230546_8_, p_230546_10_, p_230546_11_, p_230546_12_);
+      if (explosion.wasCanceled) {
+         return explosion;
+      }
+      /* Remove
+      Explosion explosion = new Explosion(this, exploder, damageSource, context, x, y, z, size, causesFire, mode);
+      explosion.doExplosionA();
+      explosion.doExplosionB(false);
+       */
+      // CraftBukkit end - TODO: Check if explosions are still properly implemented
+      if (p_230546_12_ == Mode.NONE) {
          explosion.func_180342_d();
       }
 
@@ -1054,12 +_,19 @@
    }
 
    public <T extends IParticleData> int func_195598_a(T p_195598_1_, double p_195598_2_, double p_195598_4_, double p_195598_6_, int p_195598_8_, double p_195598_9_, double p_195598_11_, double p_195598_13_, double p_195598_15_) {
-      SSpawnParticlePacket sspawnparticlepacket = new SSpawnParticlePacket(p_195598_1_, false, p_195598_2_, p_195598_4_, p_195598_6_, (float)p_195598_9_, (float)p_195598_11_, (float)p_195598_13_, (float)p_195598_15_, p_195598_8_);
+      // CraftBukkit - visibility api support
+      return sendParticles(null, p_195598_1_, p_195598_2_, p_195598_4_, p_195598_6_, p_195598_8_, p_195598_9_, p_195598_11_, p_195598_13_, p_195598_15_, false);
+   }
+
+   public <T extends IParticleData> int sendParticles(ServerPlayerEntity sender, T type, double posX, double posY, double posZ, int particleCount, double xOffset, double yOffset, double zOffset, double speed, boolean force) {
+      SSpawnParticlePacket packetplayoutworldparticles = new SSpawnParticlePacket(type, force, posX, posY, posZ, (float) xOffset, (float) yOffset, (float) zOffset, (float) speed, particleCount);
+      // CraftBukkit end
       int i = 0;
 
       for(int j = 0; j < this.field_217491_A.size(); ++j) {
          ServerPlayerEntity serverplayerentity = this.field_217491_A.get(j);
-         if (this.func_195601_a(serverplayerentity, false, p_195598_2_, p_195598_4_, p_195598_6_, sspawnparticlepacket)) {
+         if (sender != null && !serverplayerentity.getBukkitEntity().canSee(sender.getBukkitEntity())) continue; // CraftBukkit
+         if (this.func_195601_a(serverplayerentity, force, posX, posY, posZ, packetplayoutworldparticles)) { // CraftBukkit
             ++i;
          }
       }
@@ -1098,7 +_,7 @@
 
    @Nullable
    public BlockPos func_241117_a_(Structure<?> p_241117_1_, BlockPos p_241117_2_, int p_241117_3_, boolean p_241117_4_) {
-      return !this.field_73061_a.func_240793_aU_().func_230418_z_().func_236222_c_() ? null : this.func_72863_F().func_201711_g().func_235956_a_(this, p_241117_1_, p_241117_2_, p_241117_3_, p_241117_4_);
+      return !this.worldDataServer.func_230418_z_().func_236222_c_() ? null : this.func_72863_F().func_201711_g().func_235956_a_(this, p_241117_1_, p_241117_2_, p_241117_3_, p_241117_4_);
    }
 
    @Nullable
@@ -1131,7 +_,13 @@
    @Nullable
    public MapData func_217406_a(String p_217406_1_) {
       return this.func_73046_m().func_241755_D_().func_217481_x().func_215753_b(() -> {
-         return new MapData(p_217406_1_);
+         // CraftBukkit start
+         // We only get here when the data file exists, but is not a valid map
+         MapData newMap = new MapData(p_217406_1_);
+         MapInitializeEvent event = new MapInitializeEvent(newMap.mapView);
+         Bukkit.getServer().getPluginManager().callEvent(event);
+         return newMap;
+         // CraftBukkit end
       }, p_217406_1_);
    }
 
@@ -1154,7 +_,7 @@
    public BlockPos func_241135_u_() {
       BlockPos blockpos = new BlockPos(this.field_72986_A.func_76079_c(), this.field_72986_A.func_76075_d(), this.field_72986_A.func_76074_e());
       if (!this.func_175723_af().func_177746_a(blockpos)) {
-         blockpos = this.func_205770_a(Heightmap.Type.MOTION_BLOCKING, new BlockPos(this.func_175723_af().func_230316_a_(), 0.0D, this.func_175723_af().func_230317_b_()));
+         blockpos = this.func_205770_a(Type.MOTION_BLOCKING, new BlockPos(this.func_175723_af().func_230316_a_(), 0.0D, this.func_175723_af().func_230317_b_()));
       }
 
       return blockpos;
@@ -1261,9 +_,9 @@
 
       try (Writer writer = Files.newBufferedWriter(p_225322_1_.resolve("stats.txt"))) {
          writer.write(String.format("spawning_chunks: %d\n", chunkmanager.func_219246_e().func_219358_b()));
-         WorldEntitySpawner.EntityDensityManager worldentityspawner$entitydensitymanager = this.func_72863_F().func_241101_k_();
+         EntityDensityManager worldentityspawner$entitydensitymanager = this.func_72863_F().func_241101_k_();
          if (worldentityspawner$entitydensitymanager != null) {
-            for(it.unimi.dsi.fastutil.objects.Object2IntMap.Entry<EntityClassification> entry : worldentityspawner$entitydensitymanager.func_234995_b_().object2IntEntrySet()) {
+            for(Object2IntMap.Entry<EntityClassification> entry : worldentityspawner$entitydensitymanager.func_234995_b_().object2IntEntrySet()) {
                writer.write(String.format("spawn_count.%s: %d\n", entry.getKey().func_220363_a(), entry.getIntValue()));
             }
          }
@@ -1333,6 +_,11 @@
 
    public void func_230547_a_(BlockPos p_230547_1_, Block p_230547_2_) {
       if (!this.func_234925_Z_()) {
+         // CraftBukkit start
+         if (populating) {
+            return;
+         }
+         // CraftBukkit end
          this.func_195593_d(p_230547_1_, p_230547_2_);
       }
 
@@ -1352,11 +_,11 @@
    }
 
    public boolean func_241109_A_() {
-      return this.field_73061_a.func_240793_aU_().func_230418_z_().func_236228_i_();
+      return this.worldDataServer.func_230418_z_().func_236228_i_();
    }
 
    public long func_72905_C() {
-      return this.field_73061_a.func_240793_aU_().func_230418_z_().func_236221_b_();
+      return this.worldDataServer.func_230418_z_().func_236221_b_();
    }
 
    @Nullable
@@ -1390,7 +_,7 @@
             object2intopenhashmap.addTo(resourcelocation, 1);
          }
 
-         return object2intopenhashmap.object2IntEntrySet().stream().sorted(Comparator.comparing(it.unimi.dsi.fastutil.objects.Object2IntMap.Entry<ResourceLocation>::getIntValue).reversed()).limit(5L).map((p_244523_0_) -> {
+         return object2intopenhashmap.object2IntEntrySet().stream().sorted(Comparator.comparing(Object2IntMap.Entry<ResourceLocation>::getIntValue).reversed()).limit(5L).map((p_244523_0_) -> {
             return p_244523_0_.getKey() + ":" + p_244523_0_.getIntValue();
          }).collect(Collectors.joining(","));
       } catch (Exception exception) {
@@ -1399,15 +_,45 @@
    }
 
    public static void func_241121_a_(ServerWorld p_241121_0_) {
+      // CraftBukkit start
+      ServerWorld.makeObsidianPlatform(p_241121_0_, null);
+   }
+
+   public static void makeObsidianPlatform(ServerWorld worldserver, Entity entity) {
+      // CraftBukkit end
       BlockPos blockpos = field_241108_a_;
       int i = blockpos.func_177958_n();
       int j = blockpos.func_177956_o() - 2;
       int k = blockpos.func_177952_p();
-      BlockPos.func_191531_b(i - 2, j + 1, k - 2, i + 2, j + 3, k + 2).forEach((p_244430_1_) -> {
-         p_241121_0_.func_175656_a(p_244430_1_, Blocks.field_150350_a.func_176223_P());
+      // CraftBukkit start
+      BlockStateListPopulator blockList = new BlockStateListPopulator(worldserver);
+      BlockPos.func_191531_b(i - 2, j + 1, k - 2, i + 2, j + 3, k + 2).forEach((p_241122_1_) -> {
+         blockList.func_180501_a(p_241122_1_, Blocks.field_150350_a.func_176223_P(), 3);
       });
       BlockPos.func_191531_b(i - 2, j, k - 2, i + 2, j, k + 2).forEach((p_241122_1_) -> {
-         p_241121_0_.func_175656_a(p_241122_1_, Blocks.field_150343_Z.func_176223_P());
+         blockList.func_180501_a(p_241122_1_, Blocks.field_150343_Z.func_176223_P(), 3);
       });
+      org.bukkit.World bworld = worldserver.getWorld();
+      PortalCreateEvent portalEvent = new PortalCreateEvent((List<org.bukkit.block.BlockState>) (List) blockList.getList(), bworld, (entity == null) ? null : entity.getBukkitEntity(), CreateReason.END_PLATFORM);
+      worldserver.getCBServer().getPluginManager().callEvent(portalEvent);
+      if (!portalEvent.isCancelled()) {
+         blockList.updateList();
+      }
+      // CraftBukkit end
+   }
+
+   protected void initCapabilities() {
+      this.gatherCapabilities();
+      capabilityData = this.func_217481_x().func_215752_a(() -> new WorldCapabilityData(getCapabilities()), WorldCapabilityData.ID);
+      capabilityData.setCapabilities(getCapabilities());
+   }
+
+   public Stream<Entity> getEntities() {
+       return field_217498_x.values().stream();
+   }
+
+   @Override
+   public Collection<PartEntity<?>> getPartEntities() {
+      return this.partEntities.values();
    }
 }
