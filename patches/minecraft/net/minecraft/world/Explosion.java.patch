--- ../src-base/minecraft/net/minecraft/world/Explosion.java
+++ ../src-work/minecraft/net/minecraft/world/Explosion.java
@@ -14,8 +14,10 @@
 import net.minecraft.enchantment.EnchantmentProtection;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityLivingBase;
+import net.minecraft.entity.item.EntityFallingBlock;
 import net.minecraft.entity.item.EntityTNTPrimed;
 import net.minecraft.entity.player.EntityPlayer;
+import net.minecraft.entity.projectile.EntityFireball;
 import net.minecraft.init.Blocks;
 import net.minecraft.init.SoundEvents;
 import net.minecraft.util.DamageSource;
@@ -27,6 +29,11 @@
 import net.minecraft.util.math.Vec3d;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.v1_12_R1.event.CraftEventFactory;
+import org.bukkit.event.block.BlockExplodeEvent;
+import org.bukkit.event.entity.EntityExplodeEvent;
+import com.mohistmc.configuration.MohistConfig;
 
 public class Explosion
 {
@@ -34,14 +41,17 @@
     private final boolean field_82755_b;
     private final Random field_77290_i;
     private final World field_77287_j;
-    private final double field_77284_b;
-    private final double field_77285_c;
-    private final double field_77282_d;
-    private final Entity field_77283_e;
+    public final double field_77284_b;
+    public final double field_77285_c;
+    public final double field_77282_d;
+    public final Entity field_77283_e;
     private final float field_77280_f;
     private final List<BlockPos> field_77281_g;
     private final Map<EntityPlayer, Vec3d> field_77288_k;
+    private final Vec3d position;
 
+    public boolean wasCanceled = MohistConfig.instance.explosion_canceled.getValue();
+
     @SideOnly(Side.CLIENT)
     public Explosion(World p_i45752_1_, Entity p_i45752_2_, double p_i45752_3_, double p_i45752_5_, double p_i45752_7_, float p_i45752_9_, List<BlockPos> p_i45752_10_)
     {
@@ -62,16 +72,21 @@
         this.field_77288_k = Maps.<EntityPlayer, Vec3d>newHashMap();
         this.field_77287_j = p_i45754_1_;
         this.field_77283_e = p_i45754_2_;
-        this.field_77280_f = p_i45754_9_;
+        // this.size = size;
+        this.field_77280_f = (float) Math.max(p_i45754_9_, 0.0); // CraftBukkit - clamp bad values
         this.field_77284_b = p_i45754_3_;
         this.field_77285_c = p_i45754_5_;
         this.field_77282_d = p_i45754_7_;
         this.field_77286_a = p_i45754_10_;
         this.field_82755_b = p_i45754_11_;
+        this.position = new Vec3d(this.field_77284_b, this.field_77285_c, this.field_77282_d);
     }
 
     public void func_77278_a()
     {
+        if (this.field_77280_f < 0.1F) {
+            return;
+        }
         Set<BlockPos> set = Sets.<BlockPos>newHashSet();
         int i = 16;
 
@@ -102,11 +117,11 @@
 
                             if (iblockstate.func_185904_a() != Material.field_151579_a)
                             {
-                                float f2 = this.field_77283_e != null ? this.field_77283_e.func_180428_a(this, this.field_77287_j, blockpos, iblockstate) : iblockstate.func_177230_c().func_149638_a((Entity)null);
+                                float f2 = this.field_77283_e != null ? this.field_77283_e.func_180428_a(this, this.field_77287_j, blockpos, iblockstate) : iblockstate.func_177230_c().getExplosionResistance(field_77287_j, blockpos, (Entity)null, this);
                                 f -= (f2 + 0.3F) * 0.3F;
                             }
 
-                            if (f > 0.0F && (this.field_77283_e == null || this.field_77283_e.func_174816_a(this, this.field_77287_j, blockpos, iblockstate, f)))
+                            if (f > 0.0F && (this.field_77283_e == null || this.field_77283_e.func_174816_a(this, this.field_77287_j, blockpos, iblockstate, f)) && blockpos.func_177956_o() < 256 && blockpos.func_177956_o() >= 0) // CraftBukkit - don't wrap explosions
                             {
                                 set.add(blockpos);
                             }
@@ -129,6 +144,7 @@
         int j2 = MathHelper.func_76128_c(this.field_77282_d - (double)f3 - 1.0D);
         int j1 = MathHelper.func_76128_c(this.field_77282_d + (double)f3 + 1.0D);
         List<Entity> list = this.field_77287_j.func_72839_b(this.field_77283_e, new AxisAlignedBB((double)k1, (double)i2, (double)j2, (double)l1, (double)i1, (double)j1));
+        net.minecraftforge.event.ForgeEventFactory.onExplosionDetonate(this.field_77287_j, this, list, f3);
         Vec3d vec3d = new Vec3d(this.field_77284_b, this.field_77285_c, this.field_77282_d);
 
         for (int k2 = 0; k2 < list.size(); ++k2)
@@ -151,9 +167,16 @@
                         d5 = d5 / d13;
                         d7 = d7 / d13;
                         d9 = d9 / d13;
-                        double d14 = (double)this.field_77287_j.func_72842_a(vec3d, entity.func_174813_aQ());
+                        double d14 = this.getBlockDensity(vec3d, entity.func_174813_aQ()); // Paper - Optimize explosions
                         double d10 = (1.0D - d12) * d14;
-                        entity.func_70097_a(DamageSource.func_94539_a(this), (float)((int)((d10 * d10 + d10) / 2.0D * 7.0D * (double)f3 + 1.0D)));
+                        // entity.attackEntityFrom(DamageSource.causeExplosionDamage(this), (float)((int)((d10 * d10 + d10) / 2.0D * 7.0D * (double)f3 + 1.0D)));
+                        CraftEventFactory.entityDamage = field_77283_e;
+                        entity.forceExplosionKnockback = false;
+                        boolean wasDamaged = entity.func_70097_a(DamageSource.func_94539_a(this), (float) ((int) ((d10 * d10 + d10) / 2.0D * 7.0D * (double) f3 + 1.0D)));
+                        CraftEventFactory.entityDamage = null;
+                        if (!wasDamaged && !(entity instanceof EntityTNTPrimed || entity instanceof EntityFallingBlock) && !entity.forceExplosionKnockback) {
+                            continue;
+                        }
                         double d11 = d10;
 
                         if (entity instanceof EntityLivingBase)
@@ -195,6 +218,48 @@
 
         if (this.field_82755_b)
         {
+            org.bukkit.World bworld = this.field_77287_j.getWorld();
+            org.bukkit.entity.Entity explode = this.field_77283_e == null ? null : this.field_77283_e.getBukkitEntity();
+            Location location = new Location(bworld, this.field_77284_b, this.field_77285_c, this.field_77282_d);
+
+            List<org.bukkit.block.Block> blockList = Lists.newArrayList();
+            for (int i1 = this.field_77281_g.size() - 1; i1 >= 0; i1--) {
+                BlockPos cpos = (BlockPos) this.field_77281_g.get(i1);
+                org.bukkit.block.Block bblock = bworld.getBlockAt(cpos.func_177958_n(), cpos.func_177956_o(), cpos.func_177952_p());
+                if (bblock.getType() != org.bukkit.Material.AIR) {
+                    blockList.add(bblock);
+                }
+            }
+
+            boolean cancelled;
+            List<org.bukkit.block.Block> bukkitBlocks;
+            float yield;
+
+            if (explode != null) {
+                EntityExplodeEvent event = new EntityExplodeEvent(explode, location, blockList, 1.0F / this.field_77280_f);
+                this.field_77287_j.getServer().getPluginManager().callEvent(event);
+                cancelled = event.isCancelled();
+                bukkitBlocks = event.blockList();
+                yield = event.getYield();
+            } else {
+                BlockExplodeEvent event = new BlockExplodeEvent(location.getBlock(), blockList, 1.0F / this.field_77280_f);
+                this.field_77287_j.getServer().getPluginManager().callEvent(event);
+                cancelled = event.isCancelled();
+                bukkitBlocks = event.blockList();
+                yield = event.getYield();
+            }
+
+            this.field_77281_g.clear();
+
+            for (org.bukkit.block.Block bblock : bukkitBlocks) {
+                BlockPos coords = new BlockPos(bblock.getX(), bblock.getY(), bblock.getZ());
+                field_77281_g.add(coords);
+            }
+
+            if (cancelled) {
+                this.wasCanceled = true;
+                return;
+            }
             for (BlockPos blockpos : this.field_77281_g)
             {
                 IBlockState iblockstate = this.field_77287_j.func_180495_p(blockpos);
@@ -225,11 +290,12 @@
                 {
                     if (block.func_149659_a(this))
                     {
-                        block.func_180653_a(this.field_77287_j, blockpos, this.field_77287_j.func_180495_p(blockpos), 1.0F / this.field_77280_f, 0);
+                        // CraftBukkit - add yield
+                        // block.dropBlockAsItemWithChance(this.world, blockpos, this.world.getBlockState(blockpos), 1.0F / this.size, 0);
+                        block.func_180653_a(this.field_77287_j, blockpos, this.field_77287_j.func_180495_p(blockpos), yield, 0);
                     }
 
-                    this.field_77287_j.func_180501_a(blockpos, Blocks.field_150350_a.func_176223_P(), 3);
-                    block.func_180652_a(this.field_77287_j, blockpos, this);
+                    block.onBlockExploded(this.field_77287_j, blockpos, this);
                 }
             }
         }
@@ -240,7 +306,12 @@
             {
                 if (this.field_77287_j.func_180495_p(blockpos1).func_185904_a() == Material.field_151579_a && this.field_77287_j.func_180495_p(blockpos1.func_177977_b()).func_185913_b() && this.field_77290_i.nextInt(3) == 0)
                 {
-                    this.field_77287_j.func_175656_a(blockpos1, Blocks.field_150480_ab.func_176223_P());
+                    // this.world.setBlockState(blockpos1, Blocks.FIRE.getDefaultState());
+                    // CraftBukkit start - Ignition by explosion
+                    if (!org.bukkit.craftbukkit.v1_12_R1.event.CraftEventFactory.callBlockIgniteEvent(this.field_77287_j, blockpos1.func_177958_n(), blockpos1.func_177956_o(), blockpos1.func_177952_p(), this).isCancelled()) {
+                        this.field_77287_j.func_175656_a(blockpos1, Blocks.field_150480_ab.func_176223_P());
+                    }
+                    // CraftBukkit end
                 }
             }
         }
@@ -264,7 +335,8 @@
         }
         else
         {
-            return this.field_77283_e instanceof EntityLivingBase ? (EntityLivingBase)this.field_77283_e : null;
+            // CraftBukkit start - obtain Fireball shooter for explosion tracking
+            return this.field_77283_e instanceof EntityLivingBase ? (EntityLivingBase)this.field_77283_e : (this.field_77283_e instanceof EntityFireball ? ((EntityFireball) this.field_77283_e).field_70235_a : null);
         }
     }
 
@@ -277,4 +349,84 @@
     {
         return this.field_77281_g;
     }
+
+    public Vec3d getPosition(){ return this.position; }
+
+    // Paper start - Optimize explosions
+    private float getBlockDensity(Vec3d vec3d, AxisAlignedBB aabb) {
+        CacheKey key = new CacheKey(this, aabb);
+        Float blockDensity = this.field_77287_j.explosionDensityCache.get(key);
+        if (blockDensity == null) {
+            blockDensity = this.field_77287_j.func_72842_a(vec3d, aabb);
+            this.field_77287_j.explosionDensityCache.put(key, blockDensity);
+        }
+
+        return blockDensity;
+    }
+
+    static class CacheKey {
+        private final World world;
+        private final double posX, posY, posZ;
+        private final double minX, minY, minZ;
+        private final double maxX, maxY, maxZ;
+
+        public CacheKey(Explosion explosion, AxisAlignedBB aabb) {
+            this.world = explosion.field_77287_j;
+            this.posX = explosion.field_77284_b;
+            this.posY = explosion.field_77285_c;
+            this.posZ = explosion.field_77282_d;
+            this.minX = aabb.field_72340_a;
+            this.minY = aabb.field_72338_b;
+            this.minZ = aabb.field_72339_c;
+            this.maxX = aabb.field_72336_d;
+            this.maxY = aabb.field_72337_e;
+            this.maxZ = aabb.field_72334_f;
+        }
+
+        @Override
+        public boolean equals(Object o) {
+            if (this == o) return true;
+            if (o == null || getClass() != o.getClass()) return false;
+
+            CacheKey cacheKey = (CacheKey) o;
+
+            if (Double.compare(cacheKey.posX, posX) != 0) return false;
+            if (Double.compare(cacheKey.posY, posY) != 0) return false;
+            if (Double.compare(cacheKey.posZ, posZ) != 0) return false;
+            if (Double.compare(cacheKey.minX, minX) != 0) return false;
+            if (Double.compare(cacheKey.minY, minY) != 0) return false;
+            if (Double.compare(cacheKey.minZ, minZ) != 0) return false;
+            if (Double.compare(cacheKey.maxX, maxX) != 0) return false;
+            if (Double.compare(cacheKey.maxY, maxY) != 0) return false;
+            if (Double.compare(cacheKey.maxZ, maxZ) != 0) return false;
+            return world.equals(cacheKey.world);
+        }
+
+        @Override
+        public int hashCode() {
+            int result;
+            long temp;
+            result = world.hashCode();
+            temp = Double.doubleToLongBits(posX);
+            result = 31 * result + (int) (temp ^ (temp >>> 32));
+            temp = Double.doubleToLongBits(posY);
+            result = 31 * result + (int) (temp ^ (temp >>> 32));
+            temp = Double.doubleToLongBits(posZ);
+            result = 31 * result + (int) (temp ^ (temp >>> 32));
+            temp = Double.doubleToLongBits(minX);
+            result = 31 * result + (int) (temp ^ (temp >>> 32));
+            temp = Double.doubleToLongBits(minY);
+            result = 31 * result + (int) (temp ^ (temp >>> 32));
+            temp = Double.doubleToLongBits(minZ);
+            result = 31 * result + (int) (temp ^ (temp >>> 32));
+            temp = Double.doubleToLongBits(maxX);
+            result = 31 * result + (int) (temp ^ (temp >>> 32));
+            temp = Double.doubleToLongBits(maxY);
+            result = 31 * result + (int) (temp ^ (temp >>> 32));
+            temp = Double.doubleToLongBits(maxZ);
+            result = 31 * result + (int) (temp ^ (temp >>> 32));
+            return result;
+        }
+    }
+    // Paper end
\ No newline at end of file
 }
