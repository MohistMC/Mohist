--- a/net/minecraft/entity/Entity.java
+++ b/net/minecraft/entity/Entity.java
@@ -14,6 +14,7 @@
 import java.util.Set;
 import java.util.UUID;
 import java.util.concurrent.atomic.AtomicInteger;
+import java.util.concurrent.atomic.AtomicReference;
 import java.util.stream.Stream;
 import javax.annotation.Nullable;
 import net.minecraft.advancements.CriteriaTriggers;
@@ -21,7 +22,6 @@
 import net.minecraft.block.BlockRenderType;
 import net.minecraft.block.BlockState;
 import net.minecraft.block.Blocks;
-import net.minecraft.block.FenceGateBlock;
 import net.minecraft.block.HoneyBlock;
 import net.minecraft.block.NetherPortalBlock;
 import net.minecraft.block.SoundType;
@@ -38,6 +38,7 @@
 import net.minecraft.entity.effect.LightningBoltEntity;
 import net.minecraft.entity.item.BoatEntity;
 import net.minecraft.entity.item.ItemEntity;
+import net.minecraft.entity.passive.TameableEntity;
 import net.minecraft.entity.player.PlayerEntity;
 import net.minecraft.entity.player.ServerPlayerEntity;
 import net.minecraft.fluid.Fluid;
@@ -59,7 +60,6 @@
 import net.minecraft.scoreboard.ScorePlayerTeam;
 import net.minecraft.scoreboard.Team;
 import net.minecraft.server.MinecraftServer;
-import net.minecraft.tags.BlockTags;
 import net.minecraft.tags.FluidTags;
 import net.minecraft.tags.Tag;
 import net.minecraft.util.ActionResultType;
@@ -104,17 +104,89 @@
 import net.minecraftforge.api.distmarker.OnlyIn;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.Bukkit;
+import org.bukkit.Server;
+import org.bukkit.block.BlockFace;
+import org.bukkit.command.CommandSender;
+import org.bukkit.craftbukkit.v1_15_R1.CraftServer;
+import org.bukkit.craftbukkit.v1_15_R1.CraftWorld;
+import org.bukkit.craftbukkit.v1_15_R1.entity.CraftEntity;
+import org.bukkit.craftbukkit.v1_15_R1.entity.CraftPlayer;
+import org.bukkit.craftbukkit.v1_15_R1.event.CraftEventFactory;
+import org.bukkit.craftbukkit.v1_15_R1.SpigotTimings;
+import org.bukkit.entity.Hanging;
+import org.bukkit.entity.Vehicle;
+import org.bukkit.event.entity.EntityAirChangeEvent;
+import org.bukkit.event.entity.EntityCombustByEntityEvent;
+import org.bukkit.event.entity.EntityCombustEvent;
+import org.bukkit.event.entity.EntityDropItemEvent;
+import org.bukkit.event.entity.EntityPortalEvent;
+import org.bukkit.event.entity.EntityPoseChangeEvent;
+import org.bukkit.event.hanging.HangingBreakByEntityEvent;
+import org.bukkit.event.player.PlayerTeleportEvent;
+import org.bukkit.event.vehicle.VehicleBlockCollisionEvent;
+import org.bukkit.event.vehicle.VehicleEnterEvent;
+import org.bukkit.event.vehicle.VehicleExitEvent;
+import org.bukkit.plugin.PluginManager;
+import org.bukkit.projectiles.ProjectileSource;
+import org.spigotmc.CustomTimingsHandler;
 
-public abstract class Entity implements INameable, ICommandSource {
+public abstract class Entity extends net.minecraftforge.common.capabilities.CapabilityProvider<Entity> implements INameable, ICommandSource, net.minecraftforge.common.extensions.IForgeEntity {
+
+   // CraftBukkit start
+   private static final int CURRENT_LEVEL = 2;
+   static boolean isLevelAtLeast(CompoundNBT tag, int level) {
+      return tag.func_74764_b("Bukkit.updateLevel") && tag.func_74762_e("Bukkit.updateLevel") >= level;
+   }
+
+   private CraftEntity bukkitEntity;
+
+   public CraftEntity getBukkitEntity() {
+      if (bukkitEntity == null) {
+         bukkitEntity = CraftEntity.getEntity(field_70170_p.getServerCB(), this);
+      }
+      return bukkitEntity;
+   }
+
+   @Override
+   public CommandSender getBukkitSender(CommandSource wrapper) {
+      return getBukkitEntity();
+   }
+
+   public boolean persist;
+   public boolean valid;
+   public ProjectileSource projectileSource;
+   public boolean forceExplosionKnockback;
+
+   public CustomTimingsHandler tickTimer = SpigotTimings.getEntityTimings(this); // Spigot
+
+   // Spigot start
+   public final org.spigotmc.ActivationRange.ActivationType activationType = org.spigotmc.ActivationRange.initializeEntityActivationType(this);
+   public final boolean defaultActivationState;
+   public long activatedTick = Integer.MIN_VALUE;
+   public void inactiveTick() { }
+   // Spigot end
+
+   public float getBukkitYaw() {
+      return this.field_70177_z;
+   }
+
+   public boolean isChunkLoaded() {
+      return this.field_70170_p.func_217354_b((int)Math.floor(this.field_70165_t) >> 4, (int)Math.floor(this.field_70161_v) >> 4);
+   }
+
+   // CraftBukkit end
+
    protected static final Logger field_184243_a = LogManager.getLogger();
    private static final AtomicInteger field_213331_b = new AtomicInteger();
    private static final List<ItemStack> field_190535_b = Collections.emptyList();
    private static final AxisAlignedBB field_174836_a = new AxisAlignedBB(0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D);
    private static double field_70155_l = 1.0D;
+   @Deprecated // Forge: Use the getter to allow overriding in mods
    private final EntityType<?> field_200606_g;
    private int field_145783_c = field_213331_b.incrementAndGet();
    public boolean field_70156_m;
-   private final List<Entity> field_184244_h = Lists.newArrayList();
+   public final List<Entity> field_184244_h = Lists.newArrayList(); // private->public CraftBukkit
    protected int field_184245_j;
    @Nullable
    private Entity field_184239_as;
@@ -138,6 +210,7 @@
    public boolean field_70132_H;
    public boolean field_70133_I;
    protected Vec3d field_213328_B = Vec3d.field_186680_a;
+   @Deprecated //Forge: Use isAlive, remove(boolean) and revive() instead of directly accessing this field. To allow the entity to react to and better control this information.
    public boolean field_70128_L;
    public float field_70141_P;
    public float field_70140_Q;
@@ -153,8 +226,8 @@
    public float field_70144_Y;
    protected final Random field_70146_Z = new Random();
    public int field_70173_aa;
-   private int field_190534_ay = -this.func_190531_bD();
-   protected boolean field_70171_ac;
+   public int field_190534_ay = -this.func_190531_bD(); // private->public CraftBukkit
+   public boolean field_70171_ac; // protected->public Spigot
    protected double field_211517_W;
    protected boolean field_205013_W;
    protected boolean field_213329_S;
@@ -187,7 +260,7 @@
    private boolean field_83001_bt;
    protected UUID field_96093_i = MathHelper.func_180182_a(this.field_70146_Z);
    protected String field_189513_ar = this.field_96093_i.toString();
-   protected boolean field_184238_ar;
+   public boolean field_184238_ar;  // protected->public CraftBukkit
    private final Set<String> field_184236_aF = Sets.newHashSet();
    private boolean field_184237_aG;
    private final double[] field_191505_aI = new double[]{0.0D, 0.0D, 0.0D};
@@ -195,14 +268,21 @@
    private EntitySize field_213325_aI;
    private float field_213326_aJ;
 
+
    public Entity(EntityType<?> p_i48580_1_, World p_i48580_2_) {
+      super(Entity.class);
       this.field_200606_g = p_i48580_1_;
       this.field_70170_p = p_i48580_2_;
       this.field_213325_aI = p_i48580_1_.func_220334_j();
       this.func_70107_b(0.0D, 0.0D, 0.0D);
       if (p_i48580_2_ != null) {
          this.field_71093_bK = p_i48580_2_.field_73011_w.func_186058_p();
+         // Spigot start
+         this.defaultActivationState = org.spigotmc.ActivationRange.initializeEntityActivationState(this, field_70170_p.spigotConfig);
+      } else {
+         this.defaultActivationState = false;
       }
+      // Spigot end
 
       this.field_70180_af = new EntityDataManager(this);
       this.field_70180_af.func_187214_a(field_184240_ax, (byte)0);
@@ -213,7 +293,10 @@
       this.field_70180_af.func_187214_a(field_189655_aD, false);
       this.field_70180_af.func_187214_a(field_213330_X, Pose.STANDING);
       this.func_70088_a();
-      this.field_213326_aJ = this.func_213316_a(Pose.STANDING, this.field_213325_aI);
+      this.field_70180_af.registrationLocked = true; // Spigot
+      this.field_213326_aJ = getEyeHeightForge(Pose.STANDING, this.field_213325_aI);
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityEvent.EntityConstructing(this));
+      this.gatherCapabilities();
    }
 
    @OnlyIn(Dist.CLIENT)
@@ -292,7 +375,7 @@
    @OnlyIn(Dist.CLIENT)
    protected void func_70065_x() {
       if (this.field_70170_p != null) {
-         for(double d0 = this.func_226278_cu_(); d0 > 0.0D && d0 < 256.0D; ++d0) {
+         for(double d0 = this.func_226278_cu_(); d0 > 0.0D && d0 < this.field_70170_p.func_201675_m().getHeight(); ++d0) {
             this.func_70107_b(this.func_226277_ct_(), d0, this.func_226281_cx_());
             if (this.field_70170_p.func_226669_j_(this)) {
                break;
@@ -305,10 +388,22 @@
    }
 
    public void func_70106_y() {
+      this.remove(false);
+   }
+
+   public void remove(boolean keepData) {
       this.field_70128_L = true;
+      if (!keepData)
+         this.invalidateCaps();
    }
 
    protected void func_213301_b(Pose p_213301_1_) {
+      // CraftBukkit start
+      if (p_213301_1_ == this.func_213283_Z()) {
+         return;
+      }
+      this.field_70170_p.getServerCB().getPluginManager().callEvent(new EntityPoseChangeEvent(this.getBukkitEntity(), org.bukkit.entity.Pose.values()[p_213301_1_.ordinal()]));
+      // CraftBukkit end
       this.field_70180_af.func_187227_b(field_213330_X, p_213301_1_);
    }
 
@@ -317,15 +412,40 @@
    }
 
    protected void func_70101_b(float p_70101_1_, float p_70101_2_) {
+      // CraftBukkit start - yaw was sometimes set to NaN, so we need to set it back to 0
+      if (Float.isNaN(p_70101_1_)) {
+         p_70101_1_ = 0;
+      }
+      if (p_70101_1_ == Float.POSITIVE_INFINITY || p_70101_1_ == Float.NEGATIVE_INFINITY) {
+         if (this instanceof ServerPlayerEntity) {
+            this.field_70170_p.getServerCB().getLogger().warning(this.func_200200_C_() + " was caught trying to crash the server with an invalid yaw");
+            ((CraftPlayer) this.getBukkitEntity()).kickPlayer("Infinite yaw (Hacking?)");
+         }
+         p_70101_1_ = 0;
+      }
+      // pitch was sometimes set to NaN, so we need to set it back to 0
+      if (Float.isNaN(p_70101_2_)) {
+         p_70101_2_ = 0;
+      }
+      if (p_70101_2_ == Float.POSITIVE_INFINITY || p_70101_2_ == Float.NEGATIVE_INFINITY) {
+         if (this instanceof ServerPlayerEntity) {
+            this.field_70170_p.getServerCB().getLogger().warning(this.func_200200_C_() + " was caught trying to crash the server with an invalid pitch");
+            ((CraftPlayer) this.getBukkitEntity()).kickPlayer("Infinite pitch (Hacking?)");
+         }
+         p_70101_2_ = 0;
+      }
+      // CraftBukkit end
       this.field_70177_z = p_70101_1_ % 360.0F;
       this.field_70125_A = p_70101_2_ % 360.0F;
    }
 
    public void func_70107_b(double p_70107_1_, double p_70107_3_, double p_70107_5_) {
       this.func_226288_n_(p_70107_1_, p_70107_3_, p_70107_5_);
+      if (this.isAddedToWorld() && !this.field_70170_p.field_72995_K && field_70170_p instanceof ServerWorld) ((ServerWorld)this.field_70170_p).func_217464_b(this); // Forge - Process chunk registration after moving.
       float f = this.field_213325_aI.field_220315_a / 2.0F;
       float f1 = this.field_213325_aI.field_220316_b;
       this.func_174826_a(new AxisAlignedBB(p_70107_1_ - (double)f, p_70107_3_, p_70107_5_ - (double)f, p_70107_1_ + (double)f, p_70107_3_ + (double)f1, p_70107_5_ + (double)f));
+      if(valid) ((ServerWorld) field_70170_p).func_217464_b(this); // CraftBukkit
    }
 
    protected void func_226264_Z_() {
@@ -356,6 +476,15 @@
       this.func_70030_z();
    }
 
+   // CraftBukkit start
+   public void postTick() {
+      // No clean way to break out of ticking once the entity has been copied to a new world, so instead we move the portalling later in the tick cycle
+      if (!(this instanceof ServerPlayerEntity)) {
+         this.func_213284_aV();
+      }
+   }
+   // CraftBukkit end
+
    public void func_70030_z() {
       this.field_70170_p.func_217381_Z().func_76320_a("entityBaseTick");
       if (this.func_184218_aH() && this.func_184187_bx().field_70128_L) {
@@ -369,7 +498,7 @@
       this.field_70141_P = this.field_70140_Q;
       this.field_70127_C = this.field_70125_A;
       this.field_70126_B = this.field_70177_z;
-      this.func_213284_aV();
+      if(this instanceof ServerPlayerEntity) this.func_213284_aV(); // CraftBukkit - // Moved up to postTick
       this.func_174830_Y();
       this.func_205011_p();
       if (this.field_70170_p.field_72995_K) {
@@ -419,13 +548,41 @@
 
    protected void func_70044_A() {
       if (!this.func_70045_F()) {
-         this.func_70015_d(15);
+         // CraftBukkit start - Fallen in lava TODO: this event spams!
+         if (this instanceof LivingEntity && field_190534_ay <= 0) {
+            // not on fire yet
+            // TODO: shouldn't be sending null for the block
+            org.bukkit.block.Block damager = null; // ((WorldServer) this.l).getWorld().getBlockAt(i, j, k);
+            org.bukkit.entity.Entity damagee = this.getBukkitEntity();
+            EntityCombustEvent combustEvent = new org.bukkit.event.entity.EntityCombustByBlockEvent(damager, damagee, 15);
+            this.field_70170_p.getServerCB().getPluginManager().callEvent(combustEvent);
+            if (!combustEvent.isCancelled()) {
+               this.setOnFire(combustEvent.getDuration(), false);
+            }
+         } else {
+            // This will be called every single tick the entity is in lava, so don't throw an event
+            this.setOnFire(15, false);
+         }
+         // CraftBukkit end - we also don't throw an event unless the object in lava is living, to save on some event calls
          this.func_70097_a(DamageSource.field_76371_c, 4.0F);
       }
    }
 
    public void func_70015_d(int p_70015_1_) {
-      int i = p_70015_1_ * 20;
+      // CraftBukkit start
+      this.setOnFire(p_70015_1_, true);
+   }
+   public void setOnFire(int seconds, boolean callEvent) {
+      if (callEvent) {
+         EntityCombustEvent event = new EntityCombustEvent(this.getBukkitEntity(), seconds);
+         this.field_70170_p.getServerCB().getPluginManager().callEvent(event);
+         if (event.isCancelled()) {
+            return;
+         }
+         seconds = event.getDuration();
+      }
+      // CraftBukkit end
+      int i = seconds * 20;
       if (this instanceof LivingEntity) {
          i = ProtectionEnchantment.func_92093_a((LivingEntity)this, i);
       }
@@ -461,6 +618,7 @@
    }
 
    public void func_213315_a(MoverType p_213315_1_, Vec3d p_213315_2_) {
+      SpigotTimings.entityMoveTimer.startTiming(); // Spigot
       if (this.field_70145_X) {
          this.func_174826_a(this.func_174813_aQ().func_191194_a(p_213315_2_));
          this.func_174829_m();
@@ -509,6 +667,26 @@
             block.func_176216_a(this.field_70170_p, this);
          }
 
+         // CraftBukkit start
+         if (field_70123_F && getBukkitEntity() instanceof Vehicle) {
+            Vehicle vehicle = (Vehicle) this.getBukkitEntity();
+            org.bukkit.block.Block bl = this.field_70170_p.getWorldCB().getBlockAt(MathHelper.func_76128_c(this.field_70165_t), MathHelper.func_76128_c(this.field_70163_u), MathHelper.func_76128_c(this.field_70161_v));
+            if (vec3d.field_72450_a > vec3d1.field_72450_a) {
+               bl = bl.getRelative(BlockFace.EAST);
+            } else if (vec3d.field_72450_a < vec3d1.field_72450_a) {
+               bl = bl.getRelative(BlockFace.WEST);
+            } else if (vec3d.field_72449_c > vec3d1.field_72449_c) {
+               bl = bl.getRelative(BlockFace.SOUTH);
+            } else if (vec3d.field_72449_c < vec3d1.field_72449_c) {
+               bl = bl.getRelative(BlockFace.NORTH);
+            }
+            if (!bl.getType().isAir()) {
+               VehicleBlockCollisionEvent event = new VehicleBlockCollisionEvent(vehicle, bl);
+               field_70170_p.getServerCB().getPluginManager().callEvent(event);
+            }
+         }
+         // CraftBukkit end
+
          if (this.field_70122_E && !this.func_226271_bk_()) {
             block.func_176199_a(this.field_70170_p, blockpos, this);
          }
@@ -523,7 +701,7 @@
 
             this.field_70140_Q = (float)((double)this.field_70140_Q + (double)MathHelper.func_76133_a(func_213296_b(vec3d)) * 0.6D);
             this.field_82151_R = (float)((double)this.field_82151_R + (double)MathHelper.func_76133_a(d0 * d0 + d1 * d1 + d2 * d2) * 0.6D);
-            if (this.field_82151_R > this.field_70150_b && !blockstate.func_196958_f()) {
+            if (this.field_82151_R > this.field_70150_b && !blockstate.isAir(this.field_70170_p, blockpos)) {
                this.field_70150_b = this.func_203009_ad();
                if (this.func_70090_H()) {
                   Entity entity = this.func_184207_aI() && this.func_184179_bs() != null ? this.func_184179_bs() : this;
@@ -538,7 +716,7 @@
                } else {
                   this.func_180429_a(blockpos, blockstate);
                }
-            } else if (this.field_82151_R > this.field_191959_ay && this.func_191957_ae() && blockstate.func_196958_f()) {
+            } else if (this.field_82151_R > this.field_191959_ay && this.func_191957_ae() && blockstate.isAir(this.field_70170_p, blockpos)) {
                this.field_191959_ay = this.func_191954_d(this.field_82151_R);
             }
          }
@@ -559,11 +737,17 @@
             if (!flag) {
                ++this.field_190534_ay;
                if (this.field_190534_ay == 0) {
-                  this.func_70015_d(8);
+                  // CraftBukkit start
+                  EntityCombustEvent event = new org.bukkit.event.entity.EntityCombustByBlockEvent(null, getBukkitEntity(), 8);
+                  field_70170_p.getServerCB().getPluginManager().callEvent(event);
+                  if (!event.isCancelled()) {
+                     this.setOnFire(event.getDuration(), false);
+                  }
+                  // CraftBukkit end
                }
             }
 
-            this.func_70081_e(1);
+            this.dealFireDamage(1);
          } else if (this.field_190534_ay <= 0) {
             this.field_190534_ay = -this.func_190531_bD();
          }
@@ -575,6 +759,7 @@
 
          this.field_70170_p.func_217381_Z().func_76319_b();
       }
+      SpigotTimings.entityMoveTimer.stopTiming(); // Spigot
    }
 
    protected BlockPos func_226268_ag_() {
@@ -582,11 +767,10 @@
       int j = MathHelper.func_76128_c(this.field_70163_u - (double)0.2F);
       int k = MathHelper.func_76128_c(this.field_70161_v);
       BlockPos blockpos = new BlockPos(i, j, k);
-      if (this.field_70170_p.func_180495_p(blockpos).func_196958_f()) {
+      if (this.field_70170_p.func_175623_d(blockpos)) {
          BlockPos blockpos1 = blockpos.func_177977_b();
          BlockState blockstate = this.field_70170_p.func_180495_p(blockpos1);
-         Block block = blockstate.func_177230_c();
-         if (block.func_203417_a(BlockTags.field_219748_G) || block.func_203417_a(BlockTags.field_219757_z) || block instanceof FenceGateBlock) {
+         if (blockstate.collisionExtendsVertically(this.field_70170_p, blockpos1, this)) {
             return blockpos1;
          }
       }
@@ -770,6 +954,8 @@
    public void func_174829_m() {
       AxisAlignedBB axisalignedbb = this.func_174813_aQ();
       this.func_226288_n_((axisalignedbb.field_72340_a + axisalignedbb.field_72336_d) / 2.0D, axisalignedbb.field_72338_b, (axisalignedbb.field_72339_c + axisalignedbb.field_72334_f) / 2.0D);
+      if (this.isAddedToWorld() && !this.field_70170_p.field_72995_K && field_70170_p instanceof ServerWorld)
+         if (valid) ((ServerWorld)this.field_70170_p).func_217464_b(this); // Forge - Process chunk registration after moving. - // CraftBukkit
    }
 
    protected SoundEvent func_184184_Z() {
@@ -822,7 +1008,7 @@
    protected void func_180429_a(BlockPos p_180429_1_, BlockState p_180429_2_) {
       if (!p_180429_2_.func_185904_a().func_76224_d()) {
          BlockState blockstate = this.field_70170_p.func_180495_p(p_180429_1_.func_177984_a());
-         SoundType soundtype = blockstate.func_177230_c() == Blocks.field_150433_aE ? blockstate.func_215695_r() : p_180429_2_.func_215695_r();
+         SoundType soundtype = blockstate.func_177230_c() == Blocks.field_150433_aE ? blockstate.getSoundType(field_70170_p, p_180429_1_, this) : p_180429_2_.getSoundType(field_70170_p, p_180429_1_, this);
          this.func_184185_a(soundtype.func_185844_d(), soundtype.func_185843_a() * 0.15F, soundtype.func_185847_b());
       }
    }
@@ -884,9 +1070,9 @@
       return null;
    }
 
-   protected void func_70081_e(int p_70081_1_) {
+   protected void dealFireDamage(float amount) { // CraftBukkit - int -> float
       if (!this.func_70045_F()) {
-         this.func_70097_a(DamageSource.field_76372_a, (float)p_70081_1_);
+         this.func_70097_a(DamageSource.field_76372_a, (float)amount);
       }
 
    }
@@ -1019,9 +1205,10 @@
       int k = MathHelper.func_76128_c(this.func_226281_cx_());
       BlockPos blockpos = new BlockPos(i, j, k);
       BlockState blockstate = this.field_70170_p.func_180495_p(blockpos);
+      if (!blockstate.addRunningEffects(field_70170_p, blockpos, this))
       if (blockstate.func_185901_i() != BlockRenderType.INVISIBLE) {
          Vec3d vec3d = this.func_213322_ci();
-         this.field_70170_p.func_195594_a(new BlockParticleData(ParticleTypes.field_197611_d, blockstate), this.func_226277_ct_() + ((double)this.field_70146_Z.nextFloat() - 0.5D) * (double)this.field_213325_aI.field_220315_a, this.func_226278_cu_() + 0.1D, this.func_226281_cx_() + ((double)this.field_70146_Z.nextFloat() - 0.5D) * (double)this.field_213325_aI.field_220315_a, vec3d.field_72450_a * -4.0D, 1.5D, vec3d.field_72449_c * -4.0D);
+         this.field_70170_p.func_195594_a(new BlockParticleData(ParticleTypes.field_197611_d, blockstate).setPos(blockpos), this.func_226277_ct_() + ((double)this.field_70146_Z.nextFloat() - 0.5D) * (double)this.field_213325_aI.field_220315_a, this.func_226278_cu_() + 0.1D, this.func_226281_cx_() + ((double)this.field_70146_Z.nextFloat() - 0.5D) * (double)this.field_213325_aI.field_220315_a, vec3d.field_72450_a * -4.0D, 1.5D, vec3d.field_72449_c * -4.0D);
       }
 
    }
@@ -1040,7 +1227,7 @@
             return false;
          } else {
             IFluidState ifluidstate = this.field_70170_p.func_204610_c(blockpos);
-            return ifluidstate.func_206884_a(p_213290_1_) && d0 < (double)((float)blockpos.func_177956_o() + ifluidstate.func_215679_a(this.field_70170_p, blockpos) + 0.11111111F);
+            return ifluidstate.isEntityInside(field_70170_p, blockpos, this, d0, p_213290_1_, true);
          }
       }
    }
@@ -1081,6 +1268,13 @@
    }
 
    public void func_70029_a(World p_70029_1_) {
+      // CraftBukkit start
+      if (field_70170_p == null) {
+         func_70106_y();
+         this.field_70170_p = ((CraftWorld) Bukkit.getServer().getWorlds().get(0)).getHandle();
+         return;
+      }
+      // CraftBukkit end
       this.field_70170_p = p_70029_1_;
    }
 
@@ -1095,6 +1289,7 @@
       this.field_70125_A = MathHelper.func_76131_a(p_70080_8_, -90.0F, 90.0F) % 360.0F;
       this.field_70126_B = this.field_70177_z;
       this.field_70127_C = this.field_70125_A;
+      field_70170_p.getWorldCB().getChunkAt((int) Math.floor(this.field_70165_t) >> 4, (int) Math.floor(this.field_70161_v) >> 4); // CraftBukkit
    }
 
    public void func_174828_a(BlockPos p_174828_1_, float p_174828_2_, float p_174828_3_) {
@@ -1283,7 +1478,7 @@
 
    public boolean func_184198_c(CompoundNBT p_184198_1_) {
       String s = this.func_70022_Q();
-      if (!this.field_70128_L && s != null) {
+      if (this.persist && !this.field_70128_L && s != null) { // CraftBukkit - persist flag
          p_184198_1_.func_74778_a("id", s);
          this.func_189511_e(p_184198_1_);
          return true;
@@ -1301,15 +1496,33 @@
          p_189511_1_.func_218657_a("Pos", this.func_70087_a(this.func_226277_ct_(), this.func_226278_cu_(), this.func_226281_cx_()));
          Vec3d vec3d = this.func_213322_ci();
          p_189511_1_.func_218657_a("Motion", this.func_70087_a(vec3d.field_72450_a, vec3d.field_72448_b, vec3d.field_72449_c));
+
+         // CraftBukkit start - Checking for NaN pitch/yaw and resetting to zero
+         // TODO: make sure this is the best way to address this.
+         if (Float.isNaN(this.field_70177_z)) {
+            this.field_70177_z = 0;
+         }
+         if (Float.isNaN(this.field_70125_A)) {
+            this.field_70125_A = 0;
+         }
+         // CraftBukkit end
+
          p_189511_1_.func_218657_a("Rotation", this.func_70049_a(this.field_70177_z, this.field_70125_A));
          p_189511_1_.func_74776_a("FallDistance", this.field_70143_R);
          p_189511_1_.func_74777_a("Fire", (short)this.field_190534_ay);
          p_189511_1_.func_74777_a("Air", (short)this.func_70086_ai());
          p_189511_1_.func_74757_a("OnGround", this.field_70122_E);
-         p_189511_1_.func_74768_a("Dimension", this.field_71093_bK.func_186068_a());
+         p_189511_1_.func_74768_a("Dimension", this.field_71093_bK.getType().func_186068_a()); // CraftBukkit - preserve Vanilla compat
          p_189511_1_.func_74757_a("Invulnerable", this.field_83001_bt);
          p_189511_1_.func_74768_a("PortalCooldown", this.field_71088_bW);
          p_189511_1_.func_186854_a("UUID", this.func_110124_au());
+         // CraftBukkit start
+         // PAIL: Check above UUID reads 1.8 properly, ie: UUIDMost / UUIDLeast
+         p_189511_1_.func_74772_a("WorldUUIDLeast", ((ServerWorld) this.field_70170_p).func_217485_w().getUUID().getLeastSignificantBits());
+         p_189511_1_.func_74772_a("WorldUUIDMost", ((ServerWorld) this.field_70170_p).func_217485_w().getUUID().getMostSignificantBits());
+         p_189511_1_.func_74768_a("Bukkit.updateLevel", CURRENT_LEVEL);
+         p_189511_1_.func_74768_a("Spigot.ticksLived", this.field_70173_aa);
+         // CraftBukkit end
          ITextComponent itextcomponent = this.func_200201_e();
          if (itextcomponent != null) {
             p_189511_1_.func_74778_a("CustomName", ITextComponent.Serializer.func_150696_a(itextcomponent));
@@ -1330,6 +1543,7 @@
          if (this.field_184238_ar) {
             p_189511_1_.func_74757_a("Glowing", this.field_184238_ar);
          }
+         p_189511_1_.func_74757_a("CanUpdate", canUpdate);
 
          if (!this.field_184236_aF.isEmpty()) {
             ListNBT listnbt = new ListNBT();
@@ -1341,6 +1555,10 @@
             p_189511_1_.func_218657_a("Tags", listnbt);
          }
 
+         CompoundNBT caps = serializeCaps();
+         if (caps != null) p_189511_1_.func_218657_a("ForgeCaps", caps);
+         if (persistentData != null) p_189511_1_.func_218657_a("ForgeData", persistentData);
+
          this.func_213281_b(p_189511_1_);
          if (this.func_184207_aI()) {
             ListNBT listnbt1 = new ListNBT();
@@ -1357,6 +1575,12 @@
             }
          }
 
+         // CraftBukkit start - stores eventually existing bukkit values
+         if (this.bukkitEntity != null) {
+            this.bukkitEntity.storeBukkitValues(p_189511_1_);
+         }
+         // CraftBukkit end
+
          return p_189511_1_;
       } catch (Throwable throwable) {
          CrashReport crashreport = CrashReport.func_85055_a(throwable, "Saving entity NBT");
@@ -1387,7 +1611,7 @@
          this.func_70050_g(p_70020_1_.func_74765_d("Air"));
          this.field_70122_E = p_70020_1_.func_74767_n("OnGround");
          if (p_70020_1_.func_74764_b("Dimension")) {
-            this.field_71093_bK = DimensionType.func_186069_a(p_70020_1_.func_74762_e("Dimension"));
+//            this.dimension = DimensionType.getById(compound.getInt("Dimension"));  // CraftBukkit - redundant
          }
 
          this.field_83001_bt = p_70020_1_.func_74767_n("Invulnerable");
@@ -1409,6 +1633,9 @@
                this.func_174810_b(p_70020_1_.func_74767_n("Silent"));
                this.func_189654_d(p_70020_1_.func_74767_n("NoGravity"));
                this.func_184195_f(p_70020_1_.func_74767_n("Glowing"));
+               if (p_70020_1_.func_150297_b("ForgeData", 10)) persistentData = p_70020_1_.func_74775_l("ForgeData");
+               if (p_70020_1_.func_150297_b("CanUpdate", 99)) this.canUpdate(p_70020_1_.func_74767_n("CanUpdate"));
+               if (p_70020_1_.func_150297_b("ForgeCaps", 10)) deserializeCaps(p_70020_1_.func_74775_l("ForgeCaps"));
                if (p_70020_1_.func_150297_b("Tags", 9)) {
                   this.field_184236_aF.clear();
                   ListNBT listnbt1 = p_70020_1_.func_150295_c("Tags", 8);
@@ -1430,6 +1657,39 @@
          } else {
             throw new IllegalStateException("Entity has invalid position");
          }
+
+         this.field_70173_aa = p_70020_1_.func_74762_e("Spigot.ticksLived");
+
+         // CraftBukkit start
+         if (this instanceof LivingEntity) {
+            LivingEntity entity = (LivingEntity) this;
+            // Reset the persistence for tamed animals
+            if (entity instanceof TameableEntity && !isLevelAtLeast(p_70020_1_, 2) && !p_70020_1_.func_74767_n("PersistenceRequired")) {
+               MobEntity entityinsentient = (MobEntity) entity;
+               entityinsentient.field_82179_bU = !entityinsentient.func_213397_c(0);
+            }
+         }
+         // CraftBukkit end
+         // CraftBukkit start - Reset world
+         if (this instanceof ServerPlayerEntity) {
+            Server server = Bukkit.getServer();
+            org.bukkit.World bworld = null;
+            // TODO: Remove World related checks, replaced with WorldUID
+            String worldName = p_70020_1_.func_74779_i("world");
+            if (p_70020_1_.func_74764_b("WorldUUIDMost") && p_70020_1_.func_74764_b("WorldUUIDLeast")) {
+               UUID uid = new UUID(p_70020_1_.func_74763_f("WorldUUIDMost"), p_70020_1_.func_74763_f("WorldUUIDLeast"));
+               bworld = server.getWorld(uid);
+            } else {
+               bworld = server.getWorld(worldName);
+            }
+            if (bworld == null) {
+               bworld = ((CraftServer) server).getServer().func_71218_a(DimensionType.field_223227_a_).getWorldCB();
+            }
+            func_70029_a(bworld == null ? null : ((CraftWorld) bworld).getHandle());
+         }
+         this.getBukkitEntity().readBukkitValues(p_70020_1_);
+         // CraftBukkit end
+
       } catch (Throwable throwable) {
          CrashReport crashreport = CrashReport.func_85055_a(throwable, "Loading entity NBT");
          CrashReportCategory crashreportcategory = crashreport.func_85058_a("Entity being loaded");
@@ -1495,8 +1755,23 @@
       } else if (this.field_70170_p.field_72995_K) {
          return null;
       } else {
+         // CraftBukkit start - Capture drops for death event
+         if (this instanceof LivingEntity && !((LivingEntity) this).forceDrops) {
+            ((LivingEntity) this).drops.add(org.bukkit.craftbukkit.v1_15_R1.inventory.CraftItemStack.asBukkitCopy(p_70099_1_));
+            return null;
+         }
+         // CraftBukkit end
          ItemEntity itementity = new ItemEntity(this.field_70170_p, this.func_226277_ct_(), this.func_226278_cu_() + (double)p_70099_2_, this.func_226281_cx_(), p_70099_1_);
          itementity.func_174869_p();
+         // CraftBukkit start
+         EntityDropItemEvent event = new EntityDropItemEvent(this.getBukkitEntity(), (org.bukkit.entity.Item) itementity.getBukkitEntity());
+         Bukkit.getPluginManager().callEvent(event);
+         if (event.isCancelled()) {
+            return null;
+         }
+         // CraftBukkit end
+         if (captureDrops() != null) captureDrops().add(itementity);
+         else
          this.field_70170_p.func_217376_c(itementity);
          return itementity;
       }
@@ -1540,6 +1815,7 @@
 
    public void func_70098_U() {
       this.func_213317_d(Vec3d.field_186680_a);
+      if (canUpdate())
       this.func_70071_h_();
       if (this.func_184218_aH()) {
          this.func_184187_bx().func_184232_k(this);
@@ -1584,13 +1860,14 @@
          }
       }
 
+      if (!net.minecraftforge.event.ForgeEventFactory.canMountEntity(this, p_184205_1_, true)) return false;
       if (p_184205_2_ || this.func_184228_n(p_184205_1_) && p_184205_1_.func_184219_q(this)) {
          if (this.func_184218_aH()) {
             this.func_184210_p();
          }
 
          this.field_184239_as = p_184205_1_;
-         this.field_184239_as.func_184200_o(this);
+         if(!this.field_184239_as.addPassenger(this)) this.field_184239_as = null; // CraftBukkit
          return true;
       } else {
          return false;
@@ -1615,32 +1892,82 @@
    public void func_184210_p() {
       if (this.field_184239_as != null) {
          Entity entity = this.field_184239_as;
+         if (!net.minecraftforge.event.ForgeEventFactory.canMountEntity(this, entity, false)) return;
          this.field_184239_as = null;
-         entity.func_184225_p(this);
+         if(!entity.removePassenger(this)) this.field_184239_as = entity; // CraftBukkit
       }
 
    }
 
-   protected void func_184200_o(Entity p_184200_1_) {
-      if (p_184200_1_.func_184187_bx() != this) {
+   protected boolean addPassenger(Entity passenger) { // CraftBukkit
+      if (passenger.func_184187_bx() != this) {
          throw new IllegalStateException("Use x.startRiding(y), not y.addPassenger(x)");
       } else {
-         if (!this.field_70170_p.field_72995_K && p_184200_1_ instanceof PlayerEntity && !(this.func_184179_bs() instanceof PlayerEntity)) {
-            this.field_184244_h.add(0, p_184200_1_);
+         // CraftBukkit start
+         com.google.common.base.Preconditions.checkState(!passenger.field_184244_h.contains(this), "Circular entity riding! %s %s", this, passenger);
+         CraftEntity craft = (CraftEntity) passenger.getBukkitEntity().getVehicle();
+         Entity orig = craft == null ? null : craft.getHandle();
+         if (getBukkitEntity() instanceof Vehicle && passenger.getBukkitEntity() instanceof org.bukkit.entity.LivingEntity) {
+            VehicleEnterEvent event = new VehicleEnterEvent((Vehicle) getBukkitEntity(), passenger.getBukkitEntity());
+            // Suppress during worldgen
+            if (this.valid) {
+               Bukkit.getPluginManager().callEvent(event);
+            }
+            CraftEntity craftn = (CraftEntity) passenger.getBukkitEntity().getVehicle();
+            Entity n = craftn == null ? null : craftn.getHandle();
+            if (event.isCancelled() || n != orig) {
+               return false;
+            }
+         }
+         // CraftBukkit end
+         // Spigot start
+         org.spigotmc.event.entity.EntityMountEvent event = new org.spigotmc.event.entity.EntityMountEvent(passenger.getBukkitEntity(), this.getBukkitEntity());
+         // Suppress during worldgen
+         if (this.valid) {
+            Bukkit.getPluginManager().callEvent(event);
+         }
+         if (event.isCancelled()) {
+            return false;
+         }
+         // Spigot end
+         if (!this.field_70170_p.field_72995_K && passenger instanceof PlayerEntity && !(this.func_184179_bs() instanceof PlayerEntity)) {
+            this.field_184244_h.add(0, passenger);
          } else {
-            this.field_184244_h.add(p_184200_1_);
+            this.field_184244_h.add(passenger);
          }
 
       }
+      return true; // CraftBukkit
    }
 
-   protected void func_184225_p(Entity p_184225_1_) {
-      if (p_184225_1_.func_184187_bx() == this) {
+   protected boolean removePassenger(Entity passenger) { // CraftBukkit
+      if (passenger.func_184187_bx() == this) {
          throw new IllegalStateException("Use x.stopRiding(y), not y.removePassenger(x)");
       } else {
-         this.field_184244_h.remove(p_184225_1_);
-         p_184225_1_.field_184245_j = 60;
+         // CraftBukkit start
+         CraftEntity craft = (CraftEntity) passenger.getBukkitEntity().getVehicle();
+         Entity orig = craft == null ? null : craft.getHandle();
+         if (getBukkitEntity() instanceof Vehicle && passenger.getBukkitEntity() instanceof org.bukkit.entity.LivingEntity) {
+            VehicleExitEvent event = new VehicleExitEvent((Vehicle) getBukkitEntity(), (org.bukkit.entity.LivingEntity) passenger.getBukkitEntity());
+            Bukkit.getPluginManager().callEvent(event);
+            CraftEntity craftn = (CraftEntity) passenger.getBukkitEntity().getVehicle();
+            Entity n = craftn == null ? null : craftn.getHandle();
+            if (event.isCancelled() || n != orig) {
+               return false;
+            }
+         }
+         // CraftBukkit end
+         // Spigot start
+         org.spigotmc.event.entity.EntityDismountEvent event = new org.spigotmc.event.entity.EntityDismountEvent(passenger.getBukkitEntity(), this.getBukkitEntity());
+         Bukkit.getPluginManager().callEvent(event);
+         if (event.isCancelled()) {
+            return false;
+         }
+         // Spigot end
+         this.field_184244_h.remove(passenger);
+         passenger.field_184245_j = 60;
       }
+      return true; // CraftBukkit
    }
 
    protected boolean func_184219_q(Entity p_184219_1_) {
@@ -1698,11 +2025,19 @@
       if (this.field_70170_p instanceof ServerWorld) {
          int i = this.func_82145_z();
          if (this.field_71087_bX) {
-            if (this.field_70170_p.func_73046_m().func_71255_r() && !this.func_184218_aH() && this.field_82153_h++ >= i) {
+            if (true || (this.field_70170_p.func_73046_m().func_71255_r()) && !this.func_184218_aH() && this.field_82153_h++ >= i) { // CraftBukkit
                this.field_70170_p.func_217381_Z().func_76320_a("portal");
                this.field_82153_h = i;
                this.field_71088_bW = this.func_82147_ab();
-               this.func_212321_a(this.field_70170_p.field_73011_w.func_186058_p() == DimensionType.field_223228_b_ ? DimensionType.field_223227_a_ : DimensionType.field_223228_b_);
+               // CraftBukkit start
+               if (this instanceof ServerPlayerEntity) {
+                  ((ServerPlayerEntity) this).changeDimension(this.field_70170_p.field_73011_w.func_186058_p() == DimensionType.field_223228_b_ ? DimensionType.field_223227_a_ : DimensionType.field_223228_b_,
+                      func_184102_h().func_71218_a(this.field_70170_p.field_73011_w.func_186058_p() == DimensionType.field_223228_b_ ? DimensionType.field_223227_a_ : DimensionType.field_223228_b_).func_85176_s(),
+                      PlayerTeleportEvent.TeleportCause.NETHER_PORTAL);
+               } else {
+                  this.func_212321_a(this.field_70170_p.field_73011_w.func_186058_p() == DimensionType.field_223228_b_ ? DimensionType.field_223227_a_ : DimensionType.field_223228_b_);
+               }
+               // CraftBukkit end
                this.field_70170_p.func_217381_Z().func_76319_b();
             }
 
@@ -1771,6 +2106,7 @@
       return !this.func_184188_bt().isEmpty();
    }
 
+   @Deprecated //Forge: Use rider sensitive version
    public boolean func_205710_ba() {
       return true;
    }
@@ -1825,6 +2161,13 @@
    }
 
    public void func_204711_a(boolean p_204711_1_) {
+      // CraftBukkit start
+      if (this.func_203007_ba() != p_204711_1_ && this instanceof LivingEntity) {
+         if (CraftEventFactory.callToggleSwimEvent((LivingEntity) this, p_204711_1_).isCancelled()) {
+            return;
+         }
+      }
+      // CraftBukkit end
       this.func_70052_a(4, p_204711_1_);
    }
 
@@ -1871,11 +2214,11 @@
       this.func_70052_a(5, p_82142_1_);
    }
 
-   protected boolean func_70083_f(int p_70083_1_) {
+   public boolean func_70083_f(int p_70083_1_) {
       return (this.field_70180_af.func_187225_a(field_184240_ax) & 1 << p_70083_1_) != 0;
    }
 
-   protected void func_70052_a(int p_70052_1_, boolean p_70052_2_) {
+   public void func_70052_a(int p_70052_1_, boolean p_70052_2_) {
       byte b0 = this.field_70180_af.func_187225_a(field_184240_ax);
       if (p_70052_2_) {
          this.field_70180_af.func_187227_b(field_184240_ax, (byte)(b0 | 1 << p_70052_1_));
@@ -1894,16 +2237,55 @@
    }
 
    public void func_70050_g(int p_70050_1_) {
-      this.field_70180_af.func_187227_b(field_184241_ay, p_70050_1_);
+      // CraftBukkit start
+      EntityAirChangeEvent event = new EntityAirChangeEvent(this.getBukkitEntity(), p_70050_1_);
+      // Suppress during worldgen
+      if (this.valid) {
+         event.getEntity().getServer().getPluginManager().callEvent(event);
+      }
+      if (event.isCancelled()) {
+         return;
+      }
+      this.field_70180_af.func_187227_b(Entity.field_184241_ay, event.getAmount());
+      // CraftBukkit end
    }
 
    public void func_70077_a(LightningBoltEntity p_70077_1_) {
       ++this.field_190534_ay;
+      // CraftBukkit start
+      final org.bukkit.entity.Entity thisBukkitEntity = this.getBukkitEntity();
+      final org.bukkit.entity.Entity stormBukkitEntity = p_70077_1_.getBukkitEntity();
+      final PluginManager pluginManager = Bukkit.getPluginManager();
+      // CraftBukkit end
+
       if (this.field_190534_ay == 0) {
-         this.func_70015_d(8);
+         // CraftBukkit start - Call a combust event when lightning strikes
+         EntityCombustByEntityEvent entityCombustEvent = new EntityCombustByEntityEvent(stormBukkitEntity, thisBukkitEntity, 8);
+         pluginManager.callEvent(entityCombustEvent);
+         if (!entityCombustEvent.isCancelled()) {
+            this.setOnFire(entityCombustEvent.getDuration(), false);
+         }
+         // CraftBukkit end
       }
 
       this.func_70097_a(DamageSource.field_180137_b, 5.0F);
+      // CraftBukkit start
+      if (thisBukkitEntity instanceof Hanging) {
+         HangingBreakByEntityEvent hangingEvent = new HangingBreakByEntityEvent((Hanging) thisBukkitEntity, stormBukkitEntity);
+         pluginManager.callEvent(hangingEvent);
+         if (hangingEvent.isCancelled()) {
+            return;
+         }
+      }
+      if (this.func_70045_F()) {
+         return;
+      }
+      CraftEventFactory.entityDamage = p_70077_1_;
+      if (!this.func_70097_a(DamageSource.field_180137_b, 5.0F)) {
+         CraftEventFactory.entityDamage = null;
+         return;
+      }
+      // CraftBukkit end
    }
 
    public void func_203002_i(boolean p_203002_1_) {
@@ -1989,7 +2371,7 @@
    }
 
    protected ITextComponent func_225513_by_() {
-      return this.field_200606_g.func_212546_e();
+      return this.func_200600_R().func_212546_e(); // Forge: Use getter to allow overriding by mods
    }
 
    public boolean func_70028_i(Entity p_70028_1_) {
@@ -2046,43 +2428,89 @@
 
    @Nullable
    public Entity func_212321_a(DimensionType p_212321_1_) {
+      // CraftBukkit start
+      return this.changeDimension(p_212321_1_, func_184102_h().func_71218_a(p_212321_1_).func_85176_s(), null);
+   }
+
+   @Nullable
+   public Entity changeDimension(DimensionType p_212321_1_, net.minecraftforge.common.util.ITeleporter teleporter) {
+      return this.changeDimension(p_212321_1_, teleporter, null);
+   }
+
+   @Nullable
+   public Entity changeDimension(DimensionType destination, net.minecraftforge.common.util.ITeleporter teleporter, BlockPos location) {
+      // CraftBukkit end
+      if (!net.minecraftforge.common.ForgeHooks.onTravelToDimension(this, destination)) return null;
       if (!this.field_70170_p.field_72995_K && !this.field_70128_L) {
          this.field_70170_p.func_217381_Z().func_76320_a("changeDimension");
          MinecraftServer minecraftserver = this.func_184102_h();
          DimensionType dimensiontype = this.field_71093_bK;
          ServerWorld serverworld = minecraftserver.func_71218_a(dimensiontype);
-         ServerWorld serverworld1 = minecraftserver.func_71218_a(p_212321_1_);
-         this.field_71093_bK = p_212321_1_;
-         this.func_213319_R();
+         AtomicReference<ServerWorld> serverworld1 = new AtomicReference<>(minecraftserver.func_71218_a(destination));
+         // CraftBukkit start
+         if (serverworld1.get() == null) {
+            return null;
+         }
+         //this.dimension = destination;
+         //this.detach();
+         // CraftBukkit end
          this.field_70170_p.func_217381_Z().func_76320_a("reposition");
+         Entity transportedEntity = teleporter.placeEntity(this, serverworld, serverworld1.get(), this.field_70177_z, spawnPortal -> { //Forge: Start vanilla logic
          Vec3d vec3d = this.func_213322_ci();
          float f = 0.0F;
-         BlockPos blockpos;
-         if (dimensiontype == DimensionType.field_223229_c_ && p_212321_1_ == DimensionType.field_223227_a_) {
-            blockpos = serverworld1.func_205770_a(Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, serverworld1.func_175694_M());
-         } else if (p_212321_1_ == DimensionType.field_223229_c_) {
-            blockpos = serverworld1.func_180504_m();
+            BlockPos blockpos = location; // CraftBukkit
+            if (blockpos == null) { // CraftBukkit
+               if (dimensiontype.getType() == DimensionType.field_223229_c_ && dimensiontype == DimensionType.field_223227_a_) { // CraftBukkit
+                  // CraftBukkit start
+                  EntityPortalEvent event = CraftEventFactory.callEntityPortalEvent(this, serverworld1.get(), serverworld1.get().func_205770_a(Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, serverworld1.get().func_180504_m()), 0);
+                  if (event == null) {
+                     return null;
+                  }
+                  serverworld1.set(((CraftWorld) event.getTo().getWorld()).getHandle());
+                  blockpos = new BlockPos(event.getTo().getX(), event.getTo().getY(), event.getTo().getZ());
+                  // CraftBukkit end
+               } else if (dimensiontype.getType() == DimensionType.field_223229_c_) { // CraftBukkit
+                  // CraftBukkit start
+                  EntityPortalEvent event = CraftEventFactory.callEntityPortalEvent(this, serverworld1.get(), serverworld1.get().func_180504_m() != null ? serverworld1.get().func_180504_m() : serverworld1.get().func_175694_M(), 0);
+                  if (event == null) {
+                     return null;
+                  }
+                  serverworld1.set(((CraftWorld) event.getTo().getWorld()).getHandle());
+                  blockpos = new BlockPos(event.getTo().getX(), event.getTo().getY(), event.getTo().getZ());
+                  // CraftBukkit end
+               }
          } else {
-            double d0 = this.func_226277_ct_();
-            double d1 = this.func_226281_cx_();
-            double d2 = 8.0D;
-            if (dimensiontype == DimensionType.field_223227_a_ && p_212321_1_ == DimensionType.field_223228_b_) {
-               d0 /= 8.0D;
-               d1 /= 8.0D;
-            } else if (dimensiontype == DimensionType.field_223228_b_ && p_212321_1_ == DimensionType.field_223227_a_) {
-               d0 *= 8.0D;
-               d1 *= 8.0D;
-            }
+               double d0 = this.func_226277_ct_();
+               double d1 = this.func_226281_cx_();
+               if (dimensiontype.getType() == DimensionType.field_223227_a_ && dimensiontype.getType() == DimensionType.field_223228_b_) { // CraftBukkit
+                  d0 /= 8.0;
+                  d1 /= 8.0;
+               } else if (dimensiontype.getType() == DimensionType.field_223228_b_ && dimensiontype.getType() == DimensionType.field_223227_a_) {
+                  d0 *= 8.0;
+                  d1 *= 8.0;
+               }
 
-            double d3 = Math.min(-2.9999872E7D, serverworld1.func_175723_af().func_177726_b() + 16.0D);
-            double d4 = Math.min(-2.9999872E7D, serverworld1.func_175723_af().func_177736_c() + 16.0D);
-            double d5 = Math.min(2.9999872E7D, serverworld1.func_175723_af().func_177728_d() - 16.0D);
-            double d6 = Math.min(2.9999872E7D, serverworld1.func_175723_af().func_177733_e() - 16.0D);
+               // Spigot start - SPIGOT-5677, MC-114796: Fix portals generating outside world border
+               double d3 = Math.max(-2.9999872E7D, serverworld1.get().func_175723_af().func_177726_b() + 16.0D);
+               double d4 = Math.max(-2.9999872E7D, serverworld1.get().func_175723_af().func_177736_c() + 16.0D);
+               // Spigot end
+               double d5 = Math.min(2.9999872E7D, serverworld1.get().func_175723_af().func_177728_d() - 16.0D);
+               double d6 = Math.min(2.9999872E7D, serverworld1.get().func_175723_af().func_177733_e() - 16.0D);
             d0 = MathHelper.func_151237_a(d0, d3, d5);
             d1 = MathHelper.func_151237_a(d1, d4, d6);
             Vec3d vec3d1 = this.func_181014_aG();
             blockpos = new BlockPos(d0, this.func_226278_cu_(), d1);
-            BlockPattern.PortalInfo blockpattern$portalinfo = serverworld1.func_85176_s().func_222272_a(blockpos, vec3d, this.func_181012_aH(), vec3d1.field_72450_a, vec3d1.field_72448_b, this instanceof PlayerEntity);
+               // CraftBukkit start
+               EntityPortalEvent event = CraftEventFactory.callEntityPortalEvent(this, serverworld1.get(), blockpos, 128);
+               if (event == null) {
+                  return null;
+               }
+               serverworld1.set(((CraftWorld) event.getTo().getWorld()).getHandle());
+               blockpos = new BlockPos(event.getTo().getX(), event.getTo().getY(), event.getTo().getZ());
+               int searchRadius = event.getSearchRadius();
+               // CraftBukkit end
+            if (spawnPortal) {
+                  BlockPattern.PortalInfo blockpattern$portalinfo = serverworld1.get().func_85176_s().placeInExistingPortal(blockpos, vec3d, this.func_181012_aH(), vec3d1.field_72450_a, vec3d1.field_72448_b, this instanceof PlayerEntity, searchRadius); // CraftBukkit - search radius
             if (blockpattern$portalinfo == null) {
                return null;
             }
@@ -2090,23 +2518,45 @@
             blockpos = new BlockPos(blockpattern$portalinfo.field_222505_a);
             vec3d = blockpattern$portalinfo.field_222506_b;
             f = (float)blockpattern$portalinfo.field_222507_c;
+            }
          }
+         // CraftBukkit
+         this.field_71093_bK = dimensiontype;
+         this.func_213319_R();
+         // CraftBukkit end
+         // CraftBukkit
+         this.field_71093_bK = dimensiontype;
+         this.func_213319_R();
+         // CraftBukkit end
+         // CraftBukkit
+         this.field_71093_bK = dimensiontype;
+         this.func_213319_R();
+         // CraftBukkit end
 
          this.field_70170_p.func_217381_Z().func_219895_b("reloading");
-         Entity entity = this.func_200600_R().func_200721_a(serverworld1);
+         Entity entity = this.func_200600_R().func_200721_a(serverworld1.get());
          if (entity != null) {
             entity.func_180432_n(this);
             entity.func_174828_a(blockpos, entity.field_70177_z + f, entity.field_70125_A);
             entity.func_213317_d(vec3d);
-            serverworld1.func_217460_e(entity);
+            serverworld1.get().func_217460_e(entity);
+            // CraftBukkit start - Forward the CraftEntity to the new entity
+            this.getBukkitEntity().setHandle(entity);
+            entity.bukkitEntity = this.getBukkitEntity();
+            if (this instanceof MobEntity) {
+               ((MobEntity) this).func_110160_i(true, false); // Unleash to prevent duping of leads.
+               // CraftBukkit end
+            }
          }
+            return entity;
+         });//Forge: End vanilla logic
 
-         this.field_70128_L = true;
+         this.remove(false);
          this.field_70170_p.func_217381_Z().func_76319_b();
          serverworld.func_82742_i();
-         serverworld1.func_82742_i();
+         serverworld1.get().func_82742_i();
          this.field_70170_p.func_217381_Z().func_76319_b();
-         return entity;
+         return transportedEntity;
       } else {
          return null;
       }
@@ -2129,10 +2579,12 @@
    }
 
    public Vec3d func_181014_aG() {
+      if (this.field_181017_ao == null) return Vec3d.field_186680_a;
       return this.field_181017_ao;
    }
 
    public Direction func_181012_aH() {
+      if (this.field_181018_ap == null) return Direction.NORTH;
       return this.field_181018_ap;
    }
 
@@ -2261,7 +2713,7 @@
       Pose pose = this.func_213283_Z();
       EntitySize entitysize1 = this.func_213305_a(pose);
       this.field_213325_aI = entitysize1;
-      this.field_213326_aJ = this.func_213316_a(pose, entitysize1);
+      this.field_213326_aJ = getEyeHeightForge(pose, entitysize1);
       if (entitysize1.field_220315_a < entitysize.field_220315_a) {
          double d0 = (double)entitysize1.field_220315_a / 2.0D;
          this.func_174826_a(new AxisAlignedBB(this.func_226277_ct_() - d0, this.func_226278_cu_(), this.func_226281_cx_() - d0, this.func_226277_ct_() + d0, this.func_226278_cu_() + (double)entitysize1.field_220316_b, this.func_226281_cx_() + d0));
@@ -2318,7 +2770,36 @@
    }
 
    public void func_174826_a(AxisAlignedBB p_174826_1_) {
-      this.field_70121_D = p_174826_1_;
+      // CraftBukkit start - block invalid bounding boxes
+      double minX = p_174826_1_.field_72340_a,
+          minY = p_174826_1_.field_72338_b,
+          minZ = p_174826_1_.field_72339_c,
+          maxX = p_174826_1_.field_72336_d,
+          maxY = p_174826_1_.field_72337_e,
+          maxZ = p_174826_1_.field_72334_f;
+      double len = p_174826_1_.field_72336_d - p_174826_1_.field_72340_a;
+      if (len < 0) {
+         maxX = minX;
+      }
+      if (len > 64) {
+         maxX = minX + 64.0;
+      }
+      len = p_174826_1_.field_72337_e - p_174826_1_.field_72338_b;
+      if (len < 0) {
+         maxY = minY;
+      }
+      if (len > 64) {
+         maxY = minY + 64.0;
+      }
+      len = p_174826_1_.field_72334_f - p_174826_1_.field_72339_c;
+      if (len < 0) {
+         maxZ = minZ;
+      }
+      if (len > 64) {
+         maxZ = minZ + 64.0;
+      }
+      this.field_70121_D = new AxisAlignedBB(minX, minY, minZ, maxX, maxY, maxZ);
+      // CraftBukkit end
    }
 
    protected float func_213316_a(Pose p_213316_1_, EntitySize p_213316_2_) {
@@ -2533,7 +3014,7 @@
       return SoundCategory.NEUTRAL;
    }
 
-   protected int func_190531_bD() {
+   public int func_190531_bD() {
       return 1;
    }
 
@@ -2713,6 +3194,7 @@
       this.field_70165_t = p_226288_1_;
       this.field_70163_u = p_226288_3_;
       this.field_70161_v = p_226288_5_;
+      if (this.isAddedToWorld() && !this.field_70170_p.field_72995_K && !this.field_70128_L) this.field_70170_p.func_212866_a_((int) Math.floor(this.field_70165_t) >> 4, (int) Math.floor(this.field_70161_v) >> 4); // Forge - ensure target chunk is loaded.
    }
 
    public void func_70623_bb() {
@@ -2726,4 +3208,69 @@
    public interface IMoveCallback {
       void accept(Entity p_accept_1_, double p_accept_2_, double p_accept_4_, double p_accept_6_);
    }
+
+   /* ================================== Forge Start =====================================*/
+
+   private boolean canUpdate = true;
+   @Override
+   public void canUpdate(boolean value) {
+      this.canUpdate = value;
+   }
+   @Override
+   public boolean canUpdate() {
+      return this.canUpdate;
+   }
+   private Collection<ItemEntity> captureDrops = null;
+   @Override
+   public Collection<ItemEntity> captureDrops() {
+      return captureDrops;
+   }
+   @Override
+   public Collection<ItemEntity> captureDrops(Collection<ItemEntity> value) {
+      Collection<ItemEntity> ret = captureDrops;
+      this.captureDrops = value;
+      return ret;
+   }
+   private CompoundNBT persistentData;
+   @Override
+   public CompoundNBT getPersistentData() {
+      if (persistentData == null)
+         persistentData = new CompoundNBT();
+      return persistentData;
+   }
+   @Override
+   public boolean canTrample(BlockState state, BlockPos pos, float fallDistance) {
+      return field_70170_p.field_73012_v.nextFloat() < fallDistance - 0.5F
+              && this instanceof LivingEntity
+              && (this instanceof PlayerEntity || net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(field_70170_p, this))
+              && this.func_213311_cf() * this.func_213311_cf() * this.func_213302_cg() > 0.512F;
+   }
+
+   /**
+    * Internal use for keeping track of entities that are tracked by a world, to
+    * allow guarantees that entity position changes will force a chunk load, avoiding
+    * potential issues with entity desyncing and bad chunk data.
+    */
+   private boolean isAddedToWorld;
+
+   @Override
+   public final boolean isAddedToWorld() { return this.isAddedToWorld; }
+
+   @Override
+   public void onAddedToWorld() { this.isAddedToWorld = true; }
+
+   @Override
+   public void onRemovedFromWorld() { this.isAddedToWorld = false; }
+
+   @Override
+   public void revive() {
+      this.field_70128_L = false;
+      this.reviveCaps();
+   }
+
+   private float getEyeHeightForge(Pose pose, EntitySize size) {
+      net.minecraftforge.event.entity.EntityEvent.EyeHeight evt = new net.minecraftforge.event.entity.EntityEvent.EyeHeight(this, pose, size, this.func_213316_a(pose, size));
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(evt);
+      return evt.getNewHeight();
+   }
 }
