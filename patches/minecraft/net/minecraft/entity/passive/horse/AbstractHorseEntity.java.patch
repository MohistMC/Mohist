--- a/net/minecraft/entity/passive/horse/AbstractHorseEntity.java
+++ b/net/minecraft/entity/passive/horse/AbstractHorseEntity.java
@@ -9,30 +9,11 @@
 import net.minecraft.block.Blocks;
 import net.minecraft.block.SoundType;
 import net.minecraft.enchantment.EnchantmentHelper;
-import net.minecraft.entity.AgeableEntity;
-import net.minecraft.entity.CreatureAttribute;
-import net.minecraft.entity.Entity;
-import net.minecraft.entity.EntityPredicate;
-import net.minecraft.entity.EntitySize;
-import net.minecraft.entity.EntityType;
-import net.minecraft.entity.IJumpingMount;
-import net.minecraft.entity.ILivingEntityData;
-import net.minecraft.entity.LivingEntity;
-import net.minecraft.entity.MobEntity;
-import net.minecraft.entity.Pose;
-import net.minecraft.entity.SharedMonsterAttributes;
-import net.minecraft.entity.SpawnReason;
+import net.minecraft.entity.*;
 import net.minecraft.entity.ai.attributes.IAttribute;
 import net.minecraft.entity.ai.attributes.IAttributeInstance;
 import net.minecraft.entity.ai.attributes.RangedAttribute;
-import net.minecraft.entity.ai.goal.BreedGoal;
-import net.minecraft.entity.ai.goal.FollowParentGoal;
-import net.minecraft.entity.ai.goal.LookAtGoal;
-import net.minecraft.entity.ai.goal.LookRandomlyGoal;
-import net.minecraft.entity.ai.goal.PanicGoal;
-import net.minecraft.entity.ai.goal.RunAroundLikeCrazyGoal;
-import net.minecraft.entity.ai.goal.SwimGoal;
-import net.minecraft.entity.ai.goal.WaterAvoidingRandomWalkingGoal;
+import net.minecraft.entity.ai.goal.*;
 import net.minecraft.entity.passive.AnimalEntity;
 import net.minecraft.entity.player.PlayerEntity;
 import net.minecraft.entity.player.ServerPlayerEntity;
@@ -61,13 +42,15 @@
 import net.minecraft.world.World;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
+import org.bukkit.entity.AbstractHorse;
+import org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason;
 
 public abstract class AbstractHorseEntity extends AnimalEntity implements IInventoryChangedListener, IJumpingMount {
    private static final Predicate<LivingEntity> field_110276_bu = (p_213617_0_) -> {
       return p_213617_0_ instanceof AbstractHorseEntity && ((AbstractHorseEntity)p_213617_0_).func_110205_ce();
    };
    private static final EntityPredicate field_213618_bK = (new EntityPredicate()).func_221013_a(16.0D).func_221008_a().func_221011_b().func_221014_c().func_221012_a(field_110276_bu);
-   protected static final IAttribute field_110271_bv = (new RangedAttribute((IAttribute)null, "horse.jumpStrength", 0.7D, 0.0D, 2.0D)).func_111117_a("Jump Strength").func_111112_a(true);
+   public static final IAttribute field_110271_bv = (new RangedAttribute((IAttribute)null, "horse.jumpStrength", 0.7D, 0.0D, 2.0D)).func_111117_a("Jump Strength").func_111112_a(true); // protected->public CraftBukkit
    private static final DataParameter<Byte> field_184787_bE = EntityDataManager.func_187226_a(AbstractHorseEntity.class, DataSerializers.field_187191_a);
    private static final DataParameter<Optional<UUID>> field_184790_bH = EntityDataManager.func_187226_a(AbstractHorseEntity.class, DataSerializers.field_187203_m);
    private int field_190689_bJ;
@@ -76,7 +59,7 @@
    public int field_110278_bp;
    public int field_110279_bq;
    protected boolean field_110275_br;
-   protected Inventory field_110296_bG;
+   public Inventory field_110296_bG; // protected->public CraftBukkit
    protected int field_110274_bs;
    protected float field_110277_bt;
    private boolean field_110294_bI;
@@ -88,6 +71,7 @@
    private float field_110288_bO;
    protected boolean field_190688_bE = true;
    protected int field_110285_bP;
+   public int maxDomestication = 100; // CraftBukkit - store max domestication value
 
    protected AbstractHorseEntity(EntityType<? extends AbstractHorseEntity> p_i48563_1_, World p_i48563_2_) {
       super(p_i48563_1_, p_i48563_2_);
@@ -246,9 +230,9 @@
       return 2;
    }
 
-   protected void func_110226_cD() {
+   public void func_110226_cD() { // protected->public CraftBukkit
       Inventory inventory = this.field_110296_bG;
-      this.field_110296_bG = new Inventory(this.func_190686_di());
+      this.field_110296_bG = new Inventory(this.func_190686_di(), (AbstractHorse) this.getBukkitEntity()); // CraftBukkit
       if (inventory != null) {
          inventory.func_110132_b(this);
          int i = Math.min(inventory.func_70302_i_(), this.field_110296_bG.func_70302_i_());
@@ -263,6 +247,7 @@
 
       this.field_110296_bG.func_110134_a(this);
       this.func_110232_cE();
+      this.itemHandler = net.minecraftforge.common.util.LazyOptional.of(() -> new net.minecraftforge.items.wrapper.InvWrapper(this.field_110296_bG));
    }
 
    protected void func_110232_cE() {
@@ -324,9 +309,9 @@
    protected void func_180429_a(BlockPos p_180429_1_, BlockState p_180429_2_) {
       if (!p_180429_2_.func_185904_a().func_76224_d()) {
          BlockState blockstate = this.field_70170_p.func_180495_p(p_180429_1_.func_177984_a());
-         SoundType soundtype = p_180429_2_.func_215695_r();
+         SoundType soundtype = p_180429_2_.getSoundType(field_70170_p, p_180429_1_, this);
          if (blockstate.func_177230_c() == Blocks.field_150433_aE) {
-            soundtype = blockstate.func_215695_r();
+            soundtype = blockstate.getSoundType(field_70170_p, p_180429_1_, this);
          }
 
          if (this.func_184207_aI() && this.field_190688_bE) {
@@ -361,7 +346,7 @@
    }
 
    public int func_190676_dC() {
-      return 100;
+      return this.maxDomestication; // CraftBukkit - return stored max domestication instead of 100
    }
 
    protected float func_70599_aP() {
@@ -419,7 +404,7 @@
       }
 
       if (this.func_110143_aJ() < this.func_110138_aP() && f > 0.0F) {
-         this.func_70691_i(f);
+         this.heal(f, RegainReason.EATING); // CraftBukkit
          flag = true;
       }
 
@@ -490,7 +475,7 @@
       super.func_70636_d();
       if (!this.field_70170_p.field_72995_K && this.func_70089_S()) {
          if (this.field_70146_Z.nextInt(900) == 0 && this.field_70725_aQ == 0) {
-            this.func_70691_i(1.0F);
+            this.heal(1.0F, RegainReason.REGEN); // CraftBukkit
          }
 
          if (this.func_190684_dE()) {
@@ -725,6 +710,7 @@
       if (this.func_184780_dh() != null) {
          p_213281_1_.func_74778_a("OwnerUUID", this.func_184780_dh().toString());
       }
+      p_213281_1_.func_74768_a("Bukkit.MaxDomestication", this.maxDomestication); // CraftBukkit
 
       if (!this.field_110296_bG.func_70301_a(0).func_190926_b()) {
          p_213281_1_.func_218657_a("SaddleItem", this.field_110296_bG.func_70301_a(0).func_77955_b(new CompoundNBT()));
@@ -750,6 +736,12 @@
          this.func_184779_b(UUID.fromString(s));
       }
 
+      // CraftBukkit start
+      if (p_70037_1_.func_74764_b("Bukkit.MaxDomestication")) {
+         this.maxDomestication = p_70037_1_.func_74762_e("Bukkit.MaxDomestication");
+      }
+      // CraftBukkit end
+
       IAttributeInstance iattributeinstance = this.func_110140_aT().func_111152_a("Speed");
       if (iattributeinstance != null) {
          this.func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(iattributeinstance.func_111125_b() * 0.25D);
@@ -830,6 +822,18 @@
    }
 
    public void func_184775_b(int p_184775_1_) {
+      // CraftBukkit start
+      float power;
+      if (p_184775_1_ >= 90) {
+         power = 1.0F;
+      } else {
+         power = 0.4F + 0.4F * (float) p_184775_1_ / 90.0F;
+      }
+      org.bukkit.event.entity.HorseJumpEvent event = org.bukkit.craftbukkit.v1_15_R1.event.CraftEventFactory.callHorseJumpEvent(this, power);
+      if (event.isCancelled()) {
+         return;
+      }
+      // CraftBukkit end
       this.field_110294_bI = true;
       this.func_110220_cK();
    }
@@ -947,4 +951,22 @@
 
       return super.func_213386_a(p_213386_1_, p_213386_2_, p_213386_3_, p_213386_4_, p_213386_5_);
    }
+
+   private net.minecraftforge.common.util.LazyOptional<?> itemHandler = null;
+
+   @Override
+   public <T> net.minecraftforge.common.util.LazyOptional<T> getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable net.minecraft.util.Direction facing) {
+      if (this.func_70089_S() && capability == net.minecraftforge.items.CapabilityItemHandler.ITEM_HANDLER_CAPABILITY && itemHandler != null)
+         return itemHandler.cast();
+      return super.getCapability(capability, facing);
+   }
+
+   @Override
+   public void remove(boolean keepData) {
+      super.remove(keepData);
+      if (!keepData && itemHandler != null) {
+         itemHandler.invalidate();
+         itemHandler = null;
+      }
+   }
 }
