--- a/net/minecraft/entity/LivingEntity.java
+++ b/net/minecraft/entity/LivingEntity.java
@@ -1,60 +1,37 @@
 package net.minecraft.entity;
 
+import com.google.common.base.Function;
 import com.google.common.base.Objects;
 import com.google.common.collect.ImmutableList;
 import com.google.common.collect.ImmutableSet;
+import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.mojang.datafixers.Dynamic;
-import java.util.Collection;
-import java.util.ConcurrentModificationException;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Optional;
-import java.util.Random;
-import java.util.UUID;
+import java.util.*;
 import javax.annotation.Nullable;
 import net.minecraft.advancements.CriteriaTriggers;
-import net.minecraft.block.BedBlock;
-import net.minecraft.block.Block;
-import net.minecraft.block.BlockState;
-import net.minecraft.block.Blocks;
-import net.minecraft.block.HoneyBlock;
-import net.minecraft.block.LadderBlock;
-import net.minecraft.block.SoundType;
-import net.minecraft.block.TrapDoorBlock;
+import net.minecraft.block.*;
 import net.minecraft.command.arguments.EntityAnchorArgument;
 import net.minecraft.enchantment.EnchantmentHelper;
 import net.minecraft.enchantment.Enchantments;
 import net.minecraft.enchantment.FrostWalkerEnchantment;
-import net.minecraft.entity.ai.attributes.AbstractAttributeMap;
-import net.minecraft.entity.ai.attributes.AttributeMap;
-import net.minecraft.entity.ai.attributes.AttributeModifier;
-import net.minecraft.entity.ai.attributes.IAttribute;
-import net.minecraft.entity.ai.attributes.IAttributeInstance;
+import net.minecraft.entity.ai.attributes.*;
 import net.minecraft.entity.ai.brain.Brain;
 import net.minecraft.entity.boss.WitherEntity;
 import net.minecraft.entity.item.BoatEntity;
 import net.minecraft.entity.item.ExperienceOrbEntity;
 import net.minecraft.entity.item.ItemEntity;
+import net.minecraft.entity.passive.AnimalEntity;
 import net.minecraft.entity.passive.IFlyingAnimal;
-import net.minecraft.entity.passive.WolfEntity;
+import net.minecraft.entity.passive.TameableEntity;
 import net.minecraft.entity.passive.horse.AbstractHorseEntity;
 import net.minecraft.entity.player.PlayerEntity;
 import net.minecraft.entity.player.ServerPlayerEntity;
 import net.minecraft.entity.projectile.AbstractArrowEntity;
 import net.minecraft.fluid.Fluid;
 import net.minecraft.inventory.EquipmentSlotType;
-import net.minecraft.item.ArmorItem;
-import net.minecraft.item.ElytraItem;
-import net.minecraft.item.Food;
-import net.minecraft.item.Item;
-import net.minecraft.item.ItemStack;
-import net.minecraft.item.Items;
-import net.minecraft.item.UseAction;
-import net.minecraft.nbt.CompoundNBT;
-import net.minecraft.nbt.ListNBT;
-import net.minecraft.nbt.NBTDynamicOps;
+import net.minecraft.item.*;
+import net.minecraft.nbt.*;
 import net.minecraft.network.IPacket;
 import net.minecraft.network.datasync.DataParameter;
 import net.minecraft.network.datasync.DataSerializers;
@@ -66,35 +43,14 @@
 import net.minecraft.particles.BlockParticleData;
 import net.minecraft.particles.ItemParticleData;
 import net.minecraft.particles.ParticleTypes;
-import net.minecraft.potion.Effect;
-import net.minecraft.potion.EffectInstance;
-import net.minecraft.potion.EffectUtils;
-import net.minecraft.potion.Effects;
-import net.minecraft.potion.PotionUtils;
+import net.minecraft.potion.*;
 import net.minecraft.scoreboard.ScorePlayerTeam;
 import net.minecraft.stats.Stats;
 import net.minecraft.tags.BlockTags;
 import net.minecraft.tags.FluidTags;
 import net.minecraft.tags.Tag;
-import net.minecraft.util.CombatRules;
-import net.minecraft.util.CombatTracker;
-import net.minecraft.util.DamageSource;
-import net.minecraft.util.Direction;
-import net.minecraft.util.EntityDamageSource;
-import net.minecraft.util.EntityPredicates;
-import net.minecraft.util.Hand;
-import net.minecraft.util.HandSide;
-import net.minecraft.util.NonNullList;
-import net.minecraft.util.ResourceLocation;
-import net.minecraft.util.SoundCategory;
-import net.minecraft.util.SoundEvent;
-import net.minecraft.util.SoundEvents;
-import net.minecraft.util.math.AxisAlignedBB;
-import net.minecraft.util.math.BlockPos;
-import net.minecraft.util.math.MathHelper;
-import net.minecraft.util.math.RayTraceContext;
-import net.minecraft.util.math.RayTraceResult;
-import net.minecraft.util.math.Vec3d;
+import net.minecraft.util.*;
+import net.minecraft.util.math.*;
 import net.minecraft.world.GameRules;
 import net.minecraft.world.World;
 import net.minecraft.world.server.ServerChunkProvider;
@@ -105,13 +61,30 @@
 import net.minecraft.world.storage.loot.LootTable;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
+import net.minecraftforge.common.ForgeHooks;
 import org.apache.commons.lang3.tuple.Pair;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.v1_15_R1.SpigotTimings;
+import org.bukkit.craftbukkit.v1_15_R1.attribute.CraftAttributeMap;
+import org.bukkit.craftbukkit.v1_15_R1.event.CraftEventFactory;
+import org.bukkit.craftbukkit.v1_15_R1.inventory.CraftItemStack;
+import org.bukkit.entity.Player;
+import org.bukkit.event.entity.*;
+import org.bukkit.event.entity.EntityDamageEvent.DamageModifier;
+import org.bukkit.event.entity.EntityPotionEffectEvent.Cause;
+import org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason;
+import org.bukkit.event.player.PlayerItemConsumeEvent;
 
 public abstract class LivingEntity extends Entity {
    private static final UUID field_110156_b = UUID.fromString("662A6B8D-DA3E-4C1C-8813-96EA6097278D");
+   private static final UUID SLOW_FALLING_ID = UUID.fromString("A5B6CF2A-2F7C-31EF-9022-7C3E7D5E6ABA");
    private static final AttributeModifier field_110157_c = (new AttributeModifier(field_110156_b, "Sprinting speed boost", (double)0.3F, AttributeModifier.Operation.MULTIPLY_TOTAL)).func_111168_a(false);
+   private static final AttributeModifier SLOW_FALLING = new AttributeModifier(SLOW_FALLING_ID, "Slow falling acceleration reduction", -0.07, AttributeModifier.Operation.ADDITION).func_111168_a(false); // Add -0.07 to 0.08 so we get the vanilla default of 0.01
+   public static final net.minecraft.entity.ai.attributes.IAttribute SWIM_SPEED = new net.minecraft.entity.ai.attributes.RangedAttribute(null, "forge.swimSpeed", 1.0D, 0.0D, 1024.0D).func_111112_a(true);
+   public static final net.minecraft.entity.ai.attributes.IAttribute NAMETAG_DISTANCE = new net.minecraft.entity.ai.attributes.RangedAttribute(null, "forge.nameTagDistance", 64.0D, 0.0D, Float.MAX_VALUE).func_111112_a(true);
+   public static final net.minecraft.entity.ai.attributes.IAttribute ENTITY_GRAVITY = new net.minecraft.entity.ai.attributes.RangedAttribute(null, "forge.entity_gravity", 0.08D, -8.0D, 8.0D).func_111112_a(true);
    protected static final DataParameter<Byte> field_184621_as = EntityDataManager.func_187226_a(LivingEntity.class, DataSerializers.field_187191_a);
-   private static final DataParameter<Float> field_184632_c = EntityDataManager.func_187226_a(LivingEntity.class, DataSerializers.field_187193_c);
+   public static final DataParameter<Float> field_184632_c = EntityDataManager.func_187226_a(LivingEntity.class, DataSerializers.field_187193_c); // private->public CraftBukkit
    private static final DataParameter<Integer> field_184633_f = EntityDataManager.func_187226_a(LivingEntity.class, DataSerializers.field_187192_b);
    private static final DataParameter<Boolean> field_184634_g = EntityDataManager.func_187226_a(LivingEntity.class, DataSerializers.field_187198_h);
    private static final DataParameter<Integer> field_184635_h = EntityDataManager.func_187226_a(LivingEntity.class, DataSerializers.field_187192_b);
@@ -119,8 +92,8 @@
    private static final DataParameter<Optional<BlockPos>> field_213379_bs = EntityDataManager.func_187226_a(LivingEntity.class, DataSerializers.field_187201_k);
    protected static final EntitySize field_213377_as = EntitySize.func_220311_c(0.2F, 0.2F);
    private AbstractAttributeMap field_110155_d;
-   private final CombatTracker field_94063_bt = new CombatTracker(this);
-   private final Map<Effect, EffectInstance> field_70713_bf = Maps.newHashMap();
+   public CombatTracker field_94063_bt = new CombatTracker(this); // private->public CraftBukkit
+   public final Map<Effect, EffectInstance> field_70713_bf = Maps.newHashMap(); // private->public CraftBukkit
    private final NonNullList<ItemStack> field_184630_bs = NonNullList.func_191197_a(2, ItemStack.field_190927_a);
    private final NonNullList<ItemStack> field_184631_bt = NonNullList.func_191197_a(4, ItemStack.field_190927_a);
    public boolean field_82175_bq;
@@ -138,7 +111,7 @@
    public float field_184618_aE;
    public float field_70721_aZ;
    public float field_184619_aG;
-   public final int field_70771_an = 20;
+   public int field_70771_an = 20; // final->not CraftBukkit
    public final float field_70769_ao;
    public final float field_70770_ap;
    public float field_70761_aq;
@@ -146,7 +119,7 @@
    public float field_70759_as;
    public float field_70758_at;
    public float field_70747_aH = 0.02F;
-   protected PlayerEntity field_70717_bb;
+   public PlayerEntity field_70717_bb; // protected->public CraftBukkit
    protected int field_70718_bc;
    protected boolean field_70729_aU;
    protected int field_70708_bq;
@@ -156,7 +129,7 @@
    protected float field_70763_ax;
    protected float field_70741_aB;
    protected int field_70744_aE;
-   protected float field_110153_bc;
+   public float field_110153_bc; // protected->public CraftBukkit
    protected boolean field_70703_bu;
    public float field_70702_br;
    public float field_70701_bs;
@@ -169,10 +142,10 @@
    protected double field_70709_bj;
    protected double field_208001_bq;
    protected int field_208002_br;
-   private boolean field_70752_e = true;
+   public boolean field_70752_e = true; // private->public CraftBukkit
    @Nullable
-   private LivingEntity field_70755_b;
-   private int field_70756_c;
+   public LivingEntity field_70755_b; // private->public CraftBukkit
+   public int field_70756_c; // private->public CraftBukkit
    private LivingEntity field_110150_bn;
    private int field_142016_bo;
    private float field_70746_aG;
@@ -189,10 +162,36 @@
    private float field_205018_bM;
    protected Brain<?> field_213378_br;
 
+   // CraftBukkit start
+   public int expToDrop;
+   public int maxAirTicks = 300;
+   public boolean forceDrops;
+   public ArrayList<org.bukkit.inventory.ItemStack> drops = new ArrayList<org.bukkit.inventory.ItemStack>();
+   public org.bukkit.craftbukkit.v1_15_R1.attribute.CraftAttributeMap craftAttributes;
+   public boolean collides = true;
+   public boolean canPickUpLootMagma; // TODO: fix
+   private boolean isTickingEffects = false;
+   private List<ProcessableEffect> effectsToProcess = Lists.newArrayList();
+
+   @Override
+   public float getBukkitYaw() {
+      return func_70079_am();
+   }
+   // CraftBukkit end
+
+   // Spigot start
+   public void inactiveTick()
+   {
+      super.inactiveTick();
+      ++this.field_70708_bq; // Above all the floats
+   }
+   // Spigot end
+
    protected LivingEntity(EntityType<? extends LivingEntity> p_i48577_1_, World p_i48577_2_) {
       super(p_i48577_1_, p_i48577_2_);
       this.func_110147_ax();
-      this.func_70606_j(this.func_110138_aP());
+      // CraftBukkit - setHealth(getMaxHealth()) inlined and simplified to skip the instanceof check for EntityPlayer, as getBukkitEntity() is not initialized in constructor
+      this.field_70180_af.func_187227_b(LivingEntity.field_184632_c, (float) this.func_110148_a(SharedMonsterAttributes.field_111267_a).func_111126_e());
       this.field_70156_m = true;
       this.field_70770_ap = (float)((Math.random() + 1.0D) * (double)0.01F);
       this.func_226264_Z_();
@@ -235,6 +234,9 @@
       this.func_110140_aT().func_111150_b(SharedMonsterAttributes.field_111263_d);
       this.func_110140_aT().func_111150_b(SharedMonsterAttributes.field_188791_g);
       this.func_110140_aT().func_111150_b(SharedMonsterAttributes.field_189429_h);
+      this.func_110140_aT().func_111150_b(SWIM_SPEED);
+      this.func_110140_aT().func_111150_b(NAMETAG_DISTANCE);
+      this.func_110140_aT().func_111150_b(ENTITY_GRAVITY);
    }
 
    protected void func_184231_a(double p_184231_1_, boolean p_184231_3_, BlockState p_184231_4_, BlockPos p_184231_5_) {
@@ -244,10 +246,15 @@
 
       if (!this.field_70170_p.field_72995_K && this.field_70143_R > 3.0F && p_184231_3_) {
          float f = (float)MathHelper.func_76123_f(this.field_70143_R - 3.0F);
-         if (!p_184231_4_.func_196958_f()) {
+         if (!p_184231_4_.isAir(field_70170_p, p_184231_5_)) {
             double d0 = Math.min((double)(0.2F + f / 15.0F), 2.5D);
             int i = (int)(150.0D * d0);
+            // CraftBukkit start
+            if (this instanceof PlayerEntity)
+               ((ServerWorld)this.field_70170_p).sendParticles((PlayerEntity)this, new BlockParticleData(ParticleTypes.field_197611_d, p_184231_4_), this.func_226277_ct_(), this.func_226278_cu_(), this.func_226281_cx_(), i, 0.0D, 0.0D, 0.0D, (double)0.15F, false);
+            else
             ((ServerWorld)this.field_70170_p).func_195598_a(new BlockParticleData(ParticleTypes.field_197611_d, p_184231_4_), this.func_226277_ct_(), this.func_226278_cu_(), this.func_226281_cx_(), i, 0.0D, 0.0D, 0.0D, (double)0.15F);
+            // CraftBukkit end
          }
       }
 
@@ -310,7 +317,7 @@
                }
             }
 
-            if (!this.field_70170_p.field_72995_K && this.func_184218_aH() && this.func_184187_bx() != null && !this.func_184187_bx().func_205710_ba()) {
+            if (!this.field_70170_p.field_72995_K && this.func_184218_aH() && this.func_184187_bx() != null && !this.func_184187_bx().canBeRiddenInWater(this)) {
                this.func_184210_p();
             }
          } else if (this.func_70086_ai() < this.func_205010_bg()) {
@@ -391,8 +398,8 @@
 
    protected void func_70609_aI() {
       ++this.field_70725_aQ;
-      if (this.field_70725_aQ == 20) {
-         this.func_70106_y();
+      if (this.field_70725_aQ >= 20 && !this.field_70729_aU) { // CraftBukkit - (this.deathTicks == 20) -> (this.deathTicks >= 20 && !this.dead)
+         this.remove(this instanceof net.minecraft.entity.player.ServerPlayerEntity); //Forge keep data until we revive player
 
          for(int i = 0; i < 20; ++i) {
             double d0 = this.field_70146_Z.nextGaussian() * 0.02D;
@@ -528,6 +535,17 @@
          }
       }
 
+      // CraftBukkit start
+      if (p_70037_1_.func_74764_b("Bukkit.MaxHealth")) {
+         INBT nbtbase = p_70037_1_.func_74781_a("Bukkit.MaxHealth");
+         if (nbtbase.func_74732_a() == 5) {
+            this.func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(((FloatNBT) nbtbase).func_150286_g());
+         } else if (nbtbase.func_74732_a() == 3) {
+            this.func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(((IntNBT) nbtbase).func_150286_g());
+         }
+      }
+      // CraftBukkit end
+
       if (p_70037_1_.func_150297_b("Health", 99)) {
          this.func_70606_j(p_70037_1_.func_74760_g("Health"));
       }
@@ -565,7 +583,7 @@
 
    protected void func_70679_bo() {
       Iterator<Effect> iterator = this.field_70713_bf.keySet().iterator();
-
+      isTickingEffects = true; // CraftBukkit
       try {
          while(iterator.hasNext()) {
             Effect effect = iterator.next();
@@ -573,7 +591,13 @@
             if (!effectinstance.func_76455_a(this, () -> {
                this.func_70695_b(effectinstance, true);
             })) {
-               if (!this.field_70170_p.field_72995_K) {
+               if (!this.field_70170_p.field_72995_K && !net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.PotionEvent.PotionExpiryEvent(this, effectinstance))) {
+                  // CraftBukkit start
+                  EntityPotionEffectEvent event = CraftEventFactory.callEntityPotionEffectChangeEvent(this, effectinstance, null, EntityPotionEffectEvent.Cause.EXPIRATION);
+                  if (event.isCancelled()) {
+                     continue;
+                  }
+                  // CraftBukkit end
                   iterator.remove();
                   this.func_70688_c(effectinstance);
                }
@@ -584,6 +608,17 @@
       } catch (ConcurrentModificationException var11) {
          ;
       }
+      // CraftBukkit start
+      isTickingEffects = false;
+      for (ProcessableEffect e : effectsToProcess) {
+         if (e.effect != null) {
+            addEffect(e.effect, e.cause);
+         } else {
+            removeEffect(e.type, e.cause);
+         }
+      }
+      effectsToProcess.clear();
+      // CraftBukkit end
 
       if (this.field_70752_e) {
          if (!this.field_70170_p.field_72995_K) {
@@ -623,8 +658,10 @@
          this.func_82142_c(false);
       } else {
          Collection<EffectInstance> collection = this.field_70713_bf.values();
-         this.field_70180_af.func_187227_b(field_184634_g, func_184593_a(collection));
-         this.field_70180_af.func_187227_b(field_184633_f, PotionUtils.func_185181_a(collection));
+         net.minecraftforge.event.entity.living.PotionColorCalculationEvent event = new net.minecraftforge.event.entity.living.PotionColorCalculationEvent(this, PotionUtils.func_185181_a(collection), func_184593_a(collection), collection);
+         net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(event);
+         this.field_70180_af.func_187227_b(field_184634_g, event.areParticlesHidden());
+         this.field_70180_af.func_187227_b(field_184633_f, event.getColor());
          this.func_82142_c(this.func_70644_a(Effects.field_76441_p));
       }
 
@@ -680,7 +717,13 @@
       this.field_70180_af.func_187227_b(field_184633_f, 0);
    }
 
+   // CraftBukkit start
    public boolean func_195061_cb() {
+      return clearActivePotions(org.bukkit.event.entity.EntityPotionEffectEvent.Cause.UNKNOWN);
+   }
+
+   public boolean clearActivePotions(EntityPotionEffectEvent.Cause cause) {
+      // CraftBukkit end
       if (this.field_70170_p.field_72995_K) {
          return false;
       } else {
@@ -688,7 +731,16 @@
 
          boolean flag;
          for(flag = false; iterator.hasNext(); flag = true) {
-            this.func_70688_c(iterator.next());
+            // EffectInstance effect = iterator.next();
+            // CraftBukkit start
+            EffectInstance effect = (EffectInstance) iterator.next();
+            EntityPotionEffectEvent event = CraftEventFactory.callEntityPotionEffectChangeEvent(this, effect, null, cause, EntityPotionEffectEvent.Action.CLEARED);
+            if (event.isCancelled()) {
+               continue;
+            }
+            // CraftBukkit end
+            if(net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.PotionEvent.PotionRemoveEvent(this, effect))) continue;
+            this.func_70688_c(effect);
             iterator.remove();
          }
 
@@ -713,17 +765,50 @@
       return this.field_70713_bf.get(p_70660_1_);
    }
 
+   // Magma start
+   public boolean addPotionEffect(EffectInstance effectInstanceIn, EntityPotionEffectEvent.Cause cause) {
+      return addEffect(effectInstanceIn, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.UNKNOWN);
+   }
+   // Magma end
+
    public boolean func_195064_c(EffectInstance p_195064_1_) {
-      if (!this.func_70687_e(p_195064_1_)) {
+      // CraftBkkit start
+      return addEffect(p_195064_1_, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.UNKNOWN);
+   }
+
+   public boolean addEffect(EffectInstance effectInstanceIn, EntityPotionEffectEvent.Cause cause) {
+      org.spigotmc.AsyncCatcher.catchOp("effect add"); // Spigot
+      if (isTickingEffects) {
+         effectsToProcess.add(new ProcessableEffect(effectInstanceIn, cause));
+         return true;
+      }
+      // CraftBukkit end
+      if (!this.func_70687_e(effectInstanceIn)) {
          return false;
       } else {
-         EffectInstance effectinstance = this.field_70713_bf.get(p_195064_1_.func_188419_a());
+         EffectInstance effectinstance = this.field_70713_bf.get(effectInstanceIn.func_188419_a());
+         net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.PotionEvent.PotionAddedEvent(this, effectinstance, effectInstanceIn));
+         // CraftBukkit start
+         boolean override = false;
+         if (effectinstance != null) {
+            override = new EffectInstance(effectinstance).func_199308_a(effectInstanceIn);
+         }
+
+         EntityPotionEffectEvent event =  CraftEventFactory.callEntityPotionEffectChangeEvent(this, effectinstance, effectInstanceIn, cause, override);
+         if (event.isCancelled()) {
+            return false;
+         }
+         // CraftBukkit end
          if (effectinstance == null) {
-            this.field_70713_bf.put(p_195064_1_.func_188419_a(), p_195064_1_);
-            this.func_70670_a(p_195064_1_);
+            this.field_70713_bf.put(effectInstanceIn.func_188419_a(), effectInstanceIn);
+            this.func_70670_a(effectInstanceIn);
             return true;
-         } else if (effectinstance.func_199308_a(p_195064_1_)) {
+         // } else if (effectinstance.combine(effectInstanceIn)) {
+            // CraftBukkit start
+         } else if (event.isOverride()) {
+            effectinstance.func_199308_a(effectInstanceIn);
             this.func_70695_b(effectinstance, true);
+            // CraftBukkit end
             return true;
          } else {
             return false;
@@ -732,6 +817,9 @@
    }
 
    public boolean func_70687_e(EffectInstance p_70687_1_) {
+      net.minecraftforge.event.entity.living.PotionEvent.PotionApplicableEvent event = new net.minecraftforge.event.entity.living.PotionEvent.PotionApplicableEvent(this, p_70687_1_);
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(event);
+      if (event.getResult() != net.minecraftforge.eventbus.api.Event.Result.DEFAULT) return event.getResult() == net.minecraftforge.eventbus.api.Event.Result.ALLOW;
       if (this.func_70668_bt() == CreatureAttribute.field_223223_b_) {
          Effect effect = p_70687_1_.func_188419_a();
          if (effect == Effects.field_76428_l || effect == Effects.field_76436_u) {
@@ -746,13 +834,39 @@
       return this.func_70668_bt() == CreatureAttribute.field_223223_b_;
    }
 
+   //CraftBukkit start
    @Nullable
    public EffectInstance func_184596_c(@Nullable Effect p_184596_1_) {
-      return this.field_70713_bf.remove(p_184596_1_);
+      return removeActivePotionEffect(p_184596_1_, EntityPotionEffectEvent.Cause.UNKNOWN);
    }
 
+   @Nullable
+   public EffectInstance removeActivePotionEffect(@Nullable Effect potioneffectin, EntityPotionEffectEvent.Cause cause) {
+      if (isTickingEffects) {
+         effectsToProcess.add(new ProcessableEffect(potioneffectin, cause));
+         return null;
+      }
+
+      EffectInstance effect = this.field_70713_bf.get(potioneffectin);
+      if (effect == null) {
+         return null;
+      }
+
+      EntityPotionEffectEvent event = CraftEventFactory.callEntityPotionEffectChangeEvent(this, effect, null, cause);
+      if(event.isCancelled()) {
+         return null;
+      }
+      return this.field_70713_bf.remove(potioneffectin);
+   }
+
    public boolean func_195063_d(Effect p_195063_1_) {
-      EffectInstance effectinstance = this.func_184596_c(p_195063_1_);
+      return removeEffect(p_195063_1_, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.UNKNOWN);
+   }
+
+   public boolean removeEffect(Effect effectIn, EntityPotionEffectEvent.Cause cause) {
+      if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.PotionEvent.PotionRemoveEvent(this, effectIn))) return false;
+      EffectInstance effectinstance = this.func_184596_c(effectIn);
+      // CraftBukkit end
       if (effectinstance != null) {
          this.func_70688_c(effectinstance);
          return true;
@@ -787,28 +901,65 @@
 
    }
 
+   // CraftBukkit start - Delegate so we can handle providing a reason for health being regained
    public void func_70691_i(float p_70691_1_) {
+      heal(p_70691_1_, RegainReason.CUSTOM);
+   }
+
+   public void heal(float healAmount, RegainReason regainReason) {
+      healAmount = net.minecraftforge.event.ForgeEventFactory.onLivingHeal(this, healAmount);
+      if (healAmount <= 0) return;
       float f = this.func_110143_aJ();
       if (f > 0.0F) {
-         this.func_70606_j(f + p_70691_1_);
+         EntityRegainHealthEvent event = new EntityRegainHealthEvent(this.getBukkitEntity(), healAmount, regainReason);
+         // Suppress during worldgen
+         if(this.valid){
+            this.field_70170_p.getServerCB().getPluginManager().callEvent(event);
+         }
+
+         if(!event.isCancelled()){
+            this.func_70606_j((float) (f + event.getAmount()));
+         }
+         // CraftBukkit end
       }
 
    }
 
    public float func_110143_aJ() {
+      // CraftBukkit start - Use unscaled health
+      if (this instanceof  PlayerEntity) {
+         return (float) ((PlayerEntity) this).getBukkitEntity().getHealth();
+      }
+      // CraftBukkit end
       return this.field_70180_af.func_187225_a(field_184632_c);
    }
 
    public void func_70606_j(float p_70606_1_) {
+      // CraftBukkit start - Handle scaled health
+      if (this instanceof ServerPlayerEntity) {
+         org.bukkit.craftbukkit.v1_15_R1.entity.CraftPlayer player = ((ServerPlayerEntity) this).getBukkitEntity();
+         // Squeeze
+         if (p_70606_1_ < 0.0F) {
+            player.setRealHealth(0.0D);
+         } else if (p_70606_1_ > player.getMaxHealth()) {
+            player.setRealHealth(player.getMaxHealth());
+         } else {
+            player.setRealHealth(p_70606_1_);
+         }
+         player.updateScaledHealth(false);
+         return;
+      }
+      // CraftBukkit end
       this.field_70180_af.func_187227_b(field_184632_c, MathHelper.func_76131_a(p_70606_1_, 0.0F, this.func_110138_aP()));
    }
 
    public boolean func_70097_a(DamageSource p_70097_1_, float p_70097_2_) {
+      if (!net.minecraftforge.common.ForgeHooks.onLivingAttack(this, p_70097_1_, p_70097_2_)) return false;
       if (this.func_180431_b(p_70097_1_)) {
          return false;
       } else if (this.field_70170_p.field_72995_K) {
          return false;
-      } else if (this.func_110143_aJ() <= 0.0F) {
+      } else if (this.field_70729_aU || this.field_70128_L || this.func_110143_aJ() <= 0.0F) { // CraftBukkit - Don't allow entities that got set to dead/killed elsewhere to get damaged and die - Magma this.killed = this.removed??
          return false;
       } else if (p_70097_1_.func_76347_k() && this.func_70644_a(Effects.field_76426_n)) {
          return false;
@@ -819,16 +970,18 @@
 
          this.field_70708_bq = 0;
          float f = p_70097_2_;
-         if ((p_70097_1_ == DamageSource.field_82728_o || p_70097_1_ == DamageSource.field_82729_p) && !this.func_184582_a(EquipmentSlotType.HEAD).func_190926_b()) {
+         // CraftBukkit - Moved into damageEntityCB(DamageSource, float)
+         if (false && (p_70097_1_ == DamageSource.field_82728_o || p_70097_1_ == DamageSource.field_82729_p) && !this.func_184582_a(EquipmentSlotType.HEAD).func_190926_b()) {
             this.func_184582_a(EquipmentSlotType.HEAD).func_222118_a((int)(p_70097_2_ * 4.0F + this.field_70146_Z.nextFloat() * p_70097_2_ * 2.0F), this, (p_213341_0_) -> {
                p_213341_0_.func_213361_c(EquipmentSlotType.HEAD);
             });
             p_70097_2_ *= 0.75F;
          }
 
-         boolean flag = false;
+         boolean flag = p_70097_2_ > 0.0F && this.func_184583_d(p_70097_1_); // Copied from below
          float f1 = 0.0F;
-         if (p_70097_2_ > 0.0F && this.func_184583_d(p_70097_1_)) {
+         // CraftBukkit - Moved into damageEntityCB(DamageSource, float)
+         if (false && p_70097_2_ > 0.0F && this.func_184583_d(p_70097_1_)) {
             this.func_184590_k(p_70097_2_);
             f1 = p_70097_2_;
             p_70097_2_ = 0.0F;
@@ -846,20 +999,38 @@
          boolean flag1 = true;
          if ((float)this.field_70172_ad > 10.0F) {
             if (p_70097_2_ <= this.field_110153_bc) {
+               this.forceExplosionKnockback = true; // CraftBukkit - SPIGOT-949 - for vanilla consistency, cooldown does not prevent explosion knockback
                return false;
             }
 
-            this.func_70665_d(p_70097_1_, p_70097_2_ - this.field_110153_bc);
+            // CraftBukkit start
+            if(!this.damageEntityCB(p_70097_1_, p_70097_2_ - this.field_110153_bc)){
+               return false;
+            }
+            // CraftBukkit end
             this.field_110153_bc = p_70097_2_;
             flag1 = false;
          } else {
+            // CraftBukkit start
+            if(!this.damageEntityCB(p_70097_1_, p_70097_2_)){
+               return false;
+            }
+            // CraftBukkit end
             this.field_110153_bc = p_70097_2_;
             this.field_70172_ad = 20;
-            this.func_70665_d(p_70097_1_, p_70097_2_);
             this.field_70738_aO = 10;
             this.field_70737_aN = this.field_70738_aO;
          }
 
+         // CraftBukkit start
+         if (this instanceof AnimalEntity) {
+            ((AnimalEntity) this).func_70875_t();
+            if (this instanceof TameableEntity) {
+               ((TameableEntity) this).func_70907_r().func_75270_a(false);
+            }
+         }
+         // CraftBukkit end
+
          this.field_70739_aP = 0.0F;
          Entity entity1 = p_70097_1_.func_76346_g();
          if (entity1 != null) {
@@ -870,8 +1041,8 @@
             if (entity1 instanceof PlayerEntity) {
                this.field_70718_bc = 100;
                this.field_70717_bb = (PlayerEntity)entity1;
-            } else if (entity1 instanceof WolfEntity) {
-               WolfEntity wolfentity = (WolfEntity)entity1;
+            } else if (entity1 instanceof net.minecraft.entity.passive.TameableEntity) {
+               net.minecraft.entity.passive.TameableEntity wolfentity = (net.minecraft.entity.passive.TameableEntity)entity1;
                if (wolfentity.func_70909_n()) {
                   this.field_70718_bc = 100;
                   LivingEntity livingentity = wolfentity.func_70902_q();
@@ -970,27 +1141,38 @@
          return false;
       } else {
          ItemStack itemstack = null;
+         // CraftBukkit start
+         ItemStack itemstack1 = ItemStack.field_190927_a;
 
-         for(Hand hand : Hand.values()) {
-            ItemStack itemstack1 = this.func_184586_b(hand);
+         for (Hand hand : Hand.values()) {
+            itemstack1 = this.func_184586_b(hand);
             if (itemstack1.func_77973_b() == Items.field_190929_cY) {
                itemstack = itemstack1.func_77946_l();
-               itemstack1.func_190918_g(1);
+//               itemstack1.shrink(1);  // CraftBukkit
                break;
             }
          }
 
-         if (itemstack != null) {
-            if (this instanceof ServerPlayerEntity) {
+         EntityResurrectEvent event = new EntityResurrectEvent((org.bukkit.entity.LivingEntity) this.getBukkitEntity());
+         event.setCancelled(itemstack == null);
+         this.field_70170_p.getServerCB().getPluginManager().callEvent(event);
+         if (!event.isCancelled()) {
+            if (!itemstack1.func_190926_b()) {
+               itemstack1.func_190918_g(1);
+            }
+            if (itemstack != null && this instanceof ServerPlayerEntity) {
+               // CraftBukkit end
                ServerPlayerEntity serverplayerentity = (ServerPlayerEntity)this;
                serverplayerentity.func_71029_a(Stats.field_75929_E.func_199076_b(Items.field_190929_cY));
                CriteriaTriggers.field_193130_A.func_193187_a(serverplayerentity, itemstack);
             }
 
             this.func_70606_j(1.0F);
-            this.func_195061_cb();
-            this.func_195064_c(new EffectInstance(Effects.field_76428_l, 900, 1));
-            this.func_195064_c(new EffectInstance(Effects.field_76444_x, 100, 1));
+            // CraftBukkit start
+            this.clearActivePotions(Cause.TOTEM);
+            this.addPotionEffect(new EffectInstance(Effects.field_76428_l, 900, 1), Cause.TOTEM);
+            this.addPotionEffect(new EffectInstance(Effects.field_76444_x, 100, 1), Cause.TOTEM);
+            // CraftBukkit end
             this.field_70170_p.func_72960_a(this, (byte)35);
          }
 
@@ -1053,6 +1235,7 @@
    }
 
    public void func_70645_a(DamageSource p_70645_1_) {
+      if (net.minecraftforge.common.ForgeHooks.onLivingDeath(this, p_70645_1_)) return;
       if (!this.field_70128_L && !this.field_70729_aU) {
          Entity entity = p_70645_1_.func_76346_g();
          LivingEntity livingentity = this.func_94060_bK();
@@ -1084,10 +1267,10 @@
       if (!this.field_70170_p.field_72995_K) {
          boolean flag = false;
          if (p_226298_1_ instanceof WitherEntity) {
-            if (this.field_70170_p.func_82736_K().func_223586_b(GameRules.field_223599_b)) {
+               if (net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.field_70170_p, this)) {
                BlockPos blockpos = new BlockPos(this);
                BlockState blockstate = Blocks.field_222388_bz.func_176223_P();
-               if (this.field_70170_p.func_180495_p(blockpos).func_196958_f() && blockstate.func_196955_c(this.field_70170_p, blockpos)) {
+               if (this.field_70170_p.func_175623_d(blockpos) && blockstate.func_196955_c(this.field_70170_p, blockpos)) {
                   this.field_70170_p.func_180501_a(blockpos, blockstate, 3);
                   flag = true;
                }
@@ -1104,36 +1287,59 @@
 
    protected void func_213345_d(DamageSource p_213345_1_) {
       Entity entity = p_213345_1_.func_76346_g();
-      int i;
-      if (entity instanceof PlayerEntity) {
-         i = EnchantmentHelper.func_185283_h((LivingEntity)entity);
-      } else {
-         i = 0;
-      }
 
+      int i = net.minecraftforge.common.ForgeHooks.getLootingLevel(this, entity, p_213345_1_);
+      this.captureDrops(new java.util.ArrayList<>());
+
       boolean flag = this.field_70718_bc > 0;
+
+      this.func_213337_cE(); // CraftBukkit - from below
       if (this.func_146066_aG() && this.field_70170_p.func_82736_K().func_223586_b(GameRules.field_223602_e)) {
          this.func_213354_a(p_213345_1_, flag);
          this.func_213333_a(p_213345_1_, i, flag);
+         // CraftBukkit start - Call death event
+         CraftEventFactory.callEntityDeathEvent(this, this.drops);
+         this.drops = new ArrayList<org.bukkit.inventory.ItemStack>();
+      } else {
+         CraftEventFactory.callEntityDeathEvent(this);
+         // CraftBukkit end
       }
 
-      this.func_213337_cE();
+//      this.dropInventory(); // CraftBukkit - moved up
       this.func_226294_cV_();
+
+      Collection<ItemEntity> drops = captureDrops(null);
+      if (!net.minecraftforge.common.ForgeHooks.onLivingDrops(this, p_213345_1_, drops, i, field_70718_bc > 0))
+         drops.forEach(e -> field_70170_p.func_217376_c(e));
    }
 
    protected void func_213337_cE() {
    }
 
-   protected void func_226294_cV_() {
+   // CraftBukkit start
+   public int getExpReward() {
       if (!this.field_70170_p.field_72995_K && (this.func_70684_aJ() || this.field_70718_bc > 0 && this.func_146066_aG() && this.field_70170_p.func_82736_K().func_223586_b(GameRules.field_223602_e))) {
          int i = this.func_70693_a(this.field_70717_bb);
+         return i;
+      } else {
+         return 0;
+      }
+   }
+   // CraftBukkit end
 
+   protected void func_226294_cV_() {
+      // CraftBukkit start - Update getExpReward() above if the removed if() changes!
+      if (true) {
+         int i = this.expToDrop;
+         i = net.minecraftforge.event.ForgeEventFactory.getExperienceDrop(this, this.field_70717_bb, i);
          while(i > 0) {
             int j = ExperienceOrbEntity.func_70527_a(i);
             i -= j;
             this.field_70170_p.func_217376_c(new ExperienceOrbEntity(this.field_70170_p, this.func_226277_ct_(), this.func_226278_cu_(), this.func_226281_cx_(), j));
          }
+         this.expToDrop = 0;
       }
+      // CraftBukkit end
 
    }
 
@@ -1148,7 +1354,8 @@
       ResourceLocation resourcelocation = this.func_213346_cF();
       LootTable loottable = this.field_70170_p.func_73046_m().func_200249_aQ().func_186521_a(resourcelocation);
       LootContext.Builder lootcontext$builder = this.func_213363_a(p_213354_2_, p_213354_1_);
-      loottable.func_216120_b(lootcontext$builder.func_216022_a(LootParameterSets.field_216263_d), this::func_199701_a_);
+      LootContext ctx = lootcontext$builder.func_216022_a(LootParameterSets.field_216263_d);
+      loottable.func_216113_a(ctx).forEach(this::func_199701_a_);
    }
 
    protected LootContext.Builder func_213363_a(boolean p_213363_1_, DamageSource p_213363_2_) {
@@ -1161,6 +1368,9 @@
    }
 
    public void func_70653_a(Entity p_70653_1_, float p_70653_2_, double p_70653_3_, double p_70653_5_) {
+      net.minecraftforge.event.entity.living.LivingKnockBackEvent event = net.minecraftforge.common.ForgeHooks.onLivingKnockBack(this, p_70653_1_, p_70653_2_, p_70653_3_, p_70653_5_);
+      if(event.isCanceled()) return;
+      p_70653_2_ = event.getStrength(); p_70653_3_ = event.getRatioX(); p_70653_5_ = event.getRatioZ();
       if (!(this.field_70146_Z.nextDouble() < this.func_110148_a(SharedMonsterAttributes.field_111266_c).func_111126_e())) {
          this.field_70160_al = true;
          Vec3d vec3d = this.func_213322_ci();
@@ -1196,12 +1406,7 @@
          return false;
       } else {
          BlockState blockstate = this.func_213339_cH();
-         Block block = blockstate.func_177230_c();
-         if (block != Blocks.field_150468_ap && block != Blocks.field_150395_bd && block != Blocks.field_222420_lI) {
-            return block instanceof TrapDoorBlock && this.func_184604_a(new BlockPos(this), blockstate);
-         } else {
-            return true;
-         }
+         return net.minecraftforge.common.ForgeHooks.isLivingOnLadder(blockstate, field_70170_p, new BlockPos(this), this);
       }
    }
 
@@ -1225,12 +1430,22 @@
    }
 
    public boolean func_225503_b_(float p_225503_1_, float p_225503_2_) {
+      float[] ret = net.minecraftforge.common.ForgeHooks.onLivingFall(this, p_225503_1_, p_225503_2_);
+      if (ret == null) return false;
+      p_225503_1_ = ret[0];
+      p_225503_2_ = ret[1];
+
       boolean flag = super.func_225503_b_(p_225503_1_, p_225503_2_);
       int i = this.func_225508_e_(p_225503_1_, p_225503_2_);
       if (i > 0) {
+         // CraftBukkit start
+         if (!this.func_70097_a(DamageSource.field_76379_h, (float) i)) {
+            return true;
+         }
+         // CraftBukkit end
          this.func_184185_a(this.func_184588_d(i), 1.0F, 1.0F);
          this.func_226295_cZ_();
-         this.func_70097_a(DamageSource.field_76379_h, (float)i);
+//         this.attackEntityFrom(DamageSource.FALL, (float)i);  // CraftBukkit - moved up
          return true;
       } else {
          return flag;
@@ -1248,9 +1463,10 @@
          int i = MathHelper.func_76128_c(this.func_226277_ct_());
          int j = MathHelper.func_76128_c(this.func_226278_cu_() - (double)0.2F);
          int k = MathHelper.func_76128_c(this.func_226281_cx_());
-         BlockState blockstate = this.field_70170_p.func_180495_p(new BlockPos(i, j, k));
-         if (!blockstate.func_196958_f()) {
-            SoundType soundtype = blockstate.func_215695_r();
+         BlockPos pos = new BlockPos(i, j, k);
+         BlockState blockstate = this.field_70170_p.func_180495_p(pos);
+         if (!blockstate.isAir(this.field_70170_p, pos)) {
+            SoundType soundtype = blockstate.getSoundType(field_70170_p, pos, this);
             this.func_184185_a(soundtype.func_185842_g(), soundtype.func_185843_a() * 0.5F, soundtype.func_185847_b() * 0.75F);
          }
 
@@ -1277,7 +1493,7 @@
 
    protected float func_70655_b(DamageSource p_70655_1_, float p_70655_2_) {
       if (!p_70655_1_.func_76363_c()) {
-         this.func_70675_k(p_70655_2_);
+//         this.damageArmor(damage); // CraftBukkit - Moved into damageEntityCB(DamageSource, float)
          p_70655_2_ = CombatRules.func_189427_a(p_70655_2_, (float)this.func_70658_aO(), (float)this.func_110148_a(SharedMonsterAttributes.field_189429_h).func_111126_e());
       }
 
@@ -1288,7 +1504,8 @@
       if (p_70672_1_.func_151517_h()) {
          return p_70672_2_;
       } else {
-         if (this.func_70644_a(Effects.field_76429_m) && p_70672_1_ != DamageSource.field_76380_i) {
+         // CraftBukkit - Moved to damageEntityCB(DamageSource, float)
+         if (false && this.func_70644_a(Effects.field_76429_m) && p_70672_1_ != DamageSource.field_76380_i) {
             int i = (this.func_70660_b(Effects.field_76429_m).func_76458_c() + 1) * 5;
             int j = 25 - i;
             float f = p_70672_2_ * (float)j;
@@ -1317,24 +1534,152 @@
       }
    }
 
+   // Magma - keep old damageEntity for forge
    protected void func_70665_d(DamageSource p_70665_1_, float p_70665_2_) {
-      if (!this.func_180431_b(p_70665_1_)) {
-         p_70665_2_ = this.func_70655_b(p_70665_1_, p_70665_2_);
-         p_70665_2_ = this.func_70672_c(p_70665_1_, p_70665_2_);
-         float f2 = Math.max(p_70665_2_ - this.func_110139_bj(), 0.0F);
-         this.func_110149_m(this.func_110139_bj() - (p_70665_2_ - f2));
-         float f = p_70665_2_ - f2;
-         if (f > 0.0F && f < 3.4028235E37F && p_70665_1_.func_76346_g() instanceof ServerPlayerEntity) {
-            ((ServerPlayerEntity)p_70665_1_.func_76346_g()).func_195067_a(Stats.field_212735_F, Math.round(f * 10.0F));
+      damageEntityCB(p_70665_1_, p_70665_2_);
+   }
+
+   // Magma start - Calculate Buffs for Damage
+   private EntityDamageEvent calculateDebuffsAndCallCB(final DamageSource damageSrc, float damageAmount) {
+      final boolean human = this instanceof PlayerEntity;
+      float originalDamage = damageAmount;
+      Function<Double, Double> hardHat = f -> {
+         if ((damageSrc == DamageSource.field_82728_o || damageSrc == DamageSource.field_82729_p) && !LivingEntity.this.func_184582_a(EquipmentSlotType.HEAD).func_190926_b()) {
+            return -(f - (f * 0.75F));
          }
+         return -0.0;
+      };
+      float hardHatModifier = hardHat.apply((double) damageAmount).floatValue();
+      damageAmount += hardHatModifier;
+      Function<Double, Double> blocking = f -> -((LivingEntity.this.func_184583_d(damageSrc)) ? f : 0.0);
+      float blockingModifier = blocking.apply((double) damageAmount).floatValue();
+      damageAmount += blockingModifier;
+      Function<Double, Double> armor = f -> -(f - LivingEntity.this.func_70655_b(damageSrc, f.floatValue()));
+      float armorModifier = armor.apply((double) damageAmount).floatValue();
+      damageAmount += armorModifier;
+      Function<Double, Double> resistance = f -> {
+         if (!damageSrc.func_151517_h() && LivingEntity.this.func_70644_a(Effects.field_76429_m) && damageSrc != DamageSource.field_76380_i) {
+            int i = (LivingEntity.this.func_70660_b(Effects.field_76429_m).func_76458_c() + 1) * 5;
+            int j = 25 - i;
+            float f1 = f.floatValue() * (float) j;
+            return -(f - (f1 / 25.0F));
+         }
+         return -0.0;
+      };
+      float resistanceModifier = resistance.apply((double) damageAmount).floatValue();
+      damageAmount += resistanceModifier;
+      Function<Double, Double> magic = f -> -(f - LivingEntity.this.func_70672_c(damageSrc, f.floatValue()));
+      float magicModifier = magic.apply((double) damageAmount).floatValue();
+      damageAmount += magicModifier;
+      Function<Double, Double> absorption = f -> -(Math.max(f - Math.max(f - LivingEntity.this.func_110139_bj(), 0.0F), 0.0F));
+      float absorptionModifier = absorption.apply((double) damageAmount).floatValue();
+      EntityDamageEvent event = CraftEventFactory
+          .handleLivingEntityDamageEvent(this, damageSrc, originalDamage, hardHatModifier, blockingModifier, armorModifier, resistanceModifier, magicModifier, absorptionModifier, hardHat, blocking,
+              armor, resistance, magic, absorption);
+      return event;
+   }
+   // Magma end
 
-         if (f2 != 0.0F) {
-            float f1 = this.func_110143_aJ();
-            this.func_70606_j(f1 - f2);
-            this.func_110142_aN().func_94547_a(p_70665_1_, f1, f2);
-            this.func_110149_m(this.func_110139_bj() - f2);
+   protected boolean damageEntityCB(DamageSource damageSrc, float damageAmount) {
+      if (!this.func_180431_b(damageSrc)) {
+         // Check if entity is a "human" aka player
+         final boolean human = this instanceof PlayerEntity;
+         final float originalDamage = damageAmount;
+         // Cauldron start - apply forge damage hook
+         damageAmount= ForgeHooks.onLivingHurt(this, damageSrc, damageAmount);
+         // If the damage is negative return true
+         if (damageAmount < 0) return true;
+         // Thermos detect null damage
+         final boolean nulldmg = damageAmount == 0;
+         // Cauldron end
+
+         EntityDamageEvent event = calculateDebuffsAndCallCB(damageSrc, damageAmount);
+
+         if (event.isCancelled()) {
+            return false;
          }
+         damageAmount = (float) event.getFinalDamage();
+
+         if (nulldmg) return true; // Preclude any stupidity with null head items
+
+         // Resistance
+         if (event.getDamage(DamageModifier.RESISTANCE) < 0) {
+            float f3 = (float) -event.getDamage(DamageModifier.RESISTANCE);
+            if (f3 > 0.0F && f3 < 3.4028235E37F) {
+               if (this instanceof ServerPlayerEntity) {
+                  ((ServerPlayerEntity) this).func_195067_a(Stats.field_212739_K, Math.round(f3 * 10.0F));
+               } else if (damageSrc.func_76346_g() instanceof ServerPlayerEntity) {
+                  ((ServerPlayerEntity) damageSrc.func_76346_g()).func_195067_a(Stats.field_212736_G, Math.round(f3 * 10.0F));
+               }
+            }
+         }
+         // Apply damage to helmet
+         if ((damageSrc == DamageSource.field_82728_o || damageSrc == DamageSource.field_82729_p) && this.func_184582_a(EquipmentSlotType.HEAD) != null) {
+            this.func_184582_a(EquipmentSlotType.HEAD).func_222118_a((int) (event.getDamage() * 4.0F + this.field_70146_Z.nextFloat() * event.getDamage() * 2.0F), this, (entityliving) -> entityliving.func_213361_c(EquipmentSlotType.HEAD));
+         }
+         // Apply damage to armor
+         if (!damageSrc.func_76363_c()) {
+            float armorDamage = (float) (event.getDamage() + event.getDamage(DamageModifier.BLOCKING) + event.getDamage(DamageModifier.HARD_HAT));
+            this.func_70675_k(armorDamage);
+         }
+
+         // Apply blocking code // PAIL: steal from above
+         if (event.getDamage(DamageModifier.BLOCKING) < 0) {
+            this.field_70170_p.func_72960_a(this, (byte) 29); // SPIGOT-4635 - shield damage sound
+            this.func_184590_k((float) -event.getDamage(DamageModifier.BLOCKING));
+            Entity entity = damageSrc.func_76364_f();
+            if (entity instanceof LivingEntity) {
+               this.func_190629_c((LivingEntity) entity);
+            }
+         }
+         damageAmount = Math.max(damageAmount - this.func_110139_bj(), 0.0F);
+         float absorptionModifier = (float) -event.getDamage(EntityDamageEvent.DamageModifier.ABSORPTION);
+         this.func_110149_m(Math.max(this.func_110139_bj() - absorptionModifier, 0.0F));
+         float f2 = absorptionModifier;
+         if (f2 > 0.0F && f2 < 3.4028235E37F && this instanceof PlayerEntity) {
+            ((PlayerEntity) this).func_195067_a(Stats.field_212738_J, Math.round(f2 * 10.0F));
+         }
+         if (f2 > 0.0F && f2 < 3.4028235E37F && damageSrc.func_76346_g() instanceof ServerPlayerEntity) {
+            ((ServerPlayerEntity) damageSrc.func_76346_g()).func_195067_a(Stats.field_212735_F, Math.round(f2 * 10.0F));
+         }
+         if (damageAmount > 0 || !human) {
+            if (human) {
+               // PAIL: Be sure to drag all this code from the EntityHuman subclass each update.
+               ((PlayerEntity) this).func_71020_j(damageSrc.func_76345_d());
+               if (damageAmount < 3.4028235E37F) {
+                  ((PlayerEntity) this).func_195067_a(Stats.field_188112_z, Math.round(damageAmount * 10.0F));
+               }
+            }
+            // CraftBukkit end
+            float f3 = this.func_110143_aJ();
+            this.func_70606_j(f3 - damageAmount);
+            this.func_110142_aN().func_94547_a(damageSrc, f3, damageAmount);
+            // CraftBukkit start
+            if (!human) {
+               this.func_110149_m(this.func_110139_bj() - damageAmount);
+            }
+            return true;
+         } else {
+            // Duplicate triggers if blocking
+            if (event.getDamage(DamageModifier.BLOCKING) < 0) {
+               if (this instanceof ServerPlayerEntity) {
+                  CriteriaTriggers.field_192128_h.func_192200_a((ServerPlayerEntity) this, damageSrc, damageAmount, originalDamage, true);
+                  f2 = (float) -event.getDamage(DamageModifier.BLOCKING);
+                  if (f2 > 0.0F && f2 < 3.4028235E37F) {
+                     ((ServerPlayerEntity) this).func_195067_a(Stats.field_212737_I, Math.round(originalDamage * 10.0F));
+                  }
+               }
+               if (damageSrc.func_76346_g() instanceof ServerPlayerEntity) {
+                  CriteriaTriggers.field_192127_g.func_192220_a((ServerPlayerEntity) damageSrc.func_76346_g(), this, damageSrc, damageAmount, originalDamage, true);
+               }
+               return false;
+            } else {
+               return originalDamage > 0;
+            }
+            // CraftBukkit end
+         }
       }
+      return false; // CraftBukkit
    }
 
    public CombatTracker func_110142_aN() {
@@ -1385,6 +1730,8 @@
    }
 
    public void func_226292_a_(Hand p_226292_1_, boolean p_226292_2_) {
+      ItemStack stack = this.func_184586_b(p_226292_1_);
+      if (!stack.func_190926_b() && stack.onEntitySwing(this)) return;
       if (!this.field_82175_bq || this.field_110158_av >= this.func_82166_i() / 2 || this.field_110158_av < 0) {
          this.field_110158_av = -1;
          this.field_82175_bq = true;
@@ -1562,6 +1909,7 @@
    public AbstractAttributeMap func_110140_aT() {
       if (this.field_110155_d == null) {
          this.field_110155_d = new AttributeMap();
+         this.craftAttributes = new CraftAttributeMap(field_110155_d); // CraftBukkit
       }
 
       return this.field_110155_d;
@@ -1771,15 +2119,16 @@
       }
 
       this.field_70160_al = true;
+      net.minecraftforge.common.ForgeHooks.onLivingJump(this);
    }
 
    @OnlyIn(Dist.CLIENT)
    protected void func_203010_cG() {
-      this.func_213317_d(this.func_213322_ci().func_72441_c(0.0D, (double)-0.04F, 0.0D));
+      this.func_213317_d(this.func_213322_ci().func_72441_c(0.0D, (double)-0.04F  * this.func_110148_a(SWIM_SPEED).func_111126_e(), 0.0D));
    }
 
    protected void func_180466_bG(Tag<Fluid> p_180466_1_) {
-      this.func_213317_d(this.func_213322_ci().func_72441_c(0.0D, (double)0.04F, 0.0D));
+      this.func_213317_d(this.func_213322_ci().func_72441_c(0.0D, (double)0.04F * this.func_110148_a(SWIM_SPEED).func_111126_e(), 0.0D));
    }
 
    protected float func_189749_co() {
@@ -1789,11 +2138,15 @@
    public void func_213352_e(Vec3d p_213352_1_) {
       if (this.func_70613_aW() || this.func_184186_bw()) {
          double d0 = 0.08D;
+         IAttributeInstance gravity = this.func_110148_a(ENTITY_GRAVITY);
          boolean flag = this.func_213322_ci().field_72448_b <= 0.0D;
          if (flag && this.func_70644_a(Effects.field_204839_B)) {
-            d0 = 0.01D;
+            if (!gravity.func_180374_a(SLOW_FALLING)) gravity.func_111121_a(SLOW_FALLING);
             this.field_70143_R = 0.0F;
+         } else if (gravity.func_180374_a(SLOW_FALLING)) {
+            gravity.func_111124_b(SLOW_FALLING);
          }
+         d0 = gravity.func_111126_e();
 
          if (!this.func_70090_H() || this instanceof PlayerEntity && ((PlayerEntity)this).field_71075_bZ.field_75100_b) {
             if (!this.func_180799_ab() || this instanceof PlayerEntity && ((PlayerEntity)this).field_71075_bZ.field_75100_b) {
@@ -1838,11 +2191,12 @@
                   }
 
                   if (this.field_70122_E && !this.field_70170_p.field_72995_K) {
+                     if (func_70083_f(7) && !CraftEventFactory.callToggleGlideEvent(this, false).isCancelled()) // CraftBukkit
                      this.func_70052_a(7, false);
                   }
                } else {
                   BlockPos blockpos = this.func_226270_aj_();
-                  float f5 = this.field_70170_p.func_180495_p(blockpos).func_177230_c().func_208618_m();
+                  float f5 = this.field_70170_p.func_180495_p(blockpos).getSlipperiness(field_70170_p, blockpos, this);
                   float f7 = this.field_70122_E ? f5 * 0.91F : 0.91F;
                   this.func_213309_a(this.func_213335_r(f5), p_213352_1_);
                   this.func_213317_d(this.func_213362_f(this.func_213322_ci()));
@@ -1904,6 +2258,7 @@
                f = 0.96F;
             }
 
+            f1 *= (float)this.func_110148_a(SWIM_SPEED).func_111126_e();
             this.func_213309_a(f1, p_213352_1_);
             this.func_213315_a(MoverType.SELF, this.func_213322_ci());
             Vec3d vec3d1 = this.func_213322_ci();
@@ -1979,6 +2334,8 @@
    }
 
    public void func_70071_h_() {
+      SpigotTimings.timerEntityBaseTick.startTiming(); // Spigot
+      if (net.minecraftforge.common.ForgeHooks.onLivingUpdate(this)) return;
       super.func_70071_h_();
       this.func_184608_ct();
       this.func_205014_p();
@@ -2022,7 +2379,9 @@
 
             ItemStack itemstack1 = this.func_184582_a(equipmentslottype);
             if (!ItemStack.func_77989_b(itemstack1, itemstack)) {
+               if (!itemstack1.equals(itemstack, true))
                ((ServerWorld)this.field_70170_p).func_72863_F().func_217218_b(this, new SEntityEquipmentPacket(this.func_145782_y(), equipmentslottype, itemstack1));
+               net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.LivingEquipmentChangeEvent(this, equipmentslottype, itemstack, itemstack1));
                if (!itemstack.func_190926_b()) {
                   this.func_110140_aT().func_111148_a(itemstack.func_111283_C(equipmentslottype));
                }
@@ -2057,7 +2416,9 @@
          }
       }
 
+      SpigotTimings.timerEntityBaseTick.stopTiming(); // Spigot
       this.func_70636_d();
+      SpigotTimings.timerEntityTickRest.startTiming(); // Spigot
       double d0 = this.func_226277_ct_() - this.field_70169_q;
       double d1 = this.func_226281_cx_() - this.field_70166_s;
       float f2 = (float)(d0 * d0 + d1 * d1);
@@ -2135,6 +2496,7 @@
          this.field_70125_A = 0.0F;
       }
 
+      SpigotTimings.timerEntityTickRest.stopTiming(); // Spigot
    }
 
    protected float func_110146_f(float p_110146_1_, float p_110146_2_) {
@@ -2209,6 +2571,7 @@
 
       this.func_213293_j(d1, d3, d5);
       this.field_70170_p.func_217381_Z().func_76320_a("ai");
+      SpigotTimings.timerEntityAI.startTiming(); // Spigot
       if (this.func_70610_aX()) {
          this.field_70703_bu = false;
          this.field_70702_br = 0.0F;
@@ -2218,6 +2581,7 @@
          this.func_70626_be();
          this.field_70170_p.func_217381_Z().func_76319_b();
       }
+      SpigotTimings.timerEntityAI.stopTiming(); // Spigot
 
       this.field_70170_p.func_217381_Z().func_76319_b();
       this.field_70170_p.func_217381_Z().func_76320_a("jump");
@@ -2242,7 +2606,9 @@
       this.field_191988_bg *= 0.98F;
       this.func_184616_r();
       AxisAlignedBB axisalignedbb = this.func_174813_aQ();
+      SpigotTimings.timerEntityAIMove.startTiming(); // Spigot
       this.func_213352_e(new Vec3d((double)this.field_70702_br, (double)this.field_70701_bs, (double)this.field_191988_bg));
+      SpigotTimings.timerEntityAIMove.stopTiming(); // Spigot
       this.field_70170_p.func_217381_Z().func_76319_b();
       this.field_70170_p.func_217381_Z().func_76320_a("push");
       if (this.field_204807_bs > 0) {
@@ -2250,7 +2616,9 @@
          this.func_204801_a(axisalignedbb, this.func_174813_aQ());
       }
 
+      SpigotTimings.timerEntityAICollision.startTiming(); // Spigot
       this.func_85033_bc();
+      SpigotTimings.timerEntityAICollision.stopTiming(); // Spigot
       this.field_70170_p.func_217381_Z().func_76319_b();
    }
 
@@ -2273,6 +2641,7 @@
       }
 
       if (!this.field_70170_p.field_72995_K) {
+         if (flag != this.func_70083_f(7) && !CraftEventFactory.callToggleGlideEvent(this, flag).isCancelled()) // CraftBukkit
          this.func_70052_a(7, flag);
       }
 
@@ -2417,11 +2786,11 @@
    }
 
    public boolean func_70067_L() {
-      return !this.field_70128_L;
+      return !this.field_70128_L && this.collides; // CraftBukkit
    }
 
    public boolean func_70104_M() {
-      return this.func_70089_S() && !this.func_70617_f_();
+      return this.func_70089_S() && !this.func_70617_f_() && this.collides; // CraftBukkit
    }
 
    protected void func_70018_K() {
@@ -2474,13 +2843,22 @@
 
    private void func_184608_ct() {
       if (this.func_184587_cr()) {
-         if (ItemStack.func_185132_d(this.func_184586_b(this.func_184600_cs()), this.field_184627_bm)) {
+         ItemStack itemstack = this.func_184586_b(this.func_184600_cs());
+         if (net.minecraftforge.common.ForgeHooks.canContinueUsing(this.field_184627_bm, itemstack)) this.field_184627_bm = itemstack;
+         if (itemstack == this.field_184627_bm) {
+
+            if (!this.field_184627_bm.func_190926_b()) {
+               field_184628_bn = net.minecraftforge.event.ForgeEventFactory.onItemUseTick(this, field_184627_bm, field_184628_bn);
+               if (field_184628_bn > 0)
+                  field_184627_bm.onUsingTick(this, field_184628_bn);
+            }
+
             this.field_184627_bm.func_222121_b(this.field_70170_p, this, this.func_184605_cv());
             if (this.func_226299_p_()) {
                this.func_226293_b_(this.field_184627_bm, 5);
             }
 
-            if (--this.field_184628_bn == 0 && !this.field_70170_p.field_72995_K && !this.field_184627_bm.func_222122_m()) {
+            if (--this.field_184628_bn <= 0 && !this.field_70170_p.field_72995_K && !this.field_184627_bm.func_222122_m()) {
                this.func_71036_o();
             }
          } else {
@@ -2522,8 +2900,10 @@
    public void func_184598_c(Hand p_184598_1_) {
       ItemStack itemstack = this.func_184586_b(p_184598_1_);
       if (!itemstack.func_190926_b() && !this.func_184587_cr()) {
+         int duration = net.minecraftforge.event.ForgeEventFactory.onItemUseStart(this, itemstack, itemstack.func_77988_m());
+         if (duration <= 0) return;
          this.field_184627_bm = itemstack;
-         this.field_184628_bn = itemstack.func_77988_m();
+         this.field_184628_bn = duration;
          if (!this.field_70170_p.field_72995_K) {
             this.func_204802_c(1, true);
             this.func_204802_c(2, p_184598_1_ == Hand.OFF_HAND);
@@ -2583,6 +2963,9 @@
          vec3d1 = vec3d1.func_178789_a(-this.field_70125_A * ((float)Math.PI / 180F));
          vec3d1 = vec3d1.func_178785_b(-this.field_70177_z * ((float)Math.PI / 180F));
          vec3d1 = vec3d1.func_72441_c(this.func_226277_ct_(), this.func_226280_cw_(), this.func_226281_cx_());
+         if (this.field_70170_p instanceof ServerWorld) //Forge: Fix MC-2518 spawnParticle is nooped on server, need to use server specific variant
+            ((ServerWorld)this.field_70170_p).func_195598_a(new ItemParticleData(ParticleTypes.field_197591_B, p_195062_1_), vec3d1.field_72450_a, vec3d1.field_72448_b, vec3d1.field_72449_c, 1, vec3d.field_72450_a, vec3d.field_72448_b + 0.05D, vec3d.field_72449_c, 0.0D);
+         else
          this.field_70170_p.func_195594_a(new ItemParticleData(ParticleTypes.field_197591_B, p_195062_1_), vec3d1.field_72450_a, vec3d1.field_72448_b, vec3d1.field_72449_c, vec3d.field_72450_a, vec3d.field_72448_b + 0.05D, vec3d.field_72449_c);
       }
 
@@ -2594,7 +2977,26 @@
       } else {
          if (!this.field_184627_bm.func_190926_b() && this.func_184587_cr()) {
             this.func_226293_b_(this.field_184627_bm, 16);
-            this.func_184611_a(this.func_184600_cs(), this.field_184627_bm.func_77950_b(this.field_70170_p, this));
+            ItemStack copy = this.field_184627_bm.func_77946_l();
+            ItemStack stack = net.minecraftforge.event.ForgeEventFactory.onItemUseFinish(this, copy, func_184605_cv(), this.field_184627_bm.func_77950_b(this.field_70170_p, this)); // Magma - TODO Implment this
+            // CraftBukkit start - fire PlayerItemConsumeEvent
+            ItemStack itemstack;
+            if (this instanceof ServerPlayerEntity) {
+               org.bukkit.inventory.ItemStack craftItem = CraftItemStack.asBukkitCopy(this.field_184627_bm);
+               PlayerItemConsumeEvent event = new PlayerItemConsumeEvent((Player) this.getBukkitEntity(), craftItem);
+               field_70170_p.getServerCB().getPluginManager().callEvent(event);
+               if (event.isCancelled()) {
+                  // Update client
+                  ((ServerPlayerEntity) this).getBukkitEntity().updateInventory();
+                  ((ServerPlayerEntity) this).getBukkitEntity().updateScaledHealth();
+                  return;
+               }
+               itemstack = (craftItem.equals(event.getItem())) ? this.field_184627_bm.func_77950_b(this.field_70170_p, this) : CraftItemStack.asNMSCopy(event.getItem()).func_77950_b(field_70170_p, this);
+            } else {
+               itemstack = this.field_184627_bm.func_77950_b(this.field_70170_p, this);
+            }
+            this.func_184611_a(this.func_184600_cs(), itemstack);
+            // CraftBukkit end
             this.func_184602_cy();
          }
 
@@ -2615,7 +3017,11 @@
 
    public void func_184597_cx() {
       if (!this.field_184627_bm.func_190926_b()) {
+         if (!net.minecraftforge.event.ForgeEventFactory.onUseItemStop(this, field_184627_bm, this.func_184605_cv())) {
+            ItemStack copy = this instanceof PlayerEntity ? field_184627_bm.func_77946_l() : null;
          this.field_184627_bm.func_77974_b(this.field_70170_p, this, this.func_184605_cv());
+           if (copy != null && field_184627_bm.func_190926_b()) net.minecraftforge.event.ForgeEventFactory.onPlayerDestroyItem((PlayerEntity)this, copy, func_184600_cs());
+         }
          if (this.field_184627_bm.func_222122_m()) {
             this.func_184608_ct();
          }
@@ -2687,9 +3093,18 @@
 
          if (flag1) {
             this.func_70634_a(p_213373_1_, d3, p_213373_5_);
-            if (world.func_226669_j_(this) && !world.func_72953_d(this.func_174813_aQ())) {
-               flag = true;
+            // CraftBukkit start - Teleport event
+            // this.enderTeleportTo(d0, d6, d2);
+            EntityTeleportEvent teleport = new EntityTeleportEvent(this.getBukkitEntity(), new Location(this.field_70170_p.getWorldCB(), d0, d1, d2), new Location(this.field_70170_p.getWorldCB(), p_213373_1_, p_213373_3_, p_213373_5_));
+            this.field_70170_p.getServerCB().getPluginManager().callEvent(teleport);
+            if (!teleport.isCancelled()) {
+               Location to = teleport.getTo();
+               this.func_70634_a(to.getX(), to.getY(), to.getZ());
+               if (world.func_226669_j_(this) && !world.func_72953_d(this.func_174813_aQ())) {
+                  flag = true;
+               }
             }
+            // CraftBukkit end
          }
       }
 
@@ -2772,16 +3187,16 @@
 
    private boolean func_213359_p() {
       return this.func_213374_dv().map((p_213347_1_) -> {
-         return this.field_70170_p.func_180495_p(p_213347_1_).func_177230_c() instanceof BedBlock;
+         return net.minecraftforge.event.ForgeEventFactory.fireSleepingLocationCheck(this, p_213347_1_);
       }).orElse(false);
    }
 
    public void func_213366_dy() {
       this.func_213374_dv().filter(this.field_70170_p::func_175667_e).ifPresent((p_213368_1_) -> {
          BlockState blockstate = this.field_70170_p.func_180495_p(p_213368_1_);
-         if (blockstate.func_177230_c() instanceof BedBlock) {
-            this.field_70170_p.func_180501_a(p_213368_1_, blockstate.func_206870_a(BedBlock.field_176471_b, Boolean.valueOf(false)), 3);
-            Vec3d vec3d = BedBlock.func_220172_a(this.func_200600_R(), this.field_70170_p, p_213368_1_, 0).orElseGet(() -> {
+         if (blockstate.isBed(this.field_70170_p, p_213368_1_, this)) {
+            blockstate.setBedOccupied(field_70170_p, p_213368_1_, this, false);
+            Vec3d vec3d = blockstate.getBedSpawnPosition(this.func_200600_R(), field_70170_p, p_213368_1_, this).orElseGet(()-> {
                BlockPos blockpos = p_213368_1_.func_177984_a();
                return new Vec3d((double)blockpos.func_177958_n() + 0.5D, (double)blockpos.func_177956_o() + 0.1D, (double)blockpos.func_177952_p() + 0.5D);
             });
@@ -2797,7 +3212,9 @@
    @OnlyIn(Dist.CLIENT)
    public Direction func_213376_dz() {
       BlockPos blockpos = this.func_213374_dv().orElse((BlockPos)null);
-      return blockpos != null ? BedBlock.func_220174_a(this.field_70170_p, blockpos) : null;
+      if (blockpos == null) return Direction.UP;
+      BlockState state = this.field_70170_p.func_180495_p(blockpos);
+      return !state.isBed(field_70170_p, blockpos, this) ? Direction.UP : state.getBedDirection(field_70170_p, blockpos);
    }
 
    public boolean func_70094_T() {
@@ -2833,7 +3250,7 @@
       if (item.func_219971_r()) {
          for(Pair<EffectInstance, Float> pair : item.func_219967_s().func_221464_f()) {
             if (!p_213349_2_.field_72995_K && pair.getLeft() != null && p_213349_2_.field_73012_v.nextFloat() < pair.getRight()) {
-               p_213349_3_.func_195064_c(new EffectInstance(pair.getLeft()));
+               p_213349_3_.addPotionEffect(new EffectInstance(pair.getLeft()), Cause.FOOD); // CraftBukkit
             }
          }
       }
@@ -2866,4 +3283,77 @@
    public void func_213334_d(Hand p_213334_1_) {
       this.func_213361_c(p_213334_1_ == Hand.MAIN_HAND ? EquipmentSlotType.MAINHAND : EquipmentSlotType.OFFHAND);
    }
+
+   /* ==== FORGE START ==== */
+   /***
+    * Removes all potion effects that have curativeItem as a curative item for its effect
+    * @param curativeItem The itemstack we are using to cure potion effects
+    */
+   public boolean curePotionEffects(ItemStack curativeItem) {
+      if (this.field_70170_p.field_72995_K)
+         return false;
+      boolean ret = false;
+      Iterator<EffectInstance> itr = this.field_70713_bf.values().iterator();
+      while (itr.hasNext()) {
+         EffectInstance effect = itr.next();
+         if (effect.isCurativeItem(curativeItem) && !net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.PotionEvent.PotionRemoveEvent(this, effect))) {
+            this.func_70688_c(effect);
+            itr.remove();
+            ret = true;
+            this.field_70752_e = true;
+         }
+      }
+      return ret;
+   }
+
+   /**
+    * Returns true if the entity's rider (EntityPlayer) should face forward when mounted.
+    * currently only used in vanilla code by pigs.
+    *
+    * @param player The player who is riding the entity.
+    * @return If the player should orient the same direction as this entity.
+    */
+   public boolean shouldRiderFaceForward(PlayerEntity player) {
+      return this instanceof net.minecraft.entity.passive.PigEntity;
+   }
+
+   private final net.minecraftforge.common.util.LazyOptional<?>[] handlers = net.minecraftforge.items.wrapper.EntityEquipmentInvWrapper.create(this);
+
+   @Override
+   public <T> net.minecraftforge.common.util.LazyOptional<T> getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable Direction facing) {
+      if (this.func_70089_S() && capability == net.minecraftforge.items.CapabilityItemHandler.ITEM_HANDLER_CAPABILITY) {
+         if (facing == null) return handlers[2].cast();
+         else if (facing.func_176740_k().func_200128_b()) return handlers[0].cast();
+         else if (facing.func_176740_k().func_176722_c()) return handlers[1].cast();
+      }
+      return super.getCapability(capability, facing);
+   }
+
+   @Override
+   public void remove(boolean keepData) {
+      super.remove(keepData);
+      if (!keepData) {
+         for (int x = 0; x < handlers.length; x++)
+            handlers[x].invalidate();
+      }
+   }
+
+   // CraftBukkit start
+   private static class ProcessableEffect {
+
+      private Effect type;
+      private EffectInstance effect;
+      private final EntityPotionEffectEvent.Cause cause;
+
+      private ProcessableEffect(EffectInstance effect, EntityPotionEffectEvent.Cause cause) {
+         this.effect = effect;
+         this.cause = cause;
+      }
+
+      private ProcessableEffect(Effect type, EntityPotionEffectEvent.Cause cause) {
+         this.type = type;
+         this.cause = cause;
+      }
+   }
+   // CraftBukkit end
 }
