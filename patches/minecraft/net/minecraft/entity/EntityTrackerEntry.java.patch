--- ../src-base/minecraft/net/minecraft/entity/EntityTrackerEntry.java
+++ ../src-work/minecraft/net/minecraft/entity/EntityTrackerEntry.java
@@ -5,6 +5,7 @@
 import java.util.Collections;
 import java.util.List;
 import java.util.Set;
+import javax.annotation.Nullable;
 import net.minecraft.block.Block;
 import net.minecraft.entity.ai.attributes.AttributeMap;
 import net.minecraft.entity.ai.attributes.IAttributeInstance;
@@ -39,7 +40,6 @@
 import net.minecraft.entity.projectile.EntitySpectralArrow;
 import net.minecraft.entity.projectile.EntityTippedArrow;
 import net.minecraft.entity.projectile.EntityWitherSkull;
-import net.minecraft.init.Items;
 import net.minecraft.inventory.EntityEquipmentSlot;
 import net.minecraft.item.ItemMap;
 import net.minecraft.item.ItemStack;
@@ -64,8 +64,11 @@
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.MathHelper;
 import net.minecraft.world.storage.MapData;
+import net.minecraftforge.fml.common.FMLLog;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.entity.Player;
+import org.bukkit.event.player.PlayerVelocityEvent;
 
 public class EntityTrackerEntry
 {
@@ -148,23 +151,21 @@
         if (!list.equals(this.field_187263_w))
         {
             this.field_187263_w = list;
-            this.func_151259_a(new SPacketSetPassengers(this.field_73132_a));
+            this.func_151261_b(new SPacketSetPassengers(this.field_73132_a));
         }
 
-        if (this.field_73132_a instanceof EntityItemFrame && this.field_73136_m % 10 == 0)
+        if (this.field_73132_a instanceof EntityItemFrame /*&& this.updateCounter % 10 == 0*/) // CraftBukkit - Moved below, should always enter this block
         {
             EntityItemFrame entityitemframe = (EntityItemFrame)this.field_73132_a;
             ItemStack itemstack = entityitemframe.func_82335_i();
 
-            if (itemstack.func_77973_b() instanceof ItemMap)
+            if (this.field_73136_m % 10 == 0 && itemstack.func_77973_b() instanceof ItemMap)// CraftBukkit - Moved this.updateCounter % 10 logic here so item frames do not enter the other blocks
             {
-                MapData mapdata = Items.field_151098_aY.func_77873_a(itemstack, this.field_73132_a.field_70170_p);
-
-                for (EntityPlayer entityplayer : p_73122_1_)
+                MapData mapdata = ((ItemMap) itemstack.func_77973_b()).func_77873_a(itemstack, this.field_73132_a.field_70170_p);
+                for (EntityPlayerMP entityplayermp : field_73134_o)
                 {
-                    EntityPlayerMP entityplayermp = (EntityPlayerMP)entityplayer;
                     mapdata.func_76191_a(entityplayermp, itemstack);
-                    Packet<?> packet = Items.field_151098_aY.func_150911_c(itemstack, this.field_73132_a.field_70170_p, entityplayermp);
+                    Packet<?> packet = ((ItemMap) itemstack.func_77973_b()).func_150911_c(itemstack, this.field_73132_a.field_70170_p, entityplayermp);
 
                     if (packet != null)
                     {
@@ -211,7 +212,20 @@
                 Packet<?> packet1 = null;
                 boolean flag = j * j + k * k + l * l >= 128L || this.field_73136_m % 60 == 0;
                 boolean flag1 = Math.abs(k2 - this.field_73127_g) >= 1 || Math.abs(i - this.field_73139_h) >= 1;
+                // CraftBukkit start - Code moved from below
+                if (flag)
+                {
+                    this.field_73128_d = i1;
+                    this.field_73129_e = i2;
+                    this.field_73126_f = j2;
+                }
 
+                if (flag1)
+                {
+                    this.field_73127_g = k2;
+                    this.field_73139_h = i;
+                }
+                // CraftBukkit end
                 if (this.field_73136_m > 0 || this.field_73132_a instanceof EntityArrow)
                 {
                     if (j >= -32768L && j < 32768L && k >= -32768L && k < 32768L && l >= -32768L && l < 32768L && this.field_73142_u <= 400 && !this.field_73141_v && this.field_180234_y == this.field_73132_a.field_70122_E)
@@ -236,6 +250,11 @@
                     {
                         this.field_180234_y = this.field_73132_a.field_70122_E;
                         this.field_73142_u = 0;
+                        // CraftBukkit start - Refresh list of who can see a player before sending teleport packet
+                        if (this.field_73132_a instanceof EntityPlayerMP) {
+                            this.func_73125_b(new java.util.ArrayList<>(this.field_73134_o));
+                        }
+                        // CraftBukkit end
                         this.func_187261_c();
                         packet1 = new SPacketEntityTeleport(this.field_73132_a);
                     }
@@ -271,20 +290,6 @@
                 }
 
                 this.func_111190_b();
-
-                if (flag)
-                {
-                    this.field_73128_d = i1;
-                    this.field_73129_e = i2;
-                    this.field_73126_f = j2;
-                }
-
-                if (flag1)
-                {
-                    this.field_73127_g = k2;
-                    this.field_73139_h = i;
-                }
-
                 this.field_73141_v = false;
             }
 
@@ -303,7 +308,28 @@
 
         if (this.field_73132_a.field_70133_I)
         {
-            this.func_151261_b(new SPacketEntityVelocity(this.field_73132_a));
+            // this.sendToTrackingAndSelf(new SPacketEntityVelocity(this.trackedEntity));
+            // CraftBukkit start - Create PlayerVelocity event
+            boolean cancelled = false;
+
+            if (this.field_73132_a instanceof EntityPlayer) {
+                Player player = (Player) this.field_73132_a.getBukkitEntity();
+                org.bukkit.util.Vector velocity = player.getVelocity();
+
+                PlayerVelocityEvent event = new PlayerVelocityEvent(player, velocity.clone());
+                this.field_73132_a.field_70170_p.getServer().getPluginManager().callEvent(event);
+
+                if (event.isCancelled()) {
+                    cancelled = true;
+                } else if (!velocity.equals(event.getVelocity())) {
+                    player.setVelocity(event.getVelocity());
+                }
+            }
+
+            if (!cancelled) {
+                this.func_151261_b(new SPacketEntityVelocity(this.field_73132_a));
+            }
+            // CraftBukkit end
             this.field_73132_a.field_70133_I = false;
         }
     }
@@ -324,6 +350,11 @@
 
             if (!set.isEmpty())
             {
+                // CraftBukkit start - Send scaled max health
+                if (this.field_73132_a instanceof EntityPlayerMP) {
+                    ((EntityPlayerMP) this.field_73132_a).getBukkitEntity().injectScaledMaxHealth(set, false);
+                }
+                // CraftBukkit end
                 this.func_151261_b(new SPacketEntityProperties(this.field_73132_a.func_145782_y(), set));
             }
 
@@ -370,12 +401,23 @@
 
     public void func_73117_b(EntityPlayerMP p_73117_1_)
     {
+        org.spigotmc.AsyncCatcher.catchOp("player tracker update"); // Spigot
         if (p_73117_1_ != this.field_73132_a)
         {
             if (this.func_180233_c(p_73117_1_))
             {
                 if (!this.field_73134_o.contains(p_73117_1_) && (this.func_73121_d(p_73117_1_) || this.field_73132_a.field_98038_p))
                 {
+                    // CraftBukkit start - respect vanish API
+                    if (this.field_73132_a instanceof EntityPlayerMP) {
+                        Player player = ((EntityPlayerMP) this.field_73132_a).getBukkitEntity();
+                        if (!p_73117_1_.getBukkitEntity().canSee(player)) {
+                            return;
+                        }
+                    }
+
+                    p_73117_1_.field_71130_g.remove(Integer.valueOf(this.field_73132_a.func_145782_y()));
+                    // CraftBukkit end
                     this.field_73134_o.add(p_73117_1_);
                     Packet<?> packet = this.func_151260_c();
                     p_73117_1_.field_71135_a.func_147359_a(packet);
@@ -392,6 +434,14 @@
                         AttributeMap attributemap = (AttributeMap)((EntityLivingBase)this.field_73132_a).func_110140_aT();
                         Collection<IAttributeInstance> collection = attributemap.func_111160_c();
 
+                        // CraftBukkit start - If sending own attributes send scaled health instead of current maximum health
+                        if (this.field_73132_a.func_145782_y() == p_73117_1_.func_145782_y()) {
+                            // TODO: Maybe we should check for instanceof before casting to EntityPlayerMP?
+                            ((EntityPlayerMP) this.field_73132_a).getBukkitEntity().injectScaledMaxHealth(collection, false);
+                        }
+                        // CraftBukkit end
+
+
                         if (!collection.isEmpty())
                         {
                             p_73117_1_.field_71135_a.func_147359_a(new SPacketEntityProperties(this.field_73132_a.func_145782_y(), collection));
@@ -435,6 +485,11 @@
                         }
                     }
 
+                    // CraftBukkit start - Fix for nonsensical head yaw
+                    this.field_73140_i = MathHelper.func_76141_d(this.field_73132_a.func_70079_am() * 256.0F / 360.0F);
+                    this.func_151259_a(new SPacketEntityHeadLook(this.field_73132_a, (byte) field_73140_i));
+                    // CraftBukkit end
+
                     if (this.field_73132_a instanceof EntityLivingBase)
                     {
                         EntityLivingBase entitylivingbase = (EntityLivingBase)this.field_73132_a;
@@ -457,6 +512,7 @@
 
                     this.field_73132_a.func_184178_b(p_73117_1_);
                     p_73117_1_.func_184848_d(this.field_73132_a);
+                    net.minecraftforge.event.ForgeEventFactory.onStartEntityTracking(field_73132_a, p_73117_1_);
                 }
             }
             else if (this.field_73134_o.contains(p_73117_1_))
@@ -464,6 +520,7 @@
                 this.field_73134_o.remove(p_73117_1_);
                 this.field_73132_a.func_184203_c(p_73117_1_);
                 p_73117_1_.func_152339_d(this.field_73132_a);
+                net.minecraftforge.event.ForgeEventFactory.onStopEntityTracking(field_73132_a, p_73117_1_);
             }
         }
     }
@@ -489,13 +546,19 @@
         }
     }
 
+    @Nullable
     private Packet<?> func_151260_c()
     {
         if (this.field_73132_a.field_70128_L)
         {
-            field_151262_p.warn("Fetching addPacket for removed entity");
+            // CraftBukkit start - Remove useless error spam, just return
+            // LOGGER.warn("Fetching addPacket for removed entity");
+            return null;
         }
 
+        Packet pkt = net.minecraftforge.fml.common.network.internal.FMLNetworkHandler.getEntitySpawningPacket(this.field_73132_a);
+        if (pkt != null) return pkt;
+
         if (this.field_73132_a instanceof EntityPlayerMP)
         {
             return new SPacketSpawnPlayer((EntityPlayer)this.field_73132_a);
@@ -651,12 +714,14 @@
         }
         else
         {
-            throw new IllegalArgumentException("Don't know how to add " + this.field_73132_a.getClass() + "!");
+            FMLLog.log.warn(new IllegalArgumentException("Don't know how to add " + this.field_73132_a.getClass() + "!").getMessage() + "x:{}, y:{}x z:{}", this.field_73132_a.field_70165_t, this.field_73132_a.field_70163_u, this.field_73132_a.field_70161_v);
+            return null;
         }
     }
 
     public void func_73123_c(EntityPlayerMP p_73123_1_)
     {
+		org.spigotmc.AsyncCatcher.catchOp( "player tracker clear"); // Spigot
\ No newline at end of file
         if (this.field_73134_o.contains(p_73123_1_))
         {
             this.field_73134_o.remove(p_73123_1_);
