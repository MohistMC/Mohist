From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Fri, 28 Sep 2018 21:49:53 -0400
Subject: [PATCH] Fix issues with entity loss due to unloaded chunks

Vanilla has risk of losing entities by causing them to be
removed from all chunks if they try to move into an unloaded chunk.

This pretty much means high chance this entity will be lost in this
scenario.

There is another case that adding an entity to the world can fail if
the chunk isn't loaded.

Lots of the server is designed around addEntity never expecting to fail
for these reasons, nor is it really logical.

This change ensures the chunks are always loaded when entities are
added to the world, or a valid entity moves between chunks.

diff --git a/src/main/java/net/minecraft/server/WorldServer.java b/src/main/java/net/minecraft/server/WorldServer.java
index 0decbee892c532c0188b373728d8458c8cbbc0d9..a699c5e0b240fac3066e874e7d52f061d01e0c5a 100644
--- a/src/main/java/net/minecraft/server/WorldServer.java
+++ b/src/main/java/net/minecraft/server/WorldServer.java
@@ -703,11 +703,14 @@ public class WorldServer extends World {
         int k = MathHelper.floor(entity.locZ() / 16.0D);
 
         if (!entity.inChunk || entity.chunkX != i || entity.chunkY != j || entity.chunkZ != k) {
-            if (entity.inChunk && this.isChunkLoaded(entity.chunkX, entity.chunkZ)) {
-                this.getChunkAt(entity.chunkX, entity.chunkZ).a(entity, entity.chunkY);
+            // Paper start - remove entity if its in a chunk more correctly.
+            Chunk currentChunk = entity.getCurrentChunk();
+            if (currentChunk != null) {
+                currentChunk.removeEntity(entity);
             }
+            // Paper end
 
-            if (!entity.cc() && !this.isChunkLoaded(i, k)) {
+            if (!entity.valid && !entity.cc() && !this.isChunkLoaded(i, k)) { // Paper - always load chunks to register valid entities location
                 entity.inChunk = false;
             } else {
                 this.getChunkAt(i, k).a(entity);
@@ -1032,7 +1035,7 @@ public class WorldServer extends World {
                 return false;
             }
             // CraftBukkit end
-            IChunkAccess ichunkaccess = this.getChunkAt(MathHelper.floor(entity.locX() / 16.0D), MathHelper.floor(entity.locZ() / 16.0D), ChunkStatus.FULL, entity.attachedToPlayer);
+            IChunkAccess ichunkaccess = this.getChunkAt(MathHelper.floor(entity.locX() / 16.0D), MathHelper.floor(entity.locZ() / 16.0D), ChunkStatus.FULL, true); // Paper - always load chunks for entity adds
 
             if (!(ichunkaccess instanceof Chunk)) {
                 return false;
