From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 4 Jul 2018 02:13:59 -0400
Subject: [PATCH] Store counts for each Entity/Block Entity Type

Opens door for future patches to optimize performance

diff --git a/src/main/java/net/minecraft/server/Chunk.java b/src/main/java/net/minecraft/server/Chunk.java
index e1ac0c479ebfa2da69575db2032dd1415c4a41a5..f1b9b937e8ced0c718db463c94d716422113c396 100644
--- a/src/main/java/net/minecraft/server/Chunk.java
+++ b/src/main/java/net/minecraft/server/Chunk.java
@@ -56,15 +56,19 @@ public class Chunk implements IChunkAccess {
     }
 
     // Paper start
+    public final co.aikar.util.Counter<String> entityCounts = new co.aikar.util.Counter<>();
+    public final co.aikar.util.Counter<String> tileEntityCounts = new co.aikar.util.Counter<>();
     private class TileEntityHashMap extends java.util.HashMap<BlockPosition, TileEntity> {
         @Override
         public TileEntity put(BlockPosition key, TileEntity value) {
             TileEntity replaced = super.put(key, value);
             if (replaced != null) {
                 replaced.setCurrentChunk(null);
+                tileEntityCounts.decrement(replaced.getMinecraftKeyString());
             }
             if (value != null) {
                 value.setCurrentChunk(Chunk.this);
+                tileEntityCounts.increment(value.getMinecraftKeyString());
             }
             return replaced;
         }
@@ -74,6 +78,7 @@ public class Chunk implements IChunkAccess {
             TileEntity removed = super.remove(key);
             if (removed != null) {
                 removed.setCurrentChunk(null);
+                tileEntityCounts.decrement(removed.getMinecraftKeyString());
             }
             return removed;
         }
@@ -489,6 +494,7 @@ public class Chunk implements IChunkAccess {
             k = this.entitySlices.length - 1;
         }
 
+        if (!entity.inChunk || entity.getCurrentChunk() != this) entityCounts.increment(entity.getMinecraftKeyString()); // Paper
         entity.inChunk = true;
         entity.setCurrentChunk(this); // Paper
         entity.chunkX = this.loc.x;
@@ -522,6 +528,7 @@ public class Chunk implements IChunkAccess {
         if (!this.entitySlices[i].remove(entity)) {
             return;
         }
+        entityCounts.decrement(entity.getMinecraftKeyString());
         // Paper end
         this.entities.remove(entity); // Paper
     }
