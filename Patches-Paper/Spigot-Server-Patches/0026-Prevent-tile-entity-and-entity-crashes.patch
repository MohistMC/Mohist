From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Tue, 1 Mar 2016 23:52:34 -0600
Subject: [PATCH] Prevent tile entity and entity crashes


diff --git a/src/main/java/net/minecraft/server/TileEntity.java b/src/main/java/net/minecraft/server/TileEntity.java
index fa6400dccd4df635d696e0858c0c164a0f19b4a4..e2f3cec7420edbd284b531ca7d1d121459fc098c 100644
--- a/src/main/java/net/minecraft/server/TileEntity.java
+++ b/src/main/java/net/minecraft/server/TileEntity.java
@@ -194,7 +194,12 @@ public abstract class TileEntity implements KeyedObject { // Paper
             return IRegistry.BLOCK_ENTITY_TYPE.getKey(this.getTileType()) + " // " + this.getClass().getCanonicalName();
         });
         if (this.world != null) {
-            CrashReportSystemDetails.a(crashreportsystemdetails, this.position, this.getBlock());
+            // Paper start - Prevent TileEntity and Entity crashes
+            IBlockData block = this.getBlock();
+            if (block != null) {
+                CrashReportSystemDetails.a(crashreportsystemdetails, this.position, block);
+            }
+            // Paper end
             CrashReportSystemDetails.a(crashreportsystemdetails, this.position, this.world.getType(this.position));
         }
     }
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index b69d84baf8d318968ef171232e493a315f71814b..ca3b4c9f2f7e1b5425e8be4c3d11e3e881915e8b 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -665,11 +665,13 @@ public abstract class World implements GeneratorAccess, AutoCloseable {
 
                         gameprofilerfiller.exit();
                     } catch (Throwable throwable) {
-                        CrashReport crashreport = CrashReport.a(throwable, "Ticking block entity");
-                        CrashReportSystemDetails crashreportsystemdetails = crashreport.a("Block entity being ticked");
-
-                        tileentity.a(crashreportsystemdetails);
-                        throw new ReportedException(crashreport);
+                        // Paper start - Prevent tile entity and entity crashes
+                        System.err.println("TileEntity threw exception at " + tileentity.world.getWorld().getName() + ":" + tileentity.position.getX() + "," + tileentity.position.getY() + "," + tileentity.position.getZ());
+                        throwable.printStackTrace();
+                        tilesThisCycle--;
+                        this.tileEntityListTick.remove(tileTickPosition--);
+                        continue;
+                        // Paper end
                     }
                     // Spigot start
                     finally {
@@ -735,11 +737,12 @@ public abstract class World implements GeneratorAccess, AutoCloseable {
         try {
             consumer.accept(entity);
         } catch (Throwable throwable) {
-            CrashReport crashreport = CrashReport.a(throwable, "Ticking entity");
-            CrashReportSystemDetails crashreportsystemdetails = crashreport.a("Entity being ticked");
-
-            entity.appendEntityCrashDetails(crashreportsystemdetails);
-            throw new ReportedException(crashreport);
+            // Paper start - Prevent tile entity and entity crashes
+            System.err.println("Entity threw exception at " + entity.world.getWorld().getName() + ":" + entity.locX() + "," + entity.locY() + "," + entity.locZ());
+            throwable.printStackTrace();
+            entity.dead = true;
+            return;
+            // Paper end
         }
     }
 
