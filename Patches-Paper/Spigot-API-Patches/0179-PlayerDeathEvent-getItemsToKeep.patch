From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 11 Mar 2013 20:04:34 -0400
Subject: [PATCH] PlayerDeathEvent#getItemsToKeep

Exposes a mutable array on items a player should keep on death

Example Usage: https://gist.github.com/aikar/5bb202de6057a051a950ce1f29feb0b4

diff --git a/src/main/java/org/bukkit/event/entity/PlayerDeathEvent.java b/src/main/java/org/bukkit/event/entity/PlayerDeathEvent.java
index 07a52441a5cdd7e428a14b286d7cb5210e3efa97..1e97d04b3f3509f82d4cda1773909f91800bf5bc 100644
--- a/src/main/java/org/bukkit/event/entity/PlayerDeathEvent.java
+++ b/src/main/java/org/bukkit/event/entity/PlayerDeathEvent.java
@@ -17,6 +17,40 @@ public class PlayerDeathEvent extends EntityDeathEvent {
     private boolean keepLevel = false;
     private boolean keepInventory = false;
 
+    // Paper start
+    private List<ItemStack> itemsToKeep = new java.util.ArrayList<>();
+
+    /**
+     * A mutable collection to add items that the player should retain in their inventory on death (Similar to KeepInventory game rule)
+     *
+     * You <b>MUST</b> remove the item from the .getDrops() collection too or it will duplicate!
+     * <pre>{@code
+     *    {@literal @EventHandler(ignoreCancelled = true)}
+     *     public void onPlayerDeath(PlayerDeathEvent event) {
+     *         for (Iterator<ItemStack> iterator = event.getDrops().iterator(); iterator.hasNext(); ) {
+     *             ItemStack drop = iterator.next();
+     *             List<String> lore = drop.getLore();
+     *             if (lore != null && !lore.isEmpty()) {
+     *                 if (lore.get(0).contains("(SOULBOUND)")) {
+     *                     iterator.remove();
+     *                     event.getItemsToKeep().add(drop);
+     *                 }
+     *             }
+     *         }
+     *     }
+     * }</pre>
+     *
+     * Adding an item to this list that the player did not previously have will give them the item on death.
+     * An example case could be a "Note" that "You died at X/Y/Z coordinates"
+     *
+     * @return The list to hold items to keep
+     */
+    @NotNull
+    public List<ItemStack> getItemsToKeep() {
+        return itemsToKeep;
+    }
+    // Paper end
+
     public PlayerDeathEvent(@NotNull final Player player, @NotNull final List<ItemStack> drops, final int droppedExp, @Nullable final String deathMessage) {
         this(player, drops, droppedExp, 0, deathMessage);
     }
