From: mrapple <tony@oc.tc>
Date: Sun, 17 Feb 2013 23:15:32 -0600
Subject: [PATCH] Fire PlayerInteractEvent when anyone steps on a pressure
 plate

In order to not spam the PlayerInteractEvent, we need to keep track of wether or not a plugin allows/denys a player.

This does modify PlayerInteractEvent firing, but it shouldn't be 'breaking'.

diff --git a/src/main/java/net/minecraft/server/BlockPressurePlateBinary.java b/src/main/java/net/minecraft/server/BlockPressurePlateBinary.java
--- a/src/main/java/net/minecraft/server/BlockPressurePlateBinary.java
+++ b/src/main/java/net/minecraft/server/BlockPressurePlateBinary.java
@@ -9,6 +9,7 @@ public class BlockPressurePlateBinary extends BlockPressurePlateAbstract {
 
     public static final BlockStateBoolean POWERED = BlockStateBoolean.of("powered");
     private final BlockPressurePlateBinary.EnumMobType e;
+    public java.util.Map<Entity, Boolean> entitiesOnPlate = new java.util.WeakHashMap<Entity, Boolean>(); // SportBukkit
 
     protected BlockPressurePlateBinary(Material material, BlockPressurePlateBinary.EnumMobType blockpressureplatebinary_enummobtype) {
         super(material);
@@ -59,6 +60,8 @@ public class BlockPressurePlateBinary extends BlockPressurePlateAbstract {
             return 0;
         }
 
+        this.entitiesOnPlate.keySet().retainAll(list); // SportBukkit - forget entities that have stepped off the plate
+
         if (!list.isEmpty()) {
             Iterator iterator = list.iterator();
 
@@ -66,11 +69,25 @@ public class BlockPressurePlateBinary extends BlockPressurePlateAbstract {
                 Entity entity = (Entity) iterator.next();
 
                 // CraftBukkit start - Call interact event when turning on a pressure plate
-                if (this.getPower(world.getType(blockposition)) == 0) {
+                {
                     org.bukkit.World bworld = world.getWorld();
                     org.bukkit.plugin.PluginManager manager = world.getServer().getPluginManager();
                     org.bukkit.event.Cancellable cancellable;
 
+                    if(entity == null || entity.isIgnoreBlockTrigger()) continue;;
+
+                    // SportBukkit - if entity was already on the plate, re-use their previous result
+                    final Boolean result = this.entitiesOnPlate.get(entity);
+                    if(result != null) {
+                        if(result) {
+                            // interaction was allowed
+                            return 15;
+                        } else {
+                            // interaction was cancelled
+                            continue;
+                        }
+                    }
+
                     if (entity instanceof EntityHuman) {
                         cancellable = org.bukkit.craftbukkit.event.CraftEventFactory.callPlayerInteractEvent((EntityHuman) entity, org.bukkit.event.block.Action.PHYSICAL, blockposition, null, null, null);
                     } else {
@@ -78,10 +95,12 @@ public class BlockPressurePlateBinary extends BlockPressurePlateAbstract {
                         manager.callEvent((EntityInteractEvent) cancellable);
                     }
 
+                    // SportBukkit - save event result as long as the entity stays on the plate
+                    this.entitiesOnPlate.put(entity, !cancellable.isCancelled());
+
                     // We only want to block turning the plate on if all events are cancelled
-                    if (cancellable.isCancelled()) {
+                    if (cancellable.isCancelled())
                         continue;
-                    }
                 }
                 // CraftBukkit end
 
