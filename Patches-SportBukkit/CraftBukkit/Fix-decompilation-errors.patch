From: Jedediah Smith <jedediah@silencegreys.com>
Date: Tue, 1 Mar 2016 05:48:53 -0500
Subject: [PATCH] Fix decompilation errors


diff --git a/src/main/java/net/minecraft/server/EnumProtocol.java b/src/main/java/net/minecraft/server/EnumProtocol.java
--- a/src/main/java/net/minecraft/server/EnumProtocol.java
+++ b/src/main/java/net/minecraft/server/EnumProtocol.java
@@ -152,7 +152,7 @@ public enum EnumProtocol {
     }
 
     protected EnumProtocol a(EnumProtocolDirection enumprotocoldirection, Class<? extends Packet<?>> oclass) {
-        Object object = (BiMap) this.h.get(enumprotocoldirection);
+        BiMap<Integer, Class<? extends Packet<?>>> object = (BiMap) this.h.get(enumprotocoldirection); // SportBukkit - fix decomp error
 
         if (object == null) {
             object = HashBiMap.create();
diff --git a/src/main/java/net/minecraft/server/GameProfileBanList.java b/src/main/java/net/minecraft/server/GameProfileBanList.java
--- a/src/main/java/net/minecraft/server/GameProfileBanList.java
+++ b/src/main/java/net/minecraft/server/GameProfileBanList.java
@@ -52,7 +52,9 @@ public class GameProfileBanList extends JsonList<GameProfile, GameProfileBanEntr
         return (GameProfile) gameprofilebanentry.getKey();
     }
 
+    /* SportBukkit - fix decomp error
     protected String a(Object object) {
         return this.b((GameProfile) object);
     }
+    SportBukkit */
 }
diff --git a/src/main/java/net/minecraft/server/Item.java b/src/main/java/net/minecraft/server/Item.java
--- a/src/main/java/net/minecraft/server/Item.java
+++ b/src/main/java/net/minecraft/server/Item.java
@@ -33,7 +33,7 @@ public class Item {
     private String name;
 
     public static int getId(Item item) {
-        return item == null ? 0 : Item.REGISTRY.a((Object) item);
+        return item == null ? 0 : Item.REGISTRY.a(item); // SportBukkit - fix decomp error
     }
 
     public static Item getById(int i) {
diff --git a/src/main/java/net/minecraft/server/OpList.java b/src/main/java/net/minecraft/server/OpList.java
--- a/src/main/java/net/minecraft/server/OpList.java
+++ b/src/main/java/net/minecraft/server/OpList.java
@@ -28,7 +28,7 @@ public class OpList extends JsonList<GameProfile, OpListEntry> {
         return astring;
     }
 
-    public int a(GameProfile gameprofile) {
+    public int getLevel(GameProfile gameprofile) { // SportBukkit - rename method to avoid decomp error
         OpListEntry oplistentry = (OpListEntry) this.get(gameprofile);
 
         return oplistentry != null ? oplistentry.a() : 0;
@@ -59,8 +59,4 @@ public class OpList extends JsonList<GameProfile, OpListEntry> {
 
         return (GameProfile) oplistentry.getKey();
     }
-
-    protected String a(Object object) {
-        return this.c((GameProfile) object);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketEncoder.java b/src/main/java/net/minecraft/server/PacketEncoder.java
--- a/src/main/java/net/minecraft/server/PacketEncoder.java
+++ b/src/main/java/net/minecraft/server/PacketEncoder.java
@@ -42,7 +42,7 @@ public class PacketEncoder extends MessageToByteEncoder<Packet<?>> {
         }
     }
 
-    protected void encode(ChannelHandlerContext channelhandlercontext, Object object, ByteBuf bytebuf) throws Exception {
+    protected void encode(ChannelHandlerContext channelhandlercontext, Packet<?> object, ByteBuf bytebuf) throws Exception { // SportBukkit - fix decomp error
         this.a(channelhandlercontext, (Packet) object, bytebuf);
     }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayInUseEntity.java b/src/main/java/net/minecraft/server/PacketPlayInUseEntity.java
--- a/src/main/java/net/minecraft/server/PacketPlayInUseEntity.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInUseEntity.java
@@ -17,7 +17,7 @@ public class PacketPlayInUseEntity implements Packet<PacketListenerPlayIn> {
         this.action = PacketPlayInUseEntity.EnumEntityUseAction.ATTACK;
     }
 
-    public void a(PacketDataSerializer packetdataserializer) throws IOException {
+    public void a(PacketDataSerializer packetdataserializer) { // SportBukkit - remove throws
         this.a = packetdataserializer.g();
         this.action = (PacketPlayInUseEntity.EnumEntityUseAction) packetdataserializer.a(PacketPlayInUseEntity.EnumEntityUseAction.class);
         if (this.action == PacketPlayInUseEntity.EnumEntityUseAction.INTERACT_AT) {
@@ -30,7 +30,7 @@ public class PacketPlayInUseEntity implements Packet<PacketListenerPlayIn> {
 
     }
 
-    public void b(PacketDataSerializer packetdataserializer) throws IOException {
+    public void b(PacketDataSerializer packetdataserializer) { // SportBukkit - remove throws
         packetdataserializer.d(this.a);
         packetdataserializer.a((Enum) this.action);
         if (this.action == PacketPlayInUseEntity.EnumEntityUseAction.INTERACT_AT) {
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutNamedSoundEffect.java b/src/main/java/net/minecraft/server/PacketPlayOutNamedSoundEffect.java
--- a/src/main/java/net/minecraft/server/PacketPlayOutNamedSoundEffect.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutNamedSoundEffect.java
@@ -37,7 +37,7 @@ public class PacketPlayOutNamedSoundEffect implements Packet<PacketListenerPlayO
     }
 
     public void b(PacketDataSerializer packetdataserializer) throws IOException {
-        packetdataserializer.d(SoundEffect.a.a((Object) this.a));
+        packetdataserializer.d(SoundEffect.a.a(this.a)); // SportBukkit - fix decompile error
         packetdataserializer.a((Enum) this.b);
         packetdataserializer.writeInt(this.c);
         packetdataserializer.writeInt(this.d);
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityLiving.java b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityLiving.java
--- a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityLiving.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityLiving.java
@@ -26,7 +26,7 @@ public class PacketPlayOutSpawnEntityLiving implements Packet<PacketListenerPlay
     public PacketPlayOutSpawnEntityLiving(EntityLiving entityliving) {
         this.a = entityliving.getId();
         this.b = entityliving.getUniqueID();
-        this.c = EntityTypes.b.a((Object) entityliving.getClass());
+        this.c = EntityTypes.b.a(entityliving.getClass()); // SportBukkit - fix decomp
         this.d = entityliving.locX;
         this.e = entityliving.locY;
         this.f = entityliving.locZ;
diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -727,7 +727,7 @@ public abstract class PlayerList {
 
     public void f(EntityPlayer entityplayer) {
         GameProfile gameprofile = entityplayer.getProfile();
-        int i = this.isOp(gameprofile) ? this.operators.a(gameprofile) : 0;
+        int i = this.isOp(gameprofile) ? this.operators.getLevel(gameprofile) : 0; // SportBukkit - rename method to avoid decomp error
 
         i = this.server.R() && this.server.worldServer[0].getWorldData().u() ? 4 : i;
         i = this.t ? 4 : i;
diff --git a/src/main/java/net/minecraft/server/ServerConnection.java b/src/main/java/net/minecraft/server/ServerConnection.java
--- a/src/main/java/net/minecraft/server/ServerConnection.java
+++ b/src/main/java/net/minecraft/server/ServerConnection.java
@@ -58,8 +58,10 @@ public class ServerConnection {
     };
     private final MinecraftServer f;
     public volatile boolean d;
-    private final List<ChannelFuture> g = Collections.synchronizedList(Lists.newArrayList());
-    private final List<NetworkManager> h = Collections.synchronizedList(Lists.newArrayList());
+    // SportBukkit start - fix decomp errors
+    private final List<ChannelFuture> g = Collections.synchronizedList(Lists.<ChannelFuture>newArrayList());
+    private final List<NetworkManager> h = Collections.synchronizedList(Lists.<NetworkManager>newArrayList());
+    // SportBukkit end
 
     public ServerConnection(MinecraftServer minecraftserver) {
         this.f = minecraftserver;
@@ -151,7 +153,7 @@ public class ServerConnection {
                             ServerConnection.e.warn("Failed to handle packet for {}", new Object[] { networkmanager.getSocketAddress(), exception});
                             final ChatComponentText chatcomponenttext = new ChatComponentText("Internal server error");
 
-                            networkmanager.sendPacket(new PacketPlayOutKickDisconnect(chatcomponenttext), new GenericFutureListener() {
+                            networkmanager.sendPacket(new PacketPlayOutKickDisconnect(chatcomponenttext), new GenericFutureListener<Future<? super Void>>() { // SportBukkit - fix decomp error
                                 public void operationComplete(Future<? super Void> future) throws Exception {
                                     networkmanager.close(chatcomponenttext);
                                 }
diff --git a/src/main/java/net/minecraft/server/SoundEffectType.java b/src/main/java/net/minecraft/server/SoundEffectType.java
--- a/src/main/java/net/minecraft/server/SoundEffectType.java
+++ b/src/main/java/net/minecraft/server/SoundEffectType.java
@@ -11,7 +11,7 @@ public class SoundEffectType {
     public static final SoundEffectType g = new SoundEffectType(1.0F, 1.0F, SoundEffects.ai, SoundEffects.am, SoundEffects.al, SoundEffects.ak, SoundEffects.aj);
     public static final SoundEffectType h = new SoundEffectType(1.0F, 1.0F, SoundEffects.fm, SoundEffects.fq, SoundEffects.fp, SoundEffects.fo, SoundEffects.fn);
     public static final SoundEffectType i = new SoundEffectType(1.0F, 1.0F, SoundEffects.gt, SoundEffects.gx, SoundEffects.gw, SoundEffects.gv, SoundEffects.gu);
-    public static final SoundEffectType j = new SoundEffectType(1.0F, 1.0F, SoundEffects.dl, SoundEffects.dp, SoundEffects.do, SoundEffects.dn, SoundEffects.dm);
+    public static final SoundEffectType j = new SoundEffectType(1.0F, 1.0F, SoundEffects.dl, SoundEffects.dp, SoundEffects.BLOCK_LADDER_PLACE, SoundEffects.dn, SoundEffects.dm); // SportBukkit - fix decomp
     public static final SoundEffectType k = new SoundEffectType(0.3F, 1.0F, SoundEffects.b, SoundEffects.h, SoundEffects.g, SoundEffects.e, SoundEffects.d);
     public static final SoundEffectType l = new SoundEffectType(1.0F, 1.0F, SoundEffects.fY, SoundEffects.gg, SoundEffects.ge, SoundEffects.gb, SoundEffects.ga);
     public final float m;
diff --git a/src/main/java/net/minecraft/server/SoundEffects.java b/src/main/java/net/minecraft/server/SoundEffects.java
--- a/src/main/java/net/minecraft/server/SoundEffects.java
+++ b/src/main/java/net/minecraft/server/SoundEffects.java
@@ -224,7 +224,7 @@ public class SoundEffects {
     public static final SoundEffect dl;
     public static final SoundEffect dm;
     public static final SoundEffect dn;
-    public static final SoundEffect do;
+    public static final SoundEffect BLOCK_LADDER_PLACE; // SportBukkit - fix decomp
     public static final SoundEffect dp;
     public static final SoundEffect dq;
     public static final SoundEffect dr;
@@ -475,7 +475,7 @@ public class SoundEffects {
     public static final SoundEffect ic;
     public static final SoundEffect id;
     public static final SoundEffect ie;
-    public static final SoundEffect if;
+    public static final SoundEffect ENTITY_ZOMBIE_ATTACK_DOOR_WOOD; // SportBukkit - fix decomp
     public static final SoundEffect ig;
     public static final SoundEffect ih;
     public static final SoundEffect ii;
@@ -732,7 +732,7 @@ public class SoundEffects {
             dl = a("block.ladder.break");
             dm = a("block.ladder.fall");
             dn = a("block.ladder.hit");
-            do = a("block.ladder.place");
+            BLOCK_LADDER_PLACE = a("block.ladder.place"); // SportBukkit - fix decomp
             dp = a("block.ladder.step");
             dq = a("block.lava.ambient");
             dr = a("block.lava.extinguish");
@@ -983,7 +983,7 @@ public class SoundEffects {
             ic = a("block.wood_pressureplate.click_on");
             id = a("block.wood.step");
             ie = a("entity.zombie.ambient");
-            if = a("entity.zombie.attack_door_wood");
+            ENTITY_ZOMBIE_ATTACK_DOOR_WOOD = a("entity.zombie.attack_door_wood"); // SportBukkit - fix decomp
             ig = a("entity.zombie.attack_iron_door");
             ih = a("entity.zombie.break_door_wood");
             ii = a("entity.zombie.death");
diff --git a/src/main/java/net/minecraft/server/WhiteList.java b/src/main/java/net/minecraft/server/WhiteList.java
--- a/src/main/java/net/minecraft/server/WhiteList.java
+++ b/src/main/java/net/minecraft/server/WhiteList.java
@@ -52,7 +52,9 @@ public class WhiteList extends JsonList<GameProfile, WhiteListEntry> {
         return (GameProfile) whitelistentry.getKey();
     }
 
+    /* SportBukkit - fix decomp error
     protected String a(Object object) {
         return this.b((GameProfile) object);
     }
+    SportBukkit */
 }
