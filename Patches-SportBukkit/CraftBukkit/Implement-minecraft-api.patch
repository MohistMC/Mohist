From: Jedediah Smith <jedediah@silencegreys.com>
Date: Thu, 4 Feb 2016 04:59:57 -0500
Subject: [PATCH] Implement minecraft-api


diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -73,6 +73,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
     public double maxHealthCache;
     public boolean joining = true;
     public String hostname;
+    public int protocolVersion;
     // CraftBukkit end
 
     public EntityPlayer(MinecraftServer minecraftserver, WorldServer worldserver, GameProfile gameprofile, PlayerInteractManager playerinteractmanager) {
diff --git a/src/main/java/net/minecraft/server/HandshakeListener.java b/src/main/java/net/minecraft/server/HandshakeListener.java
--- a/src/main/java/net/minecraft/server/HandshakeListener.java
+++ b/src/main/java/net/minecraft/server/HandshakeListener.java
@@ -70,6 +70,7 @@ public class HandshakeListener implements PacketHandshakingInListener {
                 this.b.sendPacket(new PacketLoginOutDisconnect(chatcomponenttext));
                 this.b.close(chatcomponenttext);
             } else {
+                this.b.protocolVersion = packethandshakinginsetprotocol.b(); // SportBukkit
                 this.b.setPacketListener(new LoginListener(this.a, this.b));
 
                 // SportBukkit Start - BungeeCord support
diff --git a/src/main/java/net/minecraft/server/NetworkManager.java b/src/main/java/net/minecraft/server/NetworkManager.java
--- a/src/main/java/net/minecraft/server/NetworkManager.java
+++ b/src/main/java/net/minecraft/server/NetworkManager.java
@@ -70,6 +70,7 @@ public class NetworkManager extends SimpleChannelInboundHandler<Packet<?>> {
     public java.util.UUID spoofedUUID;
     public com.mojang.authlib.properties.Property[] spoofedProfile;
     // SportBukkit End
+    public int protocolVersion; // SportBukkit
     private PacketListener m;
     private IChatBaseComponent n;
     private boolean o;
diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -469,6 +469,7 @@ public abstract class PlayerList {
 
         EntityPlayer entity = new EntityPlayer(server, server.getWorldServer(0), gameprofile, new PlayerInteractManager(server.getWorldServer(0)));
         entity.hostname = hostname;
+        entity.protocolVersion = loginlistener.networkManager.protocolVersion; // Can't reach NetworkManager through CraftPlayer at this point, so copy the value
 
         Player player = entity.getBukkitEntity();
         PlayerLoginEvent event = new PlayerLoginEvent(player, hostname, ((java.net.InetSocketAddress) socketaddress).getAddress());
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -120,6 +120,7 @@ import com.avaje.ebeaninternal.server.lib.sql.TransactionIsolation;
 import com.google.common.base.Charsets;
 import com.google.common.base.Function;
 import com.google.common.collect.ImmutableList;
+import com.google.common.collect.ImmutableSet;
 import com.google.common.collect.Lists;
 import com.google.common.collect.MapMaker;
 import com.mojang.authlib.GameProfile;
@@ -131,6 +132,7 @@ import io.netty.handler.codec.base64.Base64;
 import jline.console.ConsoleReader;
 import org.bukkit.event.server.TabCompleteEvent;
 import net.md_5.bungee.api.chat.BaseComponent;
+import tc.oc.minecraft.api.plugin.PluginFinder;
 
 public final class CraftServer implements Server {
     private static final Player[] EMPTY_PLAYER_ARRAY = new Player[0];
@@ -632,6 +634,11 @@ public final class CraftServer implements Server {
     }
 
     @Override
+    public PluginFinder getPluginFinder() {
+        return pluginManager;
+    }
+
+    @Override
     public CraftScheduler getScheduler() {
         return scheduler;
     }
@@ -1789,4 +1796,9 @@ public final class CraftServer implements Server {
             player.sendMessage(components);
         }
     }
+
+    @Override
+    public Set<Integer> getProtocolVersions() {
+        return ImmutableSet.of(315);
+    }
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/command/ProxiedNativeCommandSender.java b/src/main/java/org/bukkit/craftbukkit/command/ProxiedNativeCommandSender.java
--- a/src/main/java/org/bukkit/craftbukkit/command/ProxiedNativeCommandSender.java
+++ b/src/main/java/org/bukkit/craftbukkit/command/ProxiedNativeCommandSender.java
@@ -3,6 +3,8 @@ package org.bukkit.craftbukkit.command;
 
 import java.util.Collection;
 import java.util.Set;
+
+import net.md_5.bungee.api.chat.BaseComponent;
 import net.minecraft.server.ICommandListener;
 
 import org.bukkit.Server;
@@ -50,6 +52,16 @@ public class ProxiedNativeCommandSender implements ProxiedCommandSender {
     }
 
     @Override
+    public void sendMessage(BaseComponent... message) {
+        getCaller().sendMessage(message);
+    }
+
+    @Override
+    public void sendMessage(BaseComponent message) {
+        getCaller().sendMessage(message);
+    }
+
+    @Override
     public Server getServer() {
         return getCallee().getServer();
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/command/ServerCommandSender.java b/src/main/java/org/bukkit/craftbukkit/command/ServerCommandSender.java
--- a/src/main/java/org/bukkit/craftbukkit/command/ServerCommandSender.java
+++ b/src/main/java/org/bukkit/craftbukkit/command/ServerCommandSender.java
@@ -1,5 +1,6 @@
 package org.bukkit.craftbukkit.command;
 
+import net.md_5.bungee.api.chat.BaseComponent;
 import org.bukkit.Bukkit;
 import org.bukkit.Server;
 import org.bukkit.command.CommandSender;
@@ -134,4 +135,14 @@ public abstract class ServerCommandSender implements CommandSender {
     public String getName(CommandSender viewer) {
         return this.getName();
     }
+
+    @Override
+    public void sendMessage(BaseComponent... message) {
+        sendMessage(BaseComponent.toLegacyText(message));
+    }
+
+    @Override
+    public void sendMessage(BaseComponent message) {
+        sendMessage(BaseComponent.toLegacyText(message));
+    }
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -6,6 +6,7 @@ import java.util.List;
 import java.util.Set;
 import java.util.UUID;
 
+import net.md_5.bungee.api.chat.BaseComponent;
 import net.minecraft.server.*;
 
 import org.bukkit.EntityEffect;
@@ -510,6 +511,14 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
     }
 
     @Override
+    public void sendMessage(BaseComponent... message) {
+    }
+
+    @Override
+    public void sendMessage(BaseComponent message) {
+    }
+
+    @Override
     public String getName() {
         return getHandle().getName();
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -15,6 +15,7 @@ import java.util.Collection;
 import java.util.HashSet;
 import java.util.LinkedHashMap;
 import java.util.List;
+import java.util.Locale;
 import java.util.Map;
 import java.util.Set;
 import java.util.UUID;
@@ -1822,6 +1823,35 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     }
 
     @Override
+    public java.util.Locale getCurrentLocale() {
+        try {
+            final String[] parts = getLocale().split("[-_]");
+            switch(parts.length) {
+                case 0: return java.util.Locale.US;
+                case 1: return new Locale(parts[0]);
+                case 2: return new Locale(parts[0], parts[1]);
+                default: return new Locale(parts[0], parts[1], parts[2]);
+            }
+        } catch(IllegalArgumentException e) {
+            return java.util.Locale.US;
+        }
+    }
+
+    @Override
+    public void sendMessage(net.md_5.bungee.api.ChatMessageType position, BaseComponent... message) {
+        if ( getHandle().playerConnection == null ) return;
+
+        PacketPlayOutChat packet = new PacketPlayOutChat(null, (byte) position.ordinal());
+        packet.components = message;
+        getHandle().playerConnection.sendPacket(packet);
+    }
+
+    @Override
+    public void sendMessage(net.md_5.bungee.api.ChatMessageType position, BaseComponent message) {
+        sendMessage(position, new BaseComponent[] {message});
+    }
+
+    @Override
     public void sendMessage(BaseComponent component) {
       sendMessage( new BaseComponent[] { component } );
     }
@@ -1932,4 +1962,9 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     public RayBlockIntersection getTargetedBlock(boolean nonSolids, boolean liquids) {
         return getTargetedBlock(getBlockReach(), nonSolids, liquids);
     }
+
+    @Override
+    public int getProtocolVersion() {
+        return getHandle().protocolVersion;
+    }
 }
