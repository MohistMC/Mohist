From: Jedediah Smith <jedediah@silencegreys.com>
Date: Mon, 29 Jun 2015 04:47:28 -0400
Subject: [PATCH] Potion effect events


diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -21,6 +21,7 @@ import org.bukkit.Location;
 import org.bukkit.craftbukkit.attribute.CraftAttributeMap;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.potion.CraftPotionUtils;
 import org.bukkit.entity.LivingEntity;
 import org.bukkit.entity.Player;
 import org.bukkit.event.entity.EntityDamageEvent;
@@ -28,6 +29,10 @@ import org.bukkit.event.entity.EntityDamageEvent.DamageModifier;
 import org.bukkit.event.entity.EntityRegainHealthEvent;
 import org.bukkit.event.entity.EntityResurrectEvent;
 import org.bukkit.event.entity.EntityTeleportEvent;
+import org.bukkit.event.entity.PotionEffectAddEvent;
+import org.bukkit.event.entity.PotionEffectExpireEvent;
+import org.bukkit.event.entity.PotionEffectExtendEvent;
+import org.bukkit.event.entity.PotionEffectRemoveEvent;
 import org.bukkit.event.player.PlayerItemConsumeEvent;
 import org.bukkit.event.vehicle.VehicleExitEvent;
 import org.bukkit.craftbukkit.entity.CraftLivingEntity;
@@ -525,42 +530,35 @@ public abstract class EntityLiving extends Entity {
 
     }
 
-    // CraftBukkit start
-    private boolean isTickingEffects = false;
-    private List<Object> effectsToProcess = Lists.newArrayList();
-    // CraftBukkit end
-
     protected void tickPotionEffects() {
-        Iterator iterator = this.effects.keySet().iterator();
-
-        isTickingEffects = true; // CraftBukkit
-        try {
-            while (iterator.hasNext()) {
-                MobEffectList mobeffectlist = (MobEffectList) iterator.next();
-                MobEffect mobeffect = (MobEffect) this.effects.get(mobeffectlist);
-
-                if (!mobeffect.tick(this)) {
-                    if (!this.world.isClientSide) {
-                        iterator.remove();
-                        this.b(mobeffect);
+        Iterator<MobEffectList> iterator = com.google.common.collect.ImmutableSet.copyOf(this.effects.keySet()).iterator(); // SportBukkit - copy to allow concurrent modification
+
+        while (iterator.hasNext()) {
+            MobEffectList mobeffectlist = (MobEffectList) iterator.next();
+            if(!this.effects.keySet().contains(mobeffectlist)) continue; // SportBukkit - skip if effect was removed during iteration
+            MobEffect mobeffect = (MobEffect) this.effects.get(mobeffectlist);
+
+            if (!mobeffect.tick(this)) {
+                if (!this.world.isClientSide) {
+                    // SportBukkit start - fire event
+                    PotionEffectExpireEvent event = new PotionEffectExpireEvent((LivingEntity) this.getBukkitEntity(),
+                                                                                CraftPotionUtils.toBukkit(mobeffect));
+                    this.world.getServer().getPluginManager().callEvent(event);
+                    if(event.isCancelled()) {
+                        // Duration must be extended if event is cancelled
+                        CraftPotionUtils.extendDuration(mobeffect, event.getDuration());
+                        continue;
                     }
-                } else if (mobeffect.getDuration() % 600 == 0) {
-                    this.a(mobeffect, false);
+
+                    //iterator.remove();
+                    this.effects.remove(mobeffectlist);
+                    // SportBukkit end
+                    this.b(mobeffect);
                 }
+            } else if (mobeffect.getDuration() % 600 == 0) {
+                this.a(mobeffect, false);
             }
-        } catch (ConcurrentModificationException concurrentmodificationexception) {
-            ;
         }
-        // CraftBukkit start
-        isTickingEffects = false;
-        for (Object e : effectsToProcess) {
-            if (e instanceof MobEffect) {
-                addEffect((MobEffect) e);
-            } else {
-                removeEffect((MobEffectList) e);
-            }
-        }
-        // CraftBukkit end
 
         if (this.updateEffects) {
             if (!this.world.isClientSide) {
@@ -643,11 +641,14 @@ public abstract class EntityLiving extends Entity {
 
     public void removeAllEffects() {
         if (!this.world.isClientSide) {
-            Iterator iterator = this.effects.values().iterator();
+            Iterator<MobEffectList> iterator = com.google.common.collect.ImmutableSet.copyOf(this.effects.keySet()).iterator(); // SportBukkit - copy to allow concurrent modification
 
             while (iterator.hasNext()) {
-                this.b((MobEffect) iterator.next());
-                iterator.remove();
+                // SportBukkit start - go through method that fires event
+                this.removeEffect(iterator.next());
+                //this.b((MobEffect) iterator.next());
+                //iterator.remove();
+                // SportBukkit end
             }
 
         }
@@ -667,19 +668,26 @@ public abstract class EntityLiving extends Entity {
     }
 
     public void addEffect(MobEffect mobeffect) {
-        // CraftBukkit start
-        if (isTickingEffects) {
-            effectsToProcess.add(mobeffect);
-            return;
-        }
-        // CraftBukkit end
         if (this.d(mobeffect)) {
             MobEffect mobeffect1 = (MobEffect) this.effects.get(mobeffect.getMobEffect());
 
             if (mobeffect1 == null) {
+                // SportBukkit start - fire event
+                PotionEffectAddEvent event = new PotionEffectAddEvent((LivingEntity) this.getBukkitEntity(),
+                                                                      CraftPotionUtils.toBukkit(mobeffect));
+                this.world.getServer().getPluginManager().callEvent(event);
+                if(event.isCancelled()) return;
+                // SportBukkit end
                 this.effects.put(mobeffect.getMobEffect(), mobeffect);
                 this.a(mobeffect);
             } else {
+                // SportBukkit start - fire event
+                PotionEffectExtendEvent event = new PotionEffectExtendEvent((LivingEntity) this.getBukkitEntity(),
+                                                                            CraftPotionUtils.toBukkit(mobeffect),
+                                                                            CraftPotionUtils.toBukkit(this.effects.get(mobeffect.getMobEffect())));
+                this.world.getServer().getPluginManager().callEvent(event);
+                if(event.isCancelled()) return;
+                // SportBukkit end
                 mobeffect1.a(mobeffect);
                 this.a(mobeffect1, true);
             }
@@ -705,12 +713,6 @@ public abstract class EntityLiving extends Entity {
 
     @Nullable
     public MobEffect c(@Nullable MobEffectList mobeffectlist) {
-        // CraftBukkit start
-        if (isTickingEffects) {
-            effectsToProcess.add(mobeffectlist);
-            return null;
-        }
-        // CraftBukkit end
         return (MobEffect) this.effects.remove(mobeffectlist);
     }
 
@@ -718,6 +720,16 @@ public abstract class EntityLiving extends Entity {
         MobEffect mobeffect = this.c(mobeffectlist);
 
         if (mobeffect != null) {
+            // SportBukkit start
+            PotionEffectRemoveEvent event = new PotionEffectRemoveEvent((LivingEntity) this.getBukkitEntity(),
+                                                                        CraftPotionUtils.toBukkit(mobeffect));
+            this.world.getServer().getPluginManager().callEvent(event);
+            if(event.isCancelled()) {
+                this.effects.put(mobeffectlist, mobeffect);
+                return;
+            }
+            // SportBukkit end
+
             this.b(mobeffect);
         }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/potion/CraftPotionUtils.java b/src/main/java/org/bukkit/craftbukkit/potion/CraftPotionUtils.java
new file mode 100644
index 0000000..ef29a03
--- /dev/null
+++ b/src/main/java/org/bukkit/craftbukkit/potion/CraftPotionUtils.java
@@ -0,0 +1,42 @@
+package org.bukkit.craftbukkit.potion;
+
+import net.minecraft.server.MobEffect;
+import net.minecraft.server.MobEffectList;
+import org.bukkit.potion.PotionEffect;
+import org.bukkit.potion.PotionEffectType;
+
+public class CraftPotionUtils {
+    private CraftPotionUtils() {}
+
+    public static PotionEffectType toBukkit(MobEffectList nms) {
+        return PotionEffectType.getById(MobEffectList.getId(nms));
+    }
+
+    public static PotionEffect toBukkit(MobEffect effect) {
+        return new PotionEffect(toBukkit(effect.getMobEffect()),
+                                effect.getDuration(),
+                                effect.getAmplifier(),
+                                effect.isAmbient(),
+                                effect.isShowParticles());
+    }
+
+    public static MobEffectList toNMS(PotionEffectType effect) {
+        return MobEffectList.fromId(effect.getId());
+    }
+
+    public static MobEffect toNMS(PotionEffect effect) {
+        return new MobEffect(toNMS(effect.getType()),
+                             effect.getDuration(),
+                             effect.getAmplifier(),
+                             effect.isAmbient(),
+                             effect.hasParticles());
+    }
+
+    public static MobEffect cloneWithDuration(MobEffect effect, int duration) {
+        return new MobEffect(effect.getMobEffect(), duration, effect.getAmplifier(), effect.isAmbient(), effect.isShowParticles());
+    }
+
+    public static void extendDuration(MobEffect effect, int duration) {
+        effect.a(cloneWithDuration(effect, duration));
+    }
+}
